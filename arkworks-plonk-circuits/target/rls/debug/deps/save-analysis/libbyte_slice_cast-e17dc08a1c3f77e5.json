{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0","program":"/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","byte_slice_cast","--edition=2018","/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=e17dc08a1c3f77e5","-C","extra-filename=-e17dc08a1c3f77e5","--out-dir","/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","-L","dependency=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin"],"output":"/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libbyte_slice_cast-e17dc08a1c3f77e5.rmeta"},"prelude":{"crate_id":{"name":"byte_slice_cast","disambiguator":[2659105080458844696,0]},"crate_root":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src","external_crates":[{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10313591498153884623,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5231689799850066461,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17864008973282999150,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17296295565214172833,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2118848927325286491,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13292461249116594054,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4814502004061530608,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15708407810567005444,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2791263468303431766,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6506189918680636659,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8728067978980854181,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10381178398037116026,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10719114933783356113,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[903433031267741442,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[3053230250002770710,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[4944501850750929564,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[675967159280285970,0]}}],"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":172,"byte_end":30791,"line_start":5,"line_end":990,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":172,"byte_end":30791,"line_start":5,"line_end":990,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":80},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":298},{"krate":0,"index":305},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":329},{"krate":0,"index":336},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":360},{"krate":0,"index":367},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":391},{"krate":0,"index":398},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":422},{"krate":0,"index":429},{"krate":0,"index":436},{"krate":0,"index":440},{"krate":0,"index":453},{"krate":0,"index":460},{"krate":0,"index":467},{"krate":0,"index":471},{"krate":0,"index":484},{"krate":0,"index":491},{"krate":0,"index":498},{"krate":0,"index":502},{"krate":0,"index":515},{"krate":0,"index":522},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":546},{"krate":0,"index":553},{"krate":0,"index":560},{"krate":0,"index":564},{"krate":0,"index":577},{"krate":0,"index":584},{"krate":0,"index":591},{"krate":0,"index":595},{"krate":0,"index":608},{"krate":0,"index":615},{"krate":0,"index":622},{"krate":0,"index":626},{"krate":0,"index":639},{"krate":0,"index":646},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":670},{"krate":0,"index":677},{"krate":0,"index":684},{"krate":0,"index":688},{"krate":0,"index":701},{"krate":0,"index":708},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":77}],"decl_id":null,"docs":" Safely cast bytes slices from/to slices of built-in fundamental numeric types.","sig":null,"attributes":[{"value":"/ Safely cast bytes slices from/to slices of built-in fundamental numeric types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":216,"byte_end":298,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":299,"byte_end":302,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The provided traits here allow safe casting between byte slices and slices of fundamental","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":303,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"/ numeric types, like integers and floating point numbers. During casting, checks are performed","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":397,"byte_end":494,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ to ensure that the output slice is safe to use: the input slice must be properly aligned for","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":495,"byte_end":591,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ the output type and contain an integer number of values.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":592,"byte_end":652,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":653,"byte_end":656,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instead of working only on slices, the traits work on `AsRef<[T]>` in the immutable case and on","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":657,"byte_end":756,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ `AsMut<[T]>` for the mutable case. As such, it is possible to directly work on e.g. `Vec<T>`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":757,"byte_end":853,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ and `Box<[T]>` too.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":854,"byte_end":877,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":878,"byte_end":881,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The content of the output slice will be bitwise equivalent to the input slice, as such extra","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":882,"byte_end":978,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ care has to be taken with regard to endianness.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":979,"byte_end":1030,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1031,"byte_end":1034,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Example with slices","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1035,"byte_end":1060,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1061,"byte_end":1068,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1069,"byte_end":1104,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1105,"byte_end":1122,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1123,"byte_end":1150,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let slice = [0x0102u16, 0x0304u16, 0x0506u16];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1155,"byte_end":1205,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let converted_slice = slice.as_byte_slice();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1210,"byte_end":1258,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1259,"byte_end":1262,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1263,"byte_end":1299,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &[1, 2, 3, 4, 5, 6]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1300,"byte_end":1357,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1358,"byte_end":1370,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &[2, 1, 4, 3, 6, 5]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1371,"byte_end":1428,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1429,"byte_end":1434,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1435,"byte_end":1438,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let converted_back_slice = converted_slice.as_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1439,"byte_end":1516,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1517,"byte_end":1520,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(converted_back_slice, &slice);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1521,"byte_end":1566,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1567,"byte_end":1574,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1575,"byte_end":1582,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1583,"byte_end":1586,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Example with mutable slices","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1587,"byte_end":1620,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1621,"byte_end":1628,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1629,"byte_end":1664,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1665,"byte_end":1682,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1683,"byte_end":1710,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1711,"byte_end":1714,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let mut slice = [0u32; 1];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1715,"byte_end":1745,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/ let mut converted_slice = slice.as_mut_byte_slice();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1746,"byte_end":1802,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/ converted_slice.copy_from_slice(&[0x12, 0x34, 0x56, 0x78]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1803,"byte_end":1866,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1867,"byte_end":1870,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let mut converted_slice = converted_slice.as_mut_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1871,"byte_end":1951,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ converted_slice[0] = 0xffff;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1952,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":1989,"byte_end":2025,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(&slice, &[0xffff5678]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2026,"byte_end":2068,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2069,"byte_end":2081,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(&slice, &[0x7856ffff]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2082,"byte_end":2124,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2125,"byte_end":2130,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2131,"byte_end":2134,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2135,"byte_end":2142,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2143,"byte_end":2150,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":81},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2503,"byte_end":2520,"line_start":76,"line_end":76,"column_start":5,"column_end":22},"name":"AlignmentMismatch","qualname":"::Error::AlignmentMismatch","value":"Error::AlignmentMismatch { dst_type, dst_minimum_alignment }","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" The input slice is not properly aligned for the\n output data type. E.g. for an `u32` output slice\n the memory must be 4-byte aligned.\n","sig":null,"attributes":[{"value":"/ The input slice is not properly aligned for the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2347,"byte_end":2398,"line_start":73,"line_end":73,"column_start":5,"column_end":56}},{"value":"/ output data type. E.g. for an `u32` output slice","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2403,"byte_end":2455,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ the memory must be 4-byte aligned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2460,"byte_end":2498,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":84},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2702,"byte_end":2716,"line_start":82,"line_end":82,"column_start":5,"column_end":19},"name":"LengthMismatch","qualname":"::Error::LengthMismatch","value":"Error::LengthMismatch { dst_type, src_slice_size, dst_type_size }","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" A non-integer number of values from the output\n type would be in the output slice.\n","sig":null,"attributes":[{"value":"/ A non-integer number of values from the output","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2604,"byte_end":2654,"line_start":80,"line_end":80,"column_start":5,"column_end":55}},{"value":"/ type would be in the output slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2659,"byte_end":2697,"line_start":81,"line_end":81,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":80},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2335,"byte_end":2340,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    AlignmentMismatch {\n        dst_type: &'static str,\n        dst_minimum_alignment: usize,\n    },\n    LengthMismatch {\n        dst_type: &'static str,\n        src_slice_size: usize,\n        dst_type_size: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":84}],"decl_id":null,"docs":" Possible errors during slice conversion.\n","sig":null,"attributes":[{"value":"/ Possible errors during slice conversion.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2242,"byte_end":2286,"line_start":70,"line_end":70,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10364,"byte_end":10377,"line_start":318,"line_end":318,"column_start":18,"column_end":31},"name":"FromByteSlice","qualname":"::FromByteSlice","value":"FromByteSlice","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36}],"decl_id":null,"docs":" Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10063,"byte_end":10157,"line_start":312,"line_end":312,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10158,"byte_end":10161,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ This trait is an implementation detail. Use the [`AsSliceOf`] and [`AsMutSliceOf`] traits.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10162,"byte_end":10256,"line_start":314,"line_end":314,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10257,"byte_end":10260,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ [`AsSliceOf`]: trait.AsSliceOf.html","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10261,"byte_end":10300,"line_start":316,"line_end":316,"column_start":1,"column_end":40}},{"value":"/ [`AsMutSliceOf`]: trait.AsMutSliceOf.html","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10301,"byte_end":10346,"line_start":317,"line_end":317,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10524,"byte_end":10539,"line_start":324,"line_end":324,"column_start":8,"column_end":23},"name":"from_byte_slice","qualname":"::FromByteSlice::from_byte_slice","value":"pub fn from_byte_slice<T: AsRef<[u8]> + ?Sized>(&T) -> Result<&[Self], Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Convert from an immutable byte slice to a immutable slice of a fundamental, built-in\n numeric type\n","sig":null,"attributes":[{"value":"/ Convert from an immutable byte slice to a immutable slice of a fundamental, built-in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10407,"byte_end":10495,"line_start":322,"line_end":322,"column_start":5,"column_end":93}},{"value":"/ numeric type","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10500,"byte_end":10516,"line_start":323,"line_end":323,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10720,"byte_end":10739,"line_start":327,"line_end":327,"column_start":8,"column_end":27},"name":"from_mut_byte_slice","qualname":"::FromByteSlice::from_mut_byte_slice","value":"pub fn from_mut_byte_slice<T: AsMut<[u8]> + ?Sized>(&mut T)\n-> Result<&mut [Self], Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Convert from an mutable byte slice to a mutable slice of a fundamental, built-in numeric\n type\n","sig":null,"attributes":[{"value":"/ Convert from an mutable byte slice to a mutable slice of a fundamental, built-in numeric","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10607,"byte_end":10699,"line_start":325,"line_end":325,"column_start":5,"column_end":97}},{"value":"/ type","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10704,"byte_end":10712,"line_start":326,"line_end":326,"column_start":5,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11079,"byte_end":11090,"line_start":336,"line_end":336,"column_start":18,"column_end":29},"name":"ToByteSlice","qualname":"::ToByteSlice","value":"ToByteSlice","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" Trait for converting from an immutable slice of a fundamental, built-in numeric type to an\n immutable byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from an immutable slice of a fundamental, built-in numeric type to an","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10814,"byte_end":10908,"line_start":330,"line_end":330,"column_start":1,"column_end":95}},{"value":"/ immutable byte slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10909,"byte_end":10934,"line_start":331,"line_end":331,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10935,"byte_end":10938,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ This trait is an implementation detail. Use the [`AsByteSlice`] trait.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":10939,"byte_end":11013,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11014,"byte_end":11017,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ [`AsByteSlice`]: trait.AsByteSlice.html","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11018,"byte_end":11061,"line_start":335,"line_end":335,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11238,"byte_end":11251,"line_start":342,"line_end":342,"column_start":8,"column_end":21},"name":"to_byte_slice","qualname":"::ToByteSlice::to_byte_slice","value":"pub fn to_byte_slice<T: AsRef<[Self]> + ?Sized>(&T) -> &[u8]","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Convert from an immutable slice of a fundamental, built-in numeric type to an immutable\n byte slice\n","sig":null,"attributes":[{"value":"/ Convert from an immutable slice of a fundamental, built-in numeric type to an immutable","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11120,"byte_end":11211,"line_start":340,"line_end":340,"column_start":5,"column_end":96}},{"value":"/ byte slice","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11216,"byte_end":11230,"line_start":341,"line_end":341,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11571,"byte_end":11585,"line_start":351,"line_end":351,"column_start":18,"column_end":32},"name":"ToMutByteSlice","qualname":"::ToMutByteSlice","value":"ToMutByteSlice","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable\n byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11303,"byte_end":11401,"line_start":345,"line_end":345,"column_start":1,"column_end":99}},{"value":"/ byte slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11402,"byte_end":11417,"line_start":346,"line_end":346,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11418,"byte_end":11421,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ This trait is an implementation detail. Use the [`AsMutByteSlice`] trait.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11422,"byte_end":11499,"line_start":348,"line_end":348,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11500,"byte_end":11503,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ [`AsMutByteSlice`]: trait.AsMutByteSlice.html","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11504,"byte_end":11553,"line_start":350,"line_end":350,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11727,"byte_end":11744,"line_start":357,"line_end":357,"column_start":8,"column_end":25},"name":"to_mut_byte_slice","qualname":"::ToMutByteSlice::to_mut_byte_slice","value":"pub fn to_mut_byte_slice<T: AsMut<[Self]> + ?Sized>(&mut T) -> &mut [u8]","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Convert from a mutable slice of a fundamental, built-in numeric type to a mutable byte\n slice\n","sig":null,"attributes":[{"value":"/ Convert from a mutable slice of a fundamental, built-in numeric type to a mutable byte","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11615,"byte_end":11705,"line_start":355,"line_end":355,"column_start":5,"column_end":95}},{"value":"/ slice","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11710,"byte_end":11719,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12342,"byte_end":12351,"line_start":378,"line_end":378,"column_start":11,"column_end":20},"name":"AsSliceOf","qualname":"::AsSliceOf","value":"AsSliceOf","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11804,"byte_end":11898,"line_start":360,"line_end":360,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11899,"byte_end":11902,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11903,"byte_end":11916,"line_start":362,"line_end":362,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11917,"byte_end":11930,"line_start":363,"line_end":363,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11931,"byte_end":11966,"line_start":364,"line_end":364,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11967,"byte_end":11984,"line_start":365,"line_end":365,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":11985,"byte_end":12012,"line_start":366,"line_end":366,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12013,"byte_end":12016,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ let slice = [1u8, 2u8, 3u8, 4u8, 5u8, 6u8];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12017,"byte_end":12064,"line_start":368,"line_end":368,"column_start":1,"column_end":48}},{"value":"/ let converted_slice = slice.as_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12065,"byte_end":12127,"line_start":369,"line_end":369,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12128,"byte_end":12131,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12132,"byte_end":12168,"line_start":371,"line_end":371,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &[0x0102, 0x0304, 0x0506]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12169,"byte_end":12232,"line_start":372,"line_end":372,"column_start":1,"column_end":64}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12233,"byte_end":12245,"line_start":373,"line_end":373,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &[0x0201, 0x0403, 0x0605]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12246,"byte_end":12309,"line_start":374,"line_end":374,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12310,"byte_end":12315,"line_start":375,"line_end":375,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12316,"byte_end":12323,"line_start":376,"line_end":376,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12324,"byte_end":12331,"line_start":377,"line_end":377,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12361,"byte_end":12372,"line_start":379,"line_end":379,"column_start":8,"column_end":19},"name":"as_slice_of","qualname":"::AsSliceOf::as_slice_of","value":"pub fn as_slice_of<T: FromByteSlice>(&Self) -> Result<&[T], Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13162,"byte_end":13174,"line_start":407,"line_end":407,"column_start":11,"column_end":23},"name":"AsMutSliceOf","qualname":"::AsMutSliceOf","value":"AsMutSliceOf","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Trait for converting from a mutable byte slice to a mutable slice of a fundamental, built-in\n numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a mutable byte slice to a mutable slice of a fundamental, built-in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12596,"byte_end":12692,"line_start":388,"line_end":388,"column_start":1,"column_end":97}},{"value":"/ numeric type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12693,"byte_end":12710,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12711,"byte_end":12714,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12715,"byte_end":12728,"line_start":391,"line_end":391,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12729,"byte_end":12742,"line_start":392,"line_end":392,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12743,"byte_end":12778,"line_start":393,"line_end":393,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12779,"byte_end":12796,"line_start":394,"line_end":394,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12797,"byte_end":12824,"line_start":395,"line_end":395,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12825,"byte_end":12828,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ let mut slice = [1u8, 2u8, 3u8, 4u8, 5u8, 6u8];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12829,"byte_end":12880,"line_start":397,"line_end":397,"column_start":1,"column_end":52}},{"value":"/ let converted_slice = slice.as_mut_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12881,"byte_end":12947,"line_start":398,"line_end":398,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12948,"byte_end":12951,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12952,"byte_end":12988,"line_start":400,"line_end":400,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &[0x0102, 0x0304, 0x0506]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12989,"byte_end":13052,"line_start":401,"line_end":401,"column_start":1,"column_end":64}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13053,"byte_end":13065,"line_start":402,"line_end":402,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &[0x0201, 0x0403, 0x0605]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13066,"byte_end":13129,"line_start":403,"line_end":403,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13130,"byte_end":13135,"line_start":404,"line_end":404,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13136,"byte_end":13143,"line_start":405,"line_end":405,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13144,"byte_end":13151,"line_start":406,"line_end":406,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13184,"byte_end":13199,"line_start":408,"line_end":408,"column_start":8,"column_end":23},"name":"as_mut_slice_of","qualname":"::AsMutSliceOf::as_mut_slice_of","value":"pub fn as_mut_slice_of<T: FromByteSlice>(&mut Self) -> Result<&mut [T], Error>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14016,"byte_end":14027,"line_start":436,"line_end":436,"column_start":11,"column_end":22},"name":"AsByteSlice","qualname":"::AsByteSlice","value":"AsByteSlice<T>","parent":null,"children":[{"krate":0,"index":60}],"decl_id":null,"docs":" Trait for converting from an immutable slice of a fundamental, built-in numeric type to an\n immutable byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from an immutable slice of a fundamental, built-in numeric type to an","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13450,"byte_end":13544,"line_start":417,"line_end":417,"column_start":1,"column_end":95}},{"value":"/ immutable byte slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13545,"byte_end":13570,"line_start":418,"line_end":418,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13571,"byte_end":13574,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13575,"byte_end":13588,"line_start":420,"line_end":420,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13589,"byte_end":13602,"line_start":421,"line_end":421,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13603,"byte_end":13638,"line_start":422,"line_end":422,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13639,"byte_end":13656,"line_start":423,"line_end":423,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13657,"byte_end":13684,"line_start":424,"line_end":424,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13685,"byte_end":13688,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ let slice: [u16; 3] = [0x0102, 0x0304, 0x0506];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13689,"byte_end":13740,"line_start":426,"line_end":426,"column_start":1,"column_end":52}},{"value":"/ let converted_slice = slice.as_byte_slice();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13741,"byte_end":13789,"line_start":427,"line_end":427,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13790,"byte_end":13793,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13794,"byte_end":13830,"line_start":429,"line_end":429,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &[1u8, 2u8, 3u8, 4u8, 5u8, 6u8]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13831,"byte_end":13900,"line_start":430,"line_end":430,"column_start":1,"column_end":70}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13901,"byte_end":13913,"line_start":431,"line_end":431,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &[2u8, 1u8, 4u8, 3u8, 6u8, 5u8]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13914,"byte_end":13983,"line_start":432,"line_end":432,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13984,"byte_end":13989,"line_start":433,"line_end":433,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13990,"byte_end":13997,"line_start":434,"line_end":434,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13998,"byte_end":14005,"line_start":435,"line_end":435,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14040,"byte_end":14053,"line_start":437,"line_end":437,"column_start":8,"column_end":21},"name":"as_byte_slice","qualname":"::AsByteSlice::as_byte_slice","value":"pub fn as_byte_slice(&Self) -> &[u8]","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":65},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14807,"byte_end":14821,"line_start":465,"line_end":465,"column_start":11,"column_end":25},"name":"AsMutByteSlice","qualname":"::AsMutByteSlice","value":"AsMutByteSlice<T>","parent":null,"children":[{"krate":0,"index":67}],"decl_id":null,"docs":" Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable\n byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14231,"byte_end":14329,"line_start":446,"line_end":446,"column_start":1,"column_end":99}},{"value":"/ byte slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14330,"byte_end":14345,"line_start":447,"line_end":447,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14346,"byte_end":14349,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14350,"byte_end":14363,"line_start":449,"line_end":449,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14364,"byte_end":14377,"line_start":450,"line_end":450,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14378,"byte_end":14413,"line_start":451,"line_end":451,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14414,"byte_end":14431,"line_start":452,"line_end":452,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14432,"byte_end":14459,"line_start":453,"line_end":453,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14460,"byte_end":14463,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let mut slice: [u16; 3] = [0x0102, 0x0304, 0x0506];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14464,"byte_end":14519,"line_start":455,"line_end":455,"column_start":1,"column_end":56}},{"value":"/ let converted_slice = slice.as_mut_byte_slice();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14520,"byte_end":14572,"line_start":456,"line_end":456,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14573,"byte_end":14576,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14577,"byte_end":14613,"line_start":458,"line_end":458,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &mut [1u8, 2u8, 3u8, 4u8, 5u8, 6u8]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14614,"byte_end":14687,"line_start":459,"line_end":459,"column_start":1,"column_end":74}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14688,"byte_end":14700,"line_start":460,"line_end":460,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &mut [2u8, 1u8, 4u8, 3u8, 6u8, 5u8]);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14701,"byte_end":14774,"line_start":461,"line_end":461,"column_start":1,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14775,"byte_end":14780,"line_start":462,"line_end":462,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14781,"byte_end":14788,"line_start":463,"line_end":463,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14789,"byte_end":14796,"line_start":464,"line_end":464,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14834,"byte_end":14851,"line_start":466,"line_end":466,"column_start":8,"column_end":25},"name":"as_mut_byte_slice","qualname":"::AsMutByteSlice::as_mut_byte_slice","value":"pub fn as_mut_byte_slice(&mut Self) -> &mut [u8]","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2844,"byte_end":2849,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":3990,"byte_end":3995,"line_start":129,"line_end":129,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12469,"byte_end":12470,"line_start":382,"line_end":382,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13307,"byte_end":13308,"line_start":411,"line_end":411,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14138,"byte_end":14139,"line_start":440,"line_end":440,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14950,"byte_end":14951,"line_start":469,"line_end":469,"column_start":71,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":2844,"byte_end":2849,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":9380}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":3990,"byte_end":3995,"line_start":129,"line_end":129,"column_start":19,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":12469,"byte_end":12470,"line_start":382,"line_end":382,"column_start":45,"column_end":46},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":48},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":13307,"byte_end":13308,"line_start":411,"line_end":411,"column_start":48,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":55},"to":{"krate":0,"index":51}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14138,"byte_end":14139,"line_start":440,"line_end":440,"column_start":65,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":63},"to":{"krate":0,"index":58}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-1.2.0/src/lib.rs","byte_start":14950,"byte_end":14951,"line_start":469,"line_end":469,"column_start":71,"column_end":72},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":70},"to":{"krate":0,"index":65}}]}