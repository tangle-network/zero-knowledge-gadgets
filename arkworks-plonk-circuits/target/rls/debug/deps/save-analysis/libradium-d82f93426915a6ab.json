{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2","program":"/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","radium","--edition=2018","/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=d82f93426915a6ab","-C","extra-filename=-d82f93426915a6ab","--out-dir","/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","-L","dependency=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","--cap-lints","allow","--cfg","radium_atomic_8","--cfg","radium_atomic_16","--cfg","radium_atomic_32","--cfg","radium_atomic_64","--cfg","radium_atomic_ptr","--error-format=json","--sysroot","/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin"],"output":"/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libradium-d82f93426915a6ab.rmeta"},"prelude":{"crate_id":{"name":"radium","disambiguator":[9909629879838656081,0]},"crate_root":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src","external_crates":[{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5231689799850066461,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17864008973282999150,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17296295565214172833,0]}}],"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":0,"byte_end":29140,"line_start":1,"line_end":863,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":0,"byte_end":29140,"line_start":1,"line_end":863,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":11},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":31},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":149},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":183},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":217},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":251},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":285},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":319},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":353},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":387},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":421},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":455},{"krate":0,"index":147},{"krate":0,"index":54},{"krate":0,"index":489},{"krate":0,"index":55},{"krate":0,"index":521},{"krate":0,"index":59}],"decl_id":null,"docs":" `radium` provides a series of helpers for a uniform API over both atomic\n types like [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","sig":null,"attributes":[{"value":"/ `radium` provides a series of helpers for a uniform API over both atomic","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ types like [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":77,"byte_end":147,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":148,"byte_end":151,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This crate is `#![no_std]`-compatible, and uses no non-core types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":152,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":223,"byte_end":226,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ For details, see the documentation for [`Radium`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":227,"byte_end":281,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":282,"byte_end":285,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `types` module provides type names that are atomic where the target","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":286,"byte_end":361,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ supports it, and fall back to `Cell` when the target does not.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":362,"byte_end":428,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":429,"byte_end":432,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `if_atomic!` macro provides a means of conditional compilation based on","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":433,"byte_end":512,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ the presence of atomic instructions. It is a substitute for the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":513,"byte_end":580,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ `cfg(target_has_atomic)` or `cfg(accessible)` attribute tests, which are not","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":581,"byte_end":661,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ yet stabilized.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":662,"byte_end":681,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":682,"byte_end":685,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":686,"byte_end":693,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":694,"byte_end":697,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ **@kneecaw** - <https://twitter.com/kneecaw/status/1132695060812849154>","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":698,"byte_end":773,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ > Feelin' lazy: Has someone already written a helper trait abstracting","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":774,"byte_end":848,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ > operations over `AtomicUsize` and `Cell<usize>` for generic code which may","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":849,"byte_end":929,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ > not care about atomicity?","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":930,"byte_end":961,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":962,"byte_end":965,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ **@ManishEarth** - <https://twitter.com/ManishEarth/status/1132706585300496384>","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":966,"byte_end":1049,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/ > no but call the crate radium","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1050,"byte_end":1084,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ >","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1085,"byte_end":1090,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ > (since people didn't care that it was radioactive and used it in everything)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1091,"byte_end":1173,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1174,"byte_end":1177,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`AtomicUsize`]: core::sync::atomic::AtomicUsize","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1178,"byte_end":1230,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1231,"byte_end":1264,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1266,"byte_end":1276,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1277,"byte_end":1310,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"decl_id":null,"docs":" Best-effort atomic types","sig":null,"attributes":[{"value":"/ Best-effort atomic types","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34390,"byte_end":34418,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34419,"byte_end":34422,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module exports `RadiumType` aliases that map to the `AtomicType` on","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34423,"byte_end":34499,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ targets that have it, or `Cell<type>` on targets that do not. This alias can","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34500,"byte_end":34580,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ be used as a consistent name for crates that need portable names for","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34581,"byte_end":34653,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ non-portable types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34654,"byte_end":34677,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":12},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34724,"byte_end":34734,"line_start":9,"line_end":9,"column_start":10,"column_end":20},"name":"RadiumBool","qualname":"::types::RadiumBool","value":"core::sync::atomic::AtomicBool","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `bool` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `bool` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34679,"byte_end":34714,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":13},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34888,"byte_end":34896,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"RadiumI8","qualname":"::types::RadiumI8","value":"core::sync::atomic::AtomicI8","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i8` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i8` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":34845,"byte_end":34878,"line_start":14,"line_end":14,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35043,"byte_end":35051,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"RadiumU8","qualname":"::types::RadiumU8","value":"core::sync::atomic::AtomicU8","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u8` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u8` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35000,"byte_end":35033,"line_start":20,"line_end":20,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":15},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35199,"byte_end":35208,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"RadiumI16","qualname":"::types::RadiumI16","value":"core::sync::atomic::AtomicI16","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i16` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i16` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35155,"byte_end":35189,"line_start":26,"line_end":26,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35359,"byte_end":35368,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"RadiumU16","qualname":"::types::RadiumU16","value":"core::sync::atomic::AtomicU16","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u16` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u16` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35315,"byte_end":35349,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35519,"byte_end":35528,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"name":"RadiumI32","qualname":"::types::RadiumI32","value":"core::sync::atomic::AtomicI32","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i32` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i32` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35475,"byte_end":35509,"line_start":38,"line_end":38,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35679,"byte_end":35688,"line_start":45,"line_end":45,"column_start":10,"column_end":19},"name":"RadiumU32","qualname":"::types::RadiumU32","value":"core::sync::atomic::AtomicU32","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u32` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u32` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35635,"byte_end":35669,"line_start":44,"line_end":44,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35839,"byte_end":35848,"line_start":51,"line_end":51,"column_start":10,"column_end":19},"name":"RadiumI64","qualname":"::types::RadiumI64","value":"core::sync::atomic::AtomicI64","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i64` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i64` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35795,"byte_end":35829,"line_start":50,"line_end":50,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35999,"byte_end":36008,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"RadiumU64","qualname":"::types::RadiumU64","value":"core::sync::atomic::AtomicU64","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u64` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u64` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":35955,"byte_end":35989,"line_start":56,"line_end":56,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":36161,"byte_end":36172,"line_start":63,"line_end":63,"column_start":10,"column_end":21},"name":"RadiumIsize","qualname":"::types::RadiumIsize","value":"core::sync::atomic::AtomicIsize","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `isize` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `isize` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":36115,"byte_end":36151,"line_start":62,"line_end":62,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":36331,"byte_end":36342,"line_start":69,"line_end":69,"column_start":10,"column_end":21},"name":"RadiumUsize","qualname":"::types::RadiumUsize","value":"core::sync::atomic::AtomicUsize","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `usize` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `usize` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":36285,"byte_end":36321,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":36501,"byte_end":36510,"line_start":75,"line_end":75,"column_start":10,"column_end":19},"name":"RadiumPtr","qualname":"::types::RadiumPtr","value":"core::sync::atomic::AtomicPtr<T>","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic pointer type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic pointer type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/types.rs","byte_start":36455,"byte_end":36491,"line_start":74,"line_end":74,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2642,"byte_end":2648,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Radium","qualname":"::Radium","value":"Radium","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" A maybe-atomic shared mutable fundamental type `T`.","sig":null,"attributes":[{"value":"/ A maybe-atomic shared mutable fundamental type `T`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1862,"byte_end":1917,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1918,"byte_end":1921,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by both the [atomic wrapper] type for `T`, and by","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1922,"byte_end":2001,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ [`Cell<T>`], providing a consistent interface for interacting with the two","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2002,"byte_end":2080,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2081,"byte_end":2091,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2092,"byte_end":2095,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This trait provides methods predicated on marker traits for the underlying","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2096,"byte_end":2174,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ fundamental. Only types which can be viewed as sequences of bits may use the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2175,"byte_end":2255,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ functions for bit-wise arithmetic, and only types which can be used as","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2256,"byte_end":2330,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ integers may use the functions for numeric arithmetic. Use of these methods","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2331,"byte_end":2410,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ on insufficient underlying types (for example, `Radium::fetch_and` on an","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2411,"byte_end":2487,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ atomic or cell-wrapped pointer) will cause a compiler error.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2488,"byte_end":2552,"line_start":71,"line_end":71,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2553,"byte_end":2556,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ [atomic wrapper]: core::sync::atomic","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2557,"byte_end":2597,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2598,"byte_end":2631,"line_start":74,"line_end":74,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2660,"byte_end":2664,"line_start":76,"line_end":76,"column_start":10,"column_end":14},"name":"Item","qualname":"::Radium::Item","value":"type Item;","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2715,"byte_end":2718,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"new","qualname":"::Radium::new","value":"pub fn new(Self::Item) -> Self","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Creates a new value of this type.\n","sig":null,"attributes":[{"value":"/ Creates a new value of this type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2670,"byte_end":2707,"line_start":77,"line_end":77,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2980,"byte_end":2985,"line_start":85,"line_end":85,"column_start":8,"column_end":13},"name":"fence","qualname":"::Radium::fence","value":"pub fn fence(Ordering)","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" If the underlying value is atomic, calls [`fence`] with the given\n [`Ordering`]. Otherwise, does nothing.","sig":null,"attributes":[{"value":"/ If the underlying value is atomic, calls [`fence`] with the given","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2752,"byte_end":2821,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/ [`Ordering`]. Otherwise, does nothing.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2826,"byte_end":2868,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2873,"byte_end":2876,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: core::sync::atomic::Ordering","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2881,"byte_end":2927,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ [`fence`]: core::sync::atomic::fence","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":2932,"byte_end":2972,"line_start":84,"line_end":84,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3207,"byte_end":3214,"line_start":91,"line_end":91,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::Radium::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3009,"byte_end":3065,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3070,"byte_end":3073,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is safe because the mutable reference to `self` guarantees that no","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3078,"byte_end":3153,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ other references exist to this value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3158,"byte_end":3199,"line_start":90,"line_end":90,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3400,"byte_end":3410,"line_start":96,"line_end":96,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::Radium::into_inner","value":"pub fn into_inner(Self) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Consumes the wrapper and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the wrapper and returns the contained value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3251,"byte_end":3308,"line_start":93,"line_end":93,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3313,"byte_end":3316,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is safe as passing by value ensures no other references exist.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3321,"byte_end":3392,"line_start":95,"line_end":95,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3670,"byte_end":3674,"line_start":105,"line_end":105,"column_start":8,"column_end":12},"name":"load","qualname":"::Radium::load","value":"pub fn load(&Self, Ordering) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Load a value from this object.","sig":null,"attributes":[{"value":"/ Load a value from this object.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3437,"byte_end":3471,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3476,"byte_end":3479,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Ordering values are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3484,"byte_end":3536,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3541,"byte_end":3544,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::load`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3549,"byte_end":3585,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3590,"byte_end":3593,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::load`]: core::sync::atomic::AtomicUsize::load","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3598,"byte_end":3662,"line_start":104,"line_end":104,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3957,"byte_end":3962,"line_start":114,"line_end":114,"column_start":8,"column_end":13},"name":"store","qualname":"::Radium::store","value":"pub fn store(&Self, Self::Item, Ordering)","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Store a value in this object.","sig":null,"attributes":[{"value":"/ Store a value in this object.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3719,"byte_end":3752,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3757,"byte_end":3760,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3765,"byte_end":3820,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3825,"byte_end":3828,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::store`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3833,"byte_end":3870,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3875,"byte_end":3878,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::store`]: core::sync::atomic::AtomicUsize::store","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":3883,"byte_end":3949,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4260,"byte_end":4264,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"swap","qualname":"::Radium::swap","value":"pub fn swap(&Self, Self::Item, Ordering) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Swap with the value stored in this object.","sig":null,"attributes":[{"value":"/ Swap with the value stored in this object.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4012,"byte_end":4058,"line_start":116,"line_end":116,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4063,"byte_end":4066,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4071,"byte_end":4126,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4131,"byte_end":4134,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::swap`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4139,"byte_end":4175,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4180,"byte_end":4183,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::swap`]: core::sync::atomic::AtomicUsize::swap","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4188,"byte_end":4252,"line_start":122,"line_end":122,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4823,"byte_end":4839,"line_start":136,"line_end":136,"column_start":8,"column_end":24},"name":"compare_and_swap","qualname":"::Radium::compare_and_swap","value":"pub fn compare_and_swap(&Self, Self::Item, Self::Item, Ordering) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4328,"byte_end":4400,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4405,"byte_end":4437,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4442,"byte_end":4445,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previously-stored value. If it is equal to","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4450,"byte_end":4527,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ `current`, then the value was updated with `new`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4532,"byte_end":4585,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4590,"byte_end":4593,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4598,"byte_end":4653,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4658,"byte_end":4661,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_and_swap`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4666,"byte_end":4714,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4719,"byte_end":4722,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_and_swap`]: core::sync::atomic::AtomicUsize::compare_and_swap","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4727,"byte_end":4815,"line_start":135,"line_end":135,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5493,"byte_end":5509,"line_start":151,"line_end":151,"column_start":8,"column_end":24},"name":"compare_exchange","qualname":"::Radium::compare_exchange","value":"pub fn compare_exchange(&Self, Self::Item, Self::Item, Ordering, Ordering)\n-> Result<Self::Item, Self::Item>","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":4930,"byte_end":5002,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5007,"byte_end":5039,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5044,"byte_end":5047,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The return value is a `Result` indicating whether the new value was","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5052,"byte_end":5123,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ written, and containing the previously-stored value. On success, this","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5128,"byte_end":5201,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ value is guaranteed to be equal to `current`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5206,"byte_end":5255,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5268,"byte_end":5323,"line_start":146,"line_end":146,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5328,"byte_end":5331,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5336,"byte_end":5384,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5389,"byte_end":5392,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange`]: core::sync::atomic::AtomicUsize::compare_exchange","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5397,"byte_end":5485,"line_start":150,"line_end":150,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6376,"byte_end":6397,"line_start":173,"line_end":173,"column_start":8,"column_end":29},"name":"compare_exchange_weak","qualname":"::Radium::compare_exchange_weak","value":"pub fn compare_exchange_weak(&Self, Self::Item, Self::Item, Ordering,\n                             Ordering) -> Result<Self::Item, Self::Item>","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5680,"byte_end":5752,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5757,"byte_end":5789,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5794,"byte_end":5797,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Unlike `compare_exchange`, this function is allowed to spuriously fail","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5802,"byte_end":5876,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ even when the comparison succeeds, which can result in more efficient","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5881,"byte_end":5954,"line_start":163,"line_end":163,"column_start":5,"column_end":78}},{"value":"/ code on some platforms. The return value is a `Result` indicating","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":5959,"byte_end":6028,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/ whether the new value was written, and containing the previously-stored","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6033,"byte_end":6108,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6113,"byte_end":6123,"line_start":166,"line_end":166,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6128,"byte_end":6131,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6136,"byte_end":6191,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6196,"byte_end":6199,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange_weak`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6204,"byte_end":6257,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6262,"byte_end":6265,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange_weak`]: core::sync::atomic::AtomicUsize::compare_exchange_weak","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6270,"byte_end":6368,"line_start":172,"line_end":172,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6963,"byte_end":6972,"line_start":191,"line_end":191,"column_start":8,"column_end":17},"name":"fetch_and","qualname":"::Radium::fetch_and","value":"pub fn fetch_and(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"and\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"and\" on the currently-stored value and the argument","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6568,"byte_end":6643,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6648,"byte_end":6693,"line_start":182,"line_end":182,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6698,"byte_end":6701,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6706,"byte_end":6746,"line_start":184,"line_end":184,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6751,"byte_end":6754,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6759,"byte_end":6814,"line_start":186,"line_end":186,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6819,"byte_end":6822,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_and`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6827,"byte_end":6868,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6873,"byte_end":6876,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_and`]: core::sync::atomic::AtomicUsize::fetch_and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":6881,"byte_end":6955,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7480,"byte_end":7490,"line_start":205,"line_end":205,"column_start":8,"column_end":18},"name":"fetch_nand","qualname":"::Radium::fetch_nand","value":"pub fn fetch_nand(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"nand\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"nand\" on the currently-stored value and the argument","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7081,"byte_end":7157,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7162,"byte_end":7207,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7212,"byte_end":7215,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7220,"byte_end":7260,"line_start":198,"line_end":198,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7265,"byte_end":7268,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7273,"byte_end":7328,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7333,"byte_end":7336,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_nand`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7341,"byte_end":7383,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7388,"byte_end":7391,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_nand`]: core::sync::atomic::AtomicUsize::fetch_nand","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7396,"byte_end":7472,"line_start":204,"line_end":204,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7990,"byte_end":7998,"line_start":219,"line_end":219,"column_start":8,"column_end":16},"name":"fetch_or","qualname":"::Radium::fetch_or","value":"pub fn fetch_or(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"or\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"or\" on the currently-stored value and the argument","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7599,"byte_end":7673,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7678,"byte_end":7723,"line_start":210,"line_end":210,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7728,"byte_end":7731,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7736,"byte_end":7776,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7781,"byte_end":7784,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7789,"byte_end":7844,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7849,"byte_end":7852,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_or`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7857,"byte_end":7897,"line_start":216,"line_end":216,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7902,"byte_end":7905,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_or`]: core::sync::atomic::AtomicUsize::fetch_or","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":7910,"byte_end":7982,"line_start":218,"line_end":218,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8502,"byte_end":8511,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"fetch_xor","qualname":"::Radium::fetch_xor","value":"pub fn fetch_xor(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"xor\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"xor\" on the currently-stored value and the argument","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8107,"byte_end":8182,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8187,"byte_end":8232,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8237,"byte_end":8240,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8245,"byte_end":8285,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8290,"byte_end":8293,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8298,"byte_end":8353,"line_start":228,"line_end":228,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8358,"byte_end":8361,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_xor`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8366,"byte_end":8407,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8412,"byte_end":8415,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_xor`]: core::sync::atomic::AtomicUsize::fetch_xor","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8420,"byte_end":8494,"line_start":232,"line_end":232,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9000,"byte_end":9009,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"fetch_add","qualname":"::Radium::fetch_add","value":"pub fn fetch_add(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::NumericOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Adds `value` to the currently-stored value, wrapping on overflow, and\n stores the result in `self`.","sig":null,"attributes":[{"value":"/ Adds `value` to the currently-stored value, wrapping on overflow, and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8620,"byte_end":8693,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ stores the result in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8698,"byte_end":8730,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8735,"byte_end":8738,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8743,"byte_end":8783,"line_start":240,"line_end":240,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8788,"byte_end":8791,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8796,"byte_end":8851,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8856,"byte_end":8859,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_add`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8864,"byte_end":8905,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8910,"byte_end":8913,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_add`]: core::sync::atomic::AtomicUsize::fetch_add","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":8918,"byte_end":8992,"line_start":246,"line_end":246,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9510,"byte_end":9519,"line_start":261,"line_end":261,"column_start":8,"column_end":17},"name":"fetch_sub","qualname":"::Radium::fetch_sub","value":"pub fn fetch_sub(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::NumericOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Subtracts `value` from the currently-stored value, wrapping on\n underflow, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Subtracts `value` from the currently-stored value, wrapping on","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9122,"byte_end":9188,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/ underflow, and stores the result in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9193,"byte_end":9240,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9245,"byte_end":9248,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9253,"byte_end":9293,"line_start":254,"line_end":254,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9298,"byte_end":9301,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9306,"byte_end":9361,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9366,"byte_end":9369,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_sub`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9374,"byte_end":9415,"line_start":258,"line_end":258,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9420,"byte_end":9423,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_sub`]: core::sync::atomic::AtomicUsize::fetch_sub","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9428,"byte_end":9502,"line_start":260,"line_end":260,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9676,"byte_end":9682,"line_start":267,"line_end":267,"column_start":9,"column_end":15},"name":"marker","qualname":"::marker","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Marker traits used by [`Radium`].\n","sig":null,"attributes":[{"value":"/ Marker traits used by [`Radium`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9630,"byte_end":9667,"line_start":266,"line_end":266,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10725,"byte_end":10731,"line_start":296,"line_end":296,"column_start":15,"column_end":21},"name":"BitOps","qualname":"::marker::BitOps","value":"BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic bitwise operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic bitwise operations.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9689,"byte_end":9742,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9747,"byte_end":9750,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_and`], [`fetch_nand`],","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9755,"byte_end":9831,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ [`fetch_or`], and [`fetch_xor`] maybe-atomic operations.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9836,"byte_end":9896,"line_start":271,"line_end":271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9901,"byte_end":9904,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`fetch_and`]: crate::Radium::fetch_and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9909,"byte_end":9952,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/ [`fetch_nand`]: crate::Radium::fetch_nand","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":9957,"byte_end":10002,"line_start":274,"line_end":274,"column_start":5,"column_end":50}},{"value":"/ [`fetch_or`]: crate::Radium::fetch_or","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10007,"byte_end":10048,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/ [`fetch_xor`]: crate::Radium::fetch_xor","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10053,"byte_end":10096,"line_start":276,"line_end":276,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10101,"byte_end":10104,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ `bool` and all integer fundamental types implement this.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10109,"byte_end":10169,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10174,"byte_end":10177,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10182,"byte_end":10193,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10198,"byte_end":10230,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10235,"byte_end":10260,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10265,"byte_end":10312,"line_start":283,"line_end":283,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_or(&num, 2, Ordering::Relaxed);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10317,"byte_end":10366,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10371,"byte_end":10378,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10383,"byte_end":10386,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Pointers do not. This will cause a compiler error.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10391,"byte_end":10445,"line_start":287,"line_end":287,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10450,"byte_end":10453,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10458,"byte_end":10482,"line_start":289,"line_end":289,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10487,"byte_end":10519,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10524,"byte_end":10549,"line_start":291,"line_end":291,"column_start":5,"column_end":30}},{"value":"/ # use core::ptr;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10554,"byte_end":10574,"line_start":292,"line_end":292,"column_start":5,"column_end":25}},{"value":"/ let ptr: AtomicPtr<usize> = Default::default();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10579,"byte_end":10630,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ Radium::fetch_or(&ptr, ptr::null_mut(), Ordering::Relaxed);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10635,"byte_end":10698,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10703,"byte_end":10710,"line_start":295,"line_end":295,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11638,"byte_end":11648,"line_start":323,"line_end":323,"column_start":15,"column_end":25},"name":"NumericOps","qualname":"::marker::NumericOps","value":"NumericOps: BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic arithmetic operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic arithmetic operations.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10740,"byte_end":10796,"line_start":298,"line_end":298,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10801,"byte_end":10804,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_add`] and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10809,"byte_end":10872,"line_start":300,"line_end":300,"column_start":5,"column_end":68}},{"value":"/ [`fetch_sub`] maybe-atomic operations.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10877,"byte_end":10919,"line_start":301,"line_end":301,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10924,"byte_end":10927,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ [`fetch_add`]: crate::Radium::fetch_add","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10932,"byte_end":10975,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/ [`fetch_sub`]: crate::Radium::fetch_sub","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":10980,"byte_end":11023,"line_start":304,"line_end":304,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11028,"byte_end":11031,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ The integer types, such as `usize` and `i32`, implement this trait.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11036,"byte_end":11107,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11112,"byte_end":11115,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11120,"byte_end":11131,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11136,"byte_end":11168,"line_start":309,"line_end":309,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11173,"byte_end":11198,"line_start":310,"line_end":310,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(2);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11203,"byte_end":11250,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_add(&num, 2, Ordering::Relaxed);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11255,"byte_end":11305,"line_start":312,"line_end":312,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11310,"byte_end":11317,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11322,"byte_end":11325,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ `bool` and pointers do not. This will cause a compiler error.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11330,"byte_end":11395,"line_start":315,"line_end":315,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11400,"byte_end":11403,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11408,"byte_end":11432,"line_start":317,"line_end":317,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11437,"byte_end":11469,"line_start":318,"line_end":318,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11474,"byte_end":11499,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/ let bit: AtomicBool = AtomicBool::new(false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11504,"byte_end":11553,"line_start":320,"line_end":320,"column_start":5,"column_end":54}},{"value":"/ Radium::fetch_add(&bit, true, Ordering::Relaxed);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11558,"byte_end":11611,"line_start":321,"line_end":321,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11616,"byte_end":11623,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]}],"impls":[{"id":31,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":18139,"byte_end":18149,"line_start":577,"line_end":577,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":19088,"byte_end":19092,"line_start":607,"line_end":607,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":19976,"byte_end":19985,"line_start":637,"line_end":637,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":22726,"byte_end":22730,"line_start":710,"line_end":710,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":1346,"byte_end":1351,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":11}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":11650,"byte_end":11656,"line_start":323,"line_end":323,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":50},"to":{"krate":0,"index":51}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":18139,"byte_end":18149,"line_start":577,"line_end":577,"column_start":21,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":8905},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":19088,"byte_end":19092,"line_start":607,"line_end":607,"column_start":17,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":4205},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":19976,"byte_end":19985,"line_start":637,"line_end":637,"column_start":24,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":8910},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.6.2/src/lib.rs","byte_start":22726,"byte_end":22730,"line_start":710,"line_end":710,"column_start":20,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":4205},"to":{"krate":0,"index":31}}]}