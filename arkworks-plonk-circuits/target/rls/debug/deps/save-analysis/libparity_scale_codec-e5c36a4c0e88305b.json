{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1","program":"/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","parity_scale_codec","--edition=2018","/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"bitvec\"","--cfg","feature=\"chain-error\"","--cfg","feature=\"max-encoded-len\"","--cfg","feature=\"parity-scale-codec-derive\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=e5c36a4c0e88305b","-C","extra-filename=-e5c36a4c0e88305b","--out-dir","/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","-L","dependency=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","--extern","arrayvec=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libarrayvec-04784155c8a35b0b.rmeta","--extern","bitvec=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libbitvec-20ac947b6a6e8452.rmeta","--extern","byte_slice_cast=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libbyte_slice_cast-e17dc08a1c3f77e5.rmeta","--extern","impl_trait_for_tuples=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libimpl_trait_for_tuples-7d509bbe0bdb92d6.dylib","--extern","parity_scale_codec_derive=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libparity_scale_codec_derive-a2e6dc1ca436c322.dylib","--extern","serde=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libserde-6894b814b883f372.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin"],"output":"/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libparity_scale_codec-e5c36a4c0e88305b.rmeta"},"prelude":{"crate_id":{"name":"parity_scale_codec","disambiguator":[238769177208138536,0]},"crate_root":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src","external_crates":[{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10313591498153884623,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","num":2,"id":{"name":"core","disambiguator":[5231689799850066461,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17864008973282999150,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17296295565214172833,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2118848927325286491,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13292461249116594054,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4814502004061530608,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15708407810567005444,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2791263468303431766,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6506189918680636659,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8728067978980854181,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10381178398037116026,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10719114933783356113,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[903433031267741442,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[3053230250002770710,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[4944501850750929564,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[675967159280285970,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","num":18,"id":{"name":"parity_scale_codec_derive","disambiguator":[14067003341061329088,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","num":19,"id":{"name":"arrayvec","disambiguator":[14158979566328988426,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","num":20,"id":{"name":"byte_slice_cast","disambiguator":[2659105080458844696,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","num":21,"id":{"name":"impl_trait_for_tuples","disambiguator":[31061655641217184,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","num":22,"id":{"name":"serde","disambiguator":[11839296622231368153,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","num":23,"id":{"name":"serde_derive","disambiguator":[8805065630849621995,0]}}],"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":602,"byte_end":11828,"line_start":15,"line_end":347,"column_start":1,"column_end":50}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9268,"byte_end":9269,"line_start":257,"line_end":257,"column_start":36,"column_end":37},"alias_span":null,"name":"*","value":"Decode, Encode","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":72},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9341,"byte_end":9346,"line_start":262,"line_end":262,"column_start":15,"column_end":20},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":6280},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9362,"byte_end":9365,"line_start":263,"line_end":263,"column_start":15,"column_end":18},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9362,"byte_end":9365,"line_start":263,"line_end":263,"column_start":15,"column_end":18},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5425},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9381,"byte_end":9387,"line_start":264,"line_end":264,"column_start":15,"column_end":21},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":498},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9403,"byte_end":9409,"line_start":265,"line_end":265,"column_start":15,"column_end":21},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":988},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9425,"byte_end":9436,"line_start":266,"line_end":266,"column_start":15,"column_end":26},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":7233},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9452,"byte_end":9456,"line_start":267,"line_end":267,"column_start":15,"column_end":19},"alias_span":null,"name":"sync","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":4508},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9472,"byte_end":9474,"line_start":268,"line_end":268,"column_start":15,"column_end":17},"alias_span":null,"name":"rc","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":2526},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9782,"byte_end":9787,"line_start":287,"line_end":287,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9813,"byte_end":9818,"line_start":289,"line_end":289,"column_start":2,"column_end":7},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9820,"byte_end":9826,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9828,"byte_end":9834,"line_start":289,"line_end":289,"column_start":17,"column_end":23},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9836,"byte_end":9842,"line_start":289,"line_end":289,"column_start":25,"column_end":31},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9844,"byte_end":9849,"line_start":289,"line_end":289,"column_start":33,"column_end":38},"alias_span":null,"name":"Codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9851,"byte_end":9862,"line_start":289,"line_end":289,"column_start":40,"column_end":51},"alias_span":null,"name":"EncodeAsRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9864,"byte_end":9881,"line_start":289,"line_end":289,"column_start":53,"column_end":70},"alias_span":null,"name":"WrapperTypeEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9883,"byte_end":9900,"line_start":289,"line_end":289,"column_start":72,"column_end":89},"alias_span":null,"name":"WrapperTypeDecode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9903,"byte_end":9913,"line_start":290,"line_end":290,"column_start":2,"column_end":12},"alias_span":null,"name":"OptionBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1059},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9903,"byte_end":9913,"line_start":290,"line_end":290,"column_start":2,"column_end":12},"alias_span":null,"name":"OptionBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9915,"byte_end":9927,"line_start":290,"line_end":290,"column_start":14,"column_end":26},"alias_span":null,"name":"DecodeLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9929,"byte_end":9938,"line_start":290,"line_end":290,"column_start":28,"column_end":37},"alias_span":null,"name":"FullCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9940,"byte_end":9950,"line_start":290,"line_end":290,"column_start":39,"column_end":49},"alias_span":null,"name":"FullEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10000,"byte_end":10008,"line_start":293,"line_end":293,"column_start":22,"column_end":30},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10000,"byte_end":10008,"line_start":293,"line_end":293,"column_start":22,"column_end":30},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2461},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10034,"byte_end":10041,"line_start":294,"line_end":294,"column_start":25,"column_end":32},"alias_span":null,"name":"Compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2462},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10034,"byte_end":10041,"line_start":294,"line_end":294,"column_start":25,"column_end":32},"alias_span":null,"name":"Compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10043,"byte_end":10053,"line_start":294,"line_end":294,"column_start":34,"column_end":44},"alias_span":null,"name":"HasCompact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10055,"byte_end":10064,"line_start":294,"line_end":294,"column_start":46,"column_end":55},"alias_span":null,"name":"CompactAs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10066,"byte_end":10076,"line_start":294,"line_end":294,"column_start":57,"column_end":67},"alias_span":null,"name":"CompactLen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10101,"byte_end":10107,"line_start":295,"line_end":295,"column_start":23,"column_end":29},"alias_span":null,"name":"Joiner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10133,"byte_end":10141,"line_start":296,"line_end":296,"column_start":25,"column_end":33},"alias_span":null,"name":"KeyedVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10169,"byte_end":10178,"line_start":297,"line_end":297,"column_start":27,"column_end":36},"alias_span":null,"name":"DecodeAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10207,"byte_end":10218,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"alias_span":null,"name":"DecodeLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10249,"byte_end":10261,"line_start":299,"line_end":299,"column_start":30,"column_end":42},"alias_span":null,"name":"EncodeAppend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":890},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10291,"byte_end":10301,"line_start":300,"line_end":300,"column_start":29,"column_end":39},"alias_span":null,"name":"EncodeLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10303,"byte_end":10306,"line_start":300,"line_end":300,"column_start":41,"column_end":44},"alias_span":null,"name":"Ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":958},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":10370,"byte_end":10383,"line_start":302,"line_end":302,"column_start":26,"column_end":39},"alias_span":null,"name":"MaxEncodedLen","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":602,"byte_end":11828,"line_start":15,"line_end":347,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":27},{"krate":0,"index":538},{"krate":0,"index":745},{"krate":0,"index":761},{"krate":0,"index":777},{"krate":0,"index":791},{"krate":0,"index":828},{"krate":0,"index":886},{"krate":0,"index":922},{"krate":0,"index":940},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055}],"decl_id":null,"docs":" # Parity SCALE Codec","sig":null,"attributes":[{"value":"/ # Parity SCALE Codec","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":602,"byte_end":626,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":627,"byte_end":630,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Rust implementation of the SCALE (Simple Concatenated Aggregate Little-Endian) data format","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":631,"byte_end":725,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ for types used in the Parity Substrate framework.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":726,"byte_end":779,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":780,"byte_end":783,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ SCALE is a light-weight format which allows encoding (and decoding) which makes it highly","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":784,"byte_end":877,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ suitable for resource-constrained execution environments like blockchain runtimes and low-power,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":878,"byte_end":978,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ low-memory devices.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":979,"byte_end":1002,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1003,"byte_end":1006,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is important to note that the encoding context (knowledge of how the types and data","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1007,"byte_end":1097,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/ structures look) needs to be known separately at both encoding and decoding ends.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1098,"byte_end":1183,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ The encoded data does not include this contextual information.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1184,"byte_end":1250,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1251,"byte_end":1254,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ To get a better understanding of how the encoding is done for different types,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1255,"byte_end":1337,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ take a look at the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1338,"byte_end":1360,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/ [SCALE Code page at the Substrate Knowledge Base](https://substrate.dev/docs/en/knowledgebase/advanced/codec).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1361,"byte_end":1475,"line_start":30,"line_end":30,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1476,"byte_end":1479,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1480,"byte_end":1501,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1502,"byte_end":1505,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The codec is implemented using the following traits:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1506,"byte_end":1562,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1563,"byte_end":1566,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ### Encode","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1567,"byte_end":1581,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1582,"byte_end":1585,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The `Encode` trait is used for encoding of data into the SCALE format. The `Encode` trait","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1586,"byte_end":1679,"line_start":38,"line_end":38,"column_start":1,"column_end":94}},{"value":"/ contains the following functions:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1680,"byte_end":1717,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1719,"byte_end":1722,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * `size_hint(&self) -> usize`: Gets the capacity (in bytes) required for the encoded data.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1723,"byte_end":1817,"line_start":42,"line_end":42,"column_start":1,"column_end":95}},{"value":"/ This is to avoid double-allocation of memory needed for the encoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1818,"byte_end":1891,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ It can be an estimate and does not need to be an exact number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1892,"byte_end":1958,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ If the size is not known, even no good maximum, then we can skip this function from the trait","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":1959,"byte_end":2056,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/ implementation. This is required to be a cheap operation, so should not involve iterations etc.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2057,"byte_end":2156,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"/ * `encode_to<T: Output>(&self, dest: &mut T)`: Encodes the value and appends it to a destination","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2157,"byte_end":2257,"line_start":47,"line_end":47,"column_start":1,"column_end":101}},{"value":"/   buffer.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2258,"byte_end":2271,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/ * `encode(&self) -> Vec<u8>`: Encodes the type data and returns a slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2272,"byte_end":2348,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ * `using_encoded<R, F: FnOnce(&[u8]) -> R>(&self, f: F) -> R`: Encodes the type data and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2349,"byte_end":2441,"line_start":50,"line_end":50,"column_start":1,"column_end":93}},{"value":"/   executes a closure on the encoded value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2442,"byte_end":2488,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/ Returns the result from the executed closure.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2489,"byte_end":2538,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2539,"byte_end":2542,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ **Note:** Implementations should override `using_encoded` for value types and `encode_to` for","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2543,"byte_end":2640,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ allocating types. `size_hint` should be implemented for all types, wherever possible. Wrapper","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2641,"byte_end":2738,"line_start":55,"line_end":55,"column_start":1,"column_end":98}},{"value":"/ types should override all methods.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2739,"byte_end":2777,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2778,"byte_end":2781,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ### Decode","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2782,"byte_end":2796,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2797,"byte_end":2800,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The `Decode` trait is used for deserialization/decoding of encoded data into the respective","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2801,"byte_end":2896,"line_start":60,"line_end":60,"column_start":1,"column_end":96}},{"value":"/ types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2897,"byte_end":2907,"line_start":61,"line_end":61,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ * `fn decode<I: Input>(value: &mut I) -> Result<Self, Error>`: Tries to decode the value from","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":2912,"byte_end":3009,"line_start":63,"line_end":63,"column_start":1,"column_end":98}},{"value":"/   SCALE format to the type it is called on.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3010,"byte_end":3057,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ Returns an `Err` if the decoding fails.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3058,"byte_end":3101,"line_start":65,"line_end":65,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3102,"byte_end":3105,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ### CompactAs","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3106,"byte_end":3123,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3124,"byte_end":3127,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The `CompactAs` trait is used for wrapping custom types/structs as compact types, which makes","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3128,"byte_end":3225,"line_start":69,"line_end":69,"column_start":1,"column_end":98}},{"value":"/ them even more space/memory efficient. The compact encoding is described [here](https://substrate.dev/docs/en/knowledgebase/advanced/codec#compactgeneral-integers).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3226,"byte_end":3394,"line_start":70,"line_end":70,"column_start":1,"column_end":169}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3395,"byte_end":3398,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `encode_as(&self) -> &Self::As`: Encodes the type (self) as a compact type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3399,"byte_end":3480,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ The type `As` is defined in the same trait and its implementation should be compact encode-able.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3481,"byte_end":3581,"line_start":73,"line_end":73,"column_start":1,"column_end":101}},{"value":"/ * `decode_from(_: Self::As) -> Result<Self, Error>`: Decodes the type (self) from a compact","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3582,"byte_end":3677,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/   encode-able type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3678,"byte_end":3701,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3702,"byte_end":3705,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### HasCompact","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3706,"byte_end":3724,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3725,"byte_end":3728,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The `HasCompact` trait, if implemented, tells that the corresponding type is a compact","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3729,"byte_end":3819,"line_start":79,"line_end":79,"column_start":1,"column_end":91}},{"value":"/ encode-able type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3820,"byte_end":3841,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3842,"byte_end":3845,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ### EncodeLike","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3846,"byte_end":3864,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3865,"byte_end":3868,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The `EncodeLike` trait needs to be implemented for each type manually. When using derive, it is","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3869,"byte_end":3968,"line_start":84,"line_end":84,"column_start":1,"column_end":100}},{"value":"/ done automatically for you. Basically the trait gives you the opportunity to accept multiple","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":3969,"byte_end":4065,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ types to a function that all encode to the same representation.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4066,"byte_end":4133,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4134,"byte_end":4137,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ## Usage Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4138,"byte_end":4159,"line_start":88,"line_end":88,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4160,"byte_end":4163,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Following are some examples to demonstrate usage of the codec.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4164,"byte_end":4230,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4231,"byte_end":4234,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Simple types","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4235,"byte_end":4255,"line_start":92,"line_end":92,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4256,"byte_end":4259,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4260,"byte_end":4267,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4268,"byte_end":4321,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4322,"byte_end":4357,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4358,"byte_end":4412,"line_start":97,"line_end":97,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4413,"byte_end":4416,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ use parity_scale_codec::{Encode, Decode};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4417,"byte_end":4462,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4463,"byte_end":4466,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4467,"byte_end":4514,"line_start":101,"line_end":101,"column_start":1,"column_end":48}},{"value":"/ enum EnumType {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4515,"byte_end":4534,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/ \t#[codec(index = 15)]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4535,"byte_end":4560,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/ \tA,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4561,"byte_end":4568,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ \tB(u32, u64),","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4569,"byte_end":4586,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/ \tC {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4587,"byte_end":4595,"line_start":106,"line_end":106,"column_start":1,"column_end":9}},{"value":"/ \t\ta: u32,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4596,"byte_end":4609,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/ \t\tb: u64,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4610,"byte_end":4623,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/ \t},","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4624,"byte_end":4631,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4632,"byte_end":4637,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4638,"byte_end":4641,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ let a = EnumType::A;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4642,"byte_end":4666,"line_start":112,"line_end":112,"column_start":1,"column_end":25}},{"value":"/ let b = EnumType::B(1, 2);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4667,"byte_end":4697,"line_start":113,"line_end":113,"column_start":1,"column_end":31}},{"value":"/ let c = EnumType::C { a: 1, b: 2 };","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4698,"byte_end":4737,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4738,"byte_end":4741,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ a.using_encoded(|ref slice| {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4742,"byte_end":4775,"line_start":116,"line_end":116,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x0f\");","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4776,"byte_end":4812,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4813,"byte_end":4820,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4821,"byte_end":4824,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ b.using_encoded(|ref slice| {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4825,"byte_end":4858,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4859,"byte_end":4923,"line_start":121,"line_end":121,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4924,"byte_end":4931,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4932,"byte_end":4935,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ c.using_encoded(|ref slice| {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4936,"byte_end":4969,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":4970,"byte_end":5034,"line_start":125,"line_end":125,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5035,"byte_end":5042,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let mut da: &[u8] = b\"\\x0f\";","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5047,"byte_end":5079,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(EnumType::decode(&mut da).ok(), Some(a));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5080,"byte_end":5136,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5137,"byte_end":5140,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let mut db: &[u8] = b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5141,"byte_end":5201,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(EnumType::decode(&mut db).ok(), Some(b));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5202,"byte_end":5258,"line_start":132,"line_end":132,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5259,"byte_end":5262,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ let mut dc: &[u8] = b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5263,"byte_end":5323,"line_start":134,"line_end":134,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(EnumType::decode(&mut dc).ok(), Some(c));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5324,"byte_end":5380,"line_start":135,"line_end":135,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5381,"byte_end":5384,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ let mut dz: &[u8] = &[0];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5385,"byte_end":5414,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(EnumType::decode(&mut dz).ok(), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5415,"byte_end":5468,"line_start":138,"line_end":138,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5469,"byte_end":5472,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5473,"byte_end":5492,"line_start":140,"line_end":140,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5493,"byte_end":5500,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5501,"byte_end":5504,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ### Compact type with HasCompact","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5505,"byte_end":5541,"line_start":143,"line_end":143,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5542,"byte_end":5545,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5546,"byte_end":5553,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5554,"byte_end":5607,"line_start":146,"line_end":146,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5608,"byte_end":5643,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5644,"byte_end":5698,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5699,"byte_end":5702,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ use parity_scale_codec::{Encode, Decode, Compact, HasCompact};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5703,"byte_end":5769,"line_start":150,"line_end":150,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5770,"byte_end":5773,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5774,"byte_end":5821,"line_start":152,"line_end":152,"column_start":1,"column_end":48}},{"value":"/ struct Test1CompactHasCompact<T: HasCompact> {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5822,"byte_end":5872,"line_start":153,"line_end":153,"column_start":1,"column_end":51}},{"value":"/     #[codec(compact)]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5873,"byte_end":5898,"line_start":154,"line_end":154,"column_start":1,"column_end":26}},{"value":"/     bar: T,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5899,"byte_end":5914,"line_start":155,"line_end":155,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5915,"byte_end":5920,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5921,"byte_end":5924,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5925,"byte_end":5972,"line_start":158,"line_end":158,"column_start":1,"column_end":48}},{"value":"/ struct Test1HasCompact<T: HasCompact> {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":5973,"byte_end":6016,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"/     #[codec(encoded_as = \"<T as HasCompact>::Type\")]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6017,"byte_end":6073,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/     bar: T,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6074,"byte_end":6089,"line_start":161,"line_end":161,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6090,"byte_end":6095,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6096,"byte_end":6099,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let test_val: (u64, usize) = (0u64, 1usize);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6100,"byte_end":6148,"line_start":164,"line_end":164,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6149,"byte_end":6152,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let encoded = Test1HasCompact { bar: test_val.0 }.encode();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6153,"byte_end":6216,"line_start":166,"line_end":166,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(encoded.len(), test_val.1);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6217,"byte_end":6259,"line_start":167,"line_end":167,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(<Test1CompactHasCompact<u64>>::decode(&mut &encoded[..]).unwrap().bar, test_val.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6260,"byte_end":6358,"line_start":168,"line_end":168,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6359,"byte_end":6362,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6363,"byte_end":6382,"line_start":170,"line_end":170,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6383,"byte_end":6390,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ ### Type with CompactAs","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6391,"byte_end":6418,"line_start":172,"line_end":172,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6419,"byte_end":6422,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6423,"byte_end":6434,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6435,"byte_end":6488,"line_start":175,"line_end":175,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6489,"byte_end":6524,"line_start":176,"line_end":176,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6525,"byte_end":6579,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6580,"byte_end":6583,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ use serde_derive::{Serialize, Deserialize};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6584,"byte_end":6631,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/ use parity_scale_codec::{Encode, Decode, Compact, HasCompact, CompactAs, Error};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6632,"byte_end":6716,"line_start":180,"line_end":180,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6717,"byte_end":6720,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ #[cfg_attr(feature = \"std\", derive(Serialize, Deserialize, Debug))]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6721,"byte_end":6792,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/ #[derive(PartialEq, Eq, Clone)]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6793,"byte_end":6828,"line_start":183,"line_end":183,"column_start":1,"column_end":36}},{"value":"/ struct StructHasCompact(u32);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6829,"byte_end":6862,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6863,"byte_end":6866,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ impl CompactAs for StructHasCompact {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6867,"byte_end":6908,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/     type As = u32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6909,"byte_end":6931,"line_start":187,"line_end":187,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6932,"byte_end":6935,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/     fn encode_as(&self) -> &Self::As {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6936,"byte_end":6978,"line_start":189,"line_end":189,"column_start":1,"column_end":43}},{"value":"/         &12","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6979,"byte_end":6994,"line_start":190,"line_end":190,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":6995,"byte_end":7004,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7005,"byte_end":7008,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     fn decode_from(_: Self::As) -> Result<Self, Error> {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7009,"byte_end":7069,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/         Ok(StructHasCompact(12))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7070,"byte_end":7106,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7107,"byte_end":7116,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7117,"byte_end":7122,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7123,"byte_end":7126,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ impl From<Compact<StructHasCompact>> for StructHasCompact {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7127,"byte_end":7190,"line_start":198,"line_end":198,"column_start":1,"column_end":64}},{"value":"/     fn from(_: Compact<StructHasCompact>) -> Self {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7191,"byte_end":7246,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/         StructHasCompact(12)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7247,"byte_end":7279,"line_start":200,"line_end":200,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7280,"byte_end":7289,"line_start":201,"line_end":201,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7290,"byte_end":7295,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7296,"byte_end":7299,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7300,"byte_end":7347,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/ enum TestGenericHasCompact<T> {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7348,"byte_end":7383,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"/     A {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7384,"byte_end":7395,"line_start":206,"line_end":206,"column_start":1,"column_end":12}},{"value":"/         #[codec(compact)] a: T","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7396,"byte_end":7430,"line_start":207,"line_end":207,"column_start":1,"column_end":35}},{"value":"/     },","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7431,"byte_end":7441,"line_start":208,"line_end":208,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7442,"byte_end":7447,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7448,"byte_end":7451,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ let a = TestGenericHasCompact::A::<StructHasCompact> {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7452,"byte_end":7510,"line_start":211,"line_end":211,"column_start":1,"column_end":59}},{"value":"/     a: StructHasCompact(12325678),","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7511,"byte_end":7549,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7550,"byte_end":7556,"line_start":213,"line_end":213,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7557,"byte_end":7560,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ let encoded = a.encode();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7561,"byte_end":7590,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(encoded.len(), 2);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7591,"byte_end":7624,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7625,"byte_end":7628,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7629,"byte_end":7648,"line_start":218,"line_end":218,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7649,"byte_end":7656,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7657,"byte_end":7660,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ## Derive attributes","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7661,"byte_end":7685,"line_start":221,"line_end":221,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7686,"byte_end":7689,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ The derive implementation supports the following attributes:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7690,"byte_end":7754,"line_start":223,"line_end":223,"column_start":1,"column_end":65}},{"value":"/ - `codec(dumb_trait_bound)`: This attribute needs to be placed above the type that one of the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7755,"byte_end":7852,"line_start":224,"line_end":224,"column_start":1,"column_end":98}},{"value":"/   trait should be implemented for. It will make the algorithm that determines the to-add trait","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7853,"byte_end":7951,"line_start":225,"line_end":225,"column_start":1,"column_end":99}},{"value":"/   bounds fall back to just use the type parameters of the type. This can be useful for situation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":7952,"byte_end":8052,"line_start":226,"line_end":226,"column_start":1,"column_end":101}},{"value":"/   where the algorithm includes private types in the public interface. By using this attribute,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8053,"byte_end":8151,"line_start":227,"line_end":227,"column_start":1,"column_end":99}},{"value":"/   you should not get this error/warning again.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8152,"byte_end":8202,"line_start":228,"line_end":228,"column_start":1,"column_end":51}},{"value":"/ - `codec(skip)`: Needs to be placed above a field  or variant and makes it to be skipped while","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8203,"byte_end":8301,"line_start":229,"line_end":229,"column_start":1,"column_end":99}},{"value":"/   encoding/decoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8302,"byte_end":8326,"line_start":230,"line_end":230,"column_start":1,"column_end":25}},{"value":"/ - `codec(compact)`: Needs to be placed above a field and makes the field use compact encoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8327,"byte_end":8425,"line_start":231,"line_end":231,"column_start":1,"column_end":99}},{"value":"/   (The type needs to support compact encoding.)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8426,"byte_end":8477,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"/ - `codec(encoded_as = \"OtherType\")`: Needs to be placed above a field and makes the field being","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8478,"byte_end":8577,"line_start":233,"line_end":233,"column_start":1,"column_end":100}},{"value":"/   encoded by using `OtherType`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8578,"byte_end":8613,"line_start":234,"line_end":234,"column_start":1,"column_end":36}},{"value":"/ - `codec(index = 0)`: Needs to be placed above an enum variant to make the variant use the given","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8614,"byte_end":8714,"line_start":235,"line_end":235,"column_start":1,"column_end":101}},{"value":"/   index when encoded. By default the index is determined by counting from `0` beginning wth the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8715,"byte_end":8814,"line_start":236,"line_end":236,"column_start":1,"column_end":100}},{"value":"/   first variant.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8815,"byte_end":8835,"line_start":237,"line_end":237,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":8837,"byte_end":8859,"line_start":239,"line_end":239,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9319,"byte_end":9324,"line_start":261,"line_end":261,"column_start":9,"column_end":14},"name":"alloc","qualname":"::alloc","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/lib.rs","byte_start":9272,"byte_end":9295,"line_start":259,"line_end":259,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13342,"byte_end":13347,"line_start":64,"line_end":64,"column_start":11,"column_end":16},"name":"Input","qualname":"::codec::Input","value":"Input","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" Trait that allows reading of data into a slice.\n","sig":null,"attributes":[{"value":"/ Trait that allows reading of data into a slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13280,"byte_end":13331,"line_start":63,"line_end":63,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13762,"byte_end":13775,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"name":"remaining_len","qualname":"::codec::Input::remaining_len","value":"pub fn remaining_len(&mut Self) -> Result<Option<usize>, Error>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Should return the remaining length of the input data. If no information about the input\n length is available, `None` should be returned.","sig":null,"attributes":[{"value":"/ Should return the remaining length of the input data. If no information about the input","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13351,"byte_end":13442,"line_start":65,"line_end":65,"column_start":2,"column_end":93}},{"value":"/ length is available, `None` should be returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13444,"byte_end":13495,"line_start":66,"line_end":66,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13497,"byte_end":13500,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ The length is used to constrain the preallocation while decoding. Returning a garbage","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13502,"byte_end":13591,"line_start":68,"line_end":68,"column_start":2,"column_end":91}},{"value":"/ length can open the doors for a denial of service attack to your application.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13593,"byte_end":13674,"line_start":69,"line_end":69,"column_start":2,"column_end":83}},{"value":"/ Otherwise, returning `None` can decrease the performance of your application.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13676,"byte_end":13757,"line_start":70,"line_end":70,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14008,"byte_end":14012,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"read","qualname":"::codec::Input::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<(), Error>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Read the exact number of bytes required to fill the given buffer.","sig":null,"attributes":[{"value":"/ Read the exact number of bytes required to fill the given buffer.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13822,"byte_end":13891,"line_start":73,"line_end":73,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13893,"byte_end":13896,"line_start":74,"line_end":74,"column_start":2,"column_end":5}},{"value":"/ Note that this function is similar to `std::io::Read::read_exact` and not","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13898,"byte_end":13975,"line_start":75,"line_end":75,"column_start":2,"column_end":79}},{"value":"/ `std::io::Read::read`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":13977,"byte_end":14003,"line_start":76,"line_end":76,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14108,"byte_end":14117,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"name":"read_byte","qualname":"::codec::Input::read_byte","value":"pub fn read_byte(&mut Self) -> Result<u8, Error>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Read a single byte from the input.\n","sig":null,"attributes":[{"value":"/ Read a single byte from the input.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14065,"byte_end":14103,"line_start":79,"line_end":79,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14424,"byte_end":14435,"line_start":90,"line_end":90,"column_start":5,"column_end":16},"name":"descend_ref","qualname":"::codec::Input::descend_ref","value":"pub fn descend_ref(&mut Self) -> Result<(), Error>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Descend into nested reference when decoding.\n This is called when decoding a new refence-based instance,\n such as `Vec` or `Box`. Currently all such types are\n allocated on the heap.\n","sig":null,"attributes":[{"value":"/ Descend into nested reference when decoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14221,"byte_end":14269,"line_start":86,"line_end":86,"column_start":2,"column_end":50}},{"value":"/ This is called when decoding a new refence-based instance,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14271,"byte_end":14333,"line_start":87,"line_end":87,"column_start":2,"column_end":64}},{"value":"/ such as `Vec` or `Box`. Currently all such types are","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14335,"byte_end":14391,"line_start":88,"line_end":88,"column_start":2,"column_end":58}},{"value":"/ allocated on the heap.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14393,"byte_end":14419,"line_start":89,"line_end":89,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14610,"byte_end":14620,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"name":"ascend_ref","qualname":"::codec::Input::ascend_ref","value":"pub fn ascend_ref(&mut Self)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Ascend to previous structure level when decoding.\n This is called when decoding reference-based type is finished.\n","sig":null,"attributes":[{"value":"/ Ascend to previous structure level when decoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14484,"byte_end":14537,"line_start":94,"line_end":94,"column_start":2,"column_end":55}},{"value":"/ This is called when decoding reference-based type is finished.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":14539,"byte_end":14605,"line_start":95,"line_end":95,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16226,"byte_end":16234,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::codec::IoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper that implements Input for any `Read` type.\n","sig":null,"attributes":[{"value":"/ Wrapper that implements Input for any `Read` type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16136,"byte_end":16190,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16191,"byte_end":16214,"line_start":144,"line_end":144,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":168},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16253,"byte_end":16258,"line_start":145,"line_end":145,"column_start":39,"column_end":44},"name":"0","qualname":"::codec::IoReader::0","value":"R","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16572,"byte_end":16578,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Output","qualname":"::codec::Output","value":"Output","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" Trait that allows writing of data.\n","sig":null,"attributes":[{"value":"/ Trait that allows writing of data.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16523,"byte_end":16561,"line_start":158,"line_end":158,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16611,"byte_end":16616,"line_start":161,"line_end":161,"column_start":5,"column_end":10},"name":"write","qualname":"::codec::Output::write","value":"pub fn write(&mut Self, &[u8])","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Write to the output.\n","sig":null,"attributes":[{"value":"/ Write to the output.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16582,"byte_end":16606,"line_start":160,"line_end":160,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16688,"byte_end":16697,"line_start":164,"line_end":164,"column_start":5,"column_end":14},"name":"push_byte","qualname":"::codec::Output::push_byte","value":"pub fn push_byte(&mut Self, u8)","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Write a single byte to the output.\n","sig":null,"attributes":[{"value":"/ Write a single byte to the output.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16645,"byte_end":16683,"line_start":163,"line_end":163,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":180},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17366,"byte_end":17373,"line_start":191,"line_end":191,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::codec::TypeInfo::Unknown","value":"TypeInfo::Unknown","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.\n","sig":null,"attributes":[{"value":"/ Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17262,"byte_end":17364,"line_start":190,"line_end":190,"column_start":2,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":182},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17376,"byte_end":17378,"line_start":192,"line_end":192,"column_start":2,"column_end":4},"name":"U8","qualname":"::codec::TypeInfo::U8","value":"TypeInfo::U8","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17381,"byte_end":17383,"line_start":193,"line_end":193,"column_start":2,"column_end":4},"name":"I8","qualname":"::codec::TypeInfo::I8","value":"TypeInfo::I8","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17386,"byte_end":17389,"line_start":194,"line_end":194,"column_start":2,"column_end":5},"name":"U16","qualname":"::codec::TypeInfo::U16","value":"TypeInfo::U16","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17392,"byte_end":17395,"line_start":195,"line_end":195,"column_start":2,"column_end":5},"name":"I16","qualname":"::codec::TypeInfo::I16","value":"TypeInfo::I16","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17398,"byte_end":17401,"line_start":196,"line_end":196,"column_start":2,"column_end":5},"name":"U32","qualname":"::codec::TypeInfo::U32","value":"TypeInfo::U32","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17404,"byte_end":17407,"line_start":197,"line_end":197,"column_start":2,"column_end":5},"name":"I32","qualname":"::codec::TypeInfo::I32","value":"TypeInfo::I32","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17410,"byte_end":17413,"line_start":198,"line_end":198,"column_start":2,"column_end":5},"name":"U64","qualname":"::codec::TypeInfo::U64","value":"TypeInfo::U64","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":196},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17416,"byte_end":17419,"line_start":199,"line_end":199,"column_start":2,"column_end":5},"name":"I64","qualname":"::codec::TypeInfo::I64","value":"TypeInfo::I64","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17422,"byte_end":17426,"line_start":200,"line_end":200,"column_start":2,"column_end":6},"name":"U128","qualname":"::codec::TypeInfo::U128","value":"TypeInfo::U128","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":200},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17429,"byte_end":17433,"line_start":201,"line_end":201,"column_start":2,"column_end":6},"name":"I128","qualname":"::codec::TypeInfo::I128","value":"TypeInfo::I128","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":179},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17250,"byte_end":17258,"line_start":189,"line_end":189,"column_start":10,"column_end":18},"name":"TypeInfo","qualname":"::codec::TypeInfo","value":"pub enum TypeInfo {\n    Unknown,\n    U8,\n    I8,\n    U16,\n    I16,\n    U32,\n    I32,\n    U64,\n    I64,\n    U128,\n    I128,\n}","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200}],"decl_id":null,"docs":" !INTERNAL USE ONLY!","sig":null,"attributes":[{"value":"/ !INTERNAL USE ONLY!","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17080,"byte_end":17103,"line_start":184,"line_end":184,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17104,"byte_end":17107,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This enum provides type information to optimize encoding/decoding by doing fake specialization.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17108,"byte_end":17207,"line_start":186,"line_end":186,"column_start":1,"column_end":100}},{"value":"non_exhaustive","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17223,"byte_end":17240,"line_start":188,"line_end":188,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":202},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17703,"byte_end":17709,"line_start":208,"line_end":208,"column_start":11,"column_end":17},"name":"Encode","qualname":"::codec::Encode","value":"Encode","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":212}],"decl_id":null,"docs":" Trait that allows zero-copy write of value-references to slices in LE format.","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy write of value-references to slices in LE format.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17438,"byte_end":17519,"line_start":204,"line_end":204,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17520,"byte_end":17523,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ Implementations should override `using_encoded` for value types and `encode_to` and `size_hint` for allocating types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17524,"byte_end":17645,"line_start":206,"line_end":206,"column_start":1,"column_end":122}},{"value":"/ Wrapper types should override all methods.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17646,"byte_end":17692,"line_start":207,"line_end":207,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17850,"byte_end":17859,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Encode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18061,"byte_end":18070,"line_start":218,"line_end":218,"column_start":5,"column_end":14},"name":"size_hint","qualname":"::codec::Encode::size_hint","value":"pub fn size_hint(&Self) -> usize","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" If possible give a hint of expected size of the encoding.","sig":null,"attributes":[{"value":"/ If possible give a hint of expected size of the encoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17893,"byte_end":17954,"line_start":214,"line_end":214,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17956,"byte_end":17959,"line_start":215,"line_end":215,"column_start":2,"column_end":5}},{"value":"/ This method is used inside default implementation of `encode`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":17961,"byte_end":18026,"line_start":216,"line_end":216,"column_start":2,"column_end":67}},{"value":"/ to avoid re-allocations.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18028,"byte_end":18056,"line_start":217,"line_end":217,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18164,"byte_end":18173,"line_start":223,"line_end":223,"column_start":5,"column_end":14},"name":"encode_to","qualname":"::codec::Encode::encode_to","value":"pub fn encode_to<T: Output + ?Sized>(&Self, &mut T)","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Convert self to a slice and append it to the destination.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and append it to the destination.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18098,"byte_end":18159,"line_start":222,"line_end":222,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18308,"byte_end":18314,"line_start":228,"line_end":228,"column_start":5,"column_end":11},"name":"encode","qualname":"::codec::Encode::encode","value":"pub fn encode(&Self) -> Vec<u8>","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Convert self to an owned vector.\n","sig":null,"attributes":[{"value":"/ Convert self to an owned vector.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18267,"byte_end":18303,"line_start":227,"line_end":227,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18497,"byte_end":18510,"line_start":235,"line_end":235,"column_start":5,"column_end":18},"name":"using_encoded","qualname":"::codec::Encode::using_encoded","value":"pub fn using_encoded<R, F: FnOnce(&[u8]) -> R>(&Self, F) -> R","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Convert self to a slice and then invoke the given closure with it.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and then invoke the given closure with it.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18422,"byte_end":18492,"line_start":234,"line_end":234,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18927,"byte_end":18939,"line_start":247,"line_end":247,"column_start":5,"column_end":17},"name":"encoded_size","qualname":"::codec::Encode::encoded_size","value":"pub fn encoded_size(&Self) -> usize","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Calculates the encoded size.","sig":null,"attributes":[{"value":"/ Calculates the encoded size.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18582,"byte_end":18614,"line_start":239,"line_end":239,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18616,"byte_end":18619,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ Should be used when the encoded data isn't required.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18621,"byte_end":18677,"line_start":241,"line_end":241,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18679,"byte_end":18682,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ # Note","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18684,"byte_end":18694,"line_start":243,"line_end":243,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18696,"byte_end":18699,"line_start":244,"line_end":244,"column_start":2,"column_end":5}},{"value":"/ This works by using a special [`Output`] that only tracks the size. So, there are no allocations inside the ","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18701,"byte_end":18813,"line_start":245,"line_end":245,"column_start":2,"column_end":114}},{"value":"/ output. However, this can not prevent allocations that some types are doing inside their own encoding. ","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":18815,"byte_end":18922,"line_start":246,"line_end":246,"column_start":2,"column_end":109}}]},{"kind":"Trait","id":{"krate":0,"index":218},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19490,"byte_end":19502,"line_start":271,"line_end":271,"column_start":11,"column_end":23},"name":"DecodeLength","qualname":"::codec::DecodeLength","value":"DecodeLength","parent":null,"children":[{"krate":0,"index":219}],"decl_id":null,"docs":" Trait that allows the length of a collection to be read, without having\n to read and decode the entire elements.\n","sig":null,"attributes":[{"value":"/ Trait that allows the length of a collection to be read, without having","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19360,"byte_end":19435,"line_start":269,"line_end":269,"column_start":1,"column_end":76}},{"value":"/ to read and decode the entire elements.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19436,"byte_end":19479,"line_start":270,"line_end":270,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19563,"byte_end":19566,"line_start":273,"line_end":273,"column_start":5,"column_end":8},"name":"len","qualname":"::codec::DecodeLength::len","value":"pub fn len(&[u8]) -> Result<usize, Error>","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" Return the number of elements in `self_encoded`.\n","sig":null,"attributes":[{"value":"/ Return the number of elements in `self_encoded`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19506,"byte_end":19558,"line_start":272,"line_end":272,"column_start":2,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":220},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19709,"byte_end":19715,"line_start":277,"line_end":277,"column_start":11,"column_end":17},"name":"Decode","qualname":"::codec::Decode","value":"Decode: Sized","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":227}],"decl_id":null,"docs":" Trait that allows zero-copy read of value-references from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read of value-references from slices in LE format.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19616,"byte_end":19698,"line_start":276,"line_end":276,"column_start":1,"column_end":83}}]},{"kind":"Const","id":{"krate":0,"index":221},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19863,"byte_end":19872,"line_start":281,"line_end":281,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Decode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19959,"byte_end":19965,"line_start":284,"line_end":284,"column_start":5,"column_end":11},"name":"decode","qualname":"::codec::Decode::decode","value":"pub fn decode<I: Input>(&mut I) -> Result<Self, Error>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Attempt to deserialise the value from input.\n","sig":null,"attributes":[{"value":"/ Attempt to deserialise the value from input.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19906,"byte_end":19954,"line_start":283,"line_end":283,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20245,"byte_end":20249,"line_start":290,"line_end":290,"column_start":5,"column_end":9},"name":"skip","qualname":"::codec::Decode::skip","value":"pub fn skip<I: Input>(&mut I) -> Result<(), Error>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Attempt to skip the encoded value from input.","sig":null,"attributes":[{"value":"/ Attempt to skip the encoded value from input.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20017,"byte_end":20066,"line_start":286,"line_end":286,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20068,"byte_end":20071,"line_start":287,"line_end":287,"column_start":2,"column_end":5}},{"value":"/ The default implementation of this function is just calling [`Decode::decode`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20073,"byte_end":20156,"line_start":288,"line_end":288,"column_start":2,"column_end":85}},{"value":"/ When possible, an implementation should provided a specialized implementation.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20158,"byte_end":20240,"line_start":289,"line_end":289,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20582,"byte_end":20600,"line_start":300,"line_end":300,"column_start":5,"column_end":23},"name":"encoded_fixed_size","qualname":"::codec::Decode::encoded_fixed_size","value":"pub fn encoded_fixed_size() -> Option<usize>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Returns the fixed encoded size of the type.","sig":null,"attributes":[{"value":"/ Returns the fixed encoded size of the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20337,"byte_end":20384,"line_start":294,"line_end":294,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20386,"byte_end":20389,"line_start":295,"line_end":295,"column_start":2,"column_end":5}},{"value":"/ If it returns `Some(size)` then all possible values of this","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20391,"byte_end":20454,"line_start":296,"line_end":296,"column_start":2,"column_end":65}},{"value":"/ type have the given size (in bytes) when encoded.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20456,"byte_end":20509,"line_start":297,"line_end":297,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20511,"byte_end":20514,"line_start":298,"line_end":298,"column_start":2,"column_end":5}},{"value":"/ NOTE: A type with a fixed encoded size may return `None`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20516,"byte_end":20577,"line_start":299,"line_end":299,"column_start":2,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":228},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20737,"byte_end":20742,"line_start":306,"line_end":306,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec: Decode + Encode","parent":null,"children":[],"decl_id":null,"docs":" Trait that allows zero-copy read/write of value-references to/from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read/write of value-references to/from slices in LE format.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20635,"byte_end":20726,"line_start":305,"line_end":305,"column_start":1,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":231},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20946,"byte_end":20956,"line_start":311,"line_end":311,"column_start":11,"column_end":21},"name":"FullEncode","qualname":"::codec::FullEncode","value":"FullEncode: Encode + EncodeLike","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20804,"byte_end":20901,"line_start":309,"line_end":309,"column_start":1,"column_end":98}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20902,"byte_end":20935,"line_start":310,"line_end":310,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":234},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21172,"byte_end":21181,"line_start":316,"line_end":316,"column_start":11,"column_end":20},"name":"FullCodec","qualname":"::codec::FullCodec","value":"FullCodec: Decode + FullEncode","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21031,"byte_end":21127,"line_start":314,"line_end":314,"column_start":1,"column_end":97}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21128,"byte_end":21161,"line_start":315,"line_end":315,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":237},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21570,"byte_end":21587,"line_start":326,"line_end":326,"column_start":11,"column_end":28},"name":"WrapperTypeEncode","qualname":"::codec::WrapperTypeEncode","value":"WrapperTypeEncode: Deref","parent":null,"children":[],"decl_id":null,"docs":" A marker trait for types that wrap other encodable type.","sig":null,"attributes":[{"value":"/ A marker trait for types that wrap other encodable type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21255,"byte_end":21315,"line_start":319,"line_end":319,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21316,"byte_end":21319,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ Such types should not carry any additional information","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21320,"byte_end":21378,"line_start":321,"line_end":321,"column_start":1,"column_end":59}},{"value":"/ that would require to be encoded, because the encoding","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21379,"byte_end":21437,"line_start":322,"line_end":322,"column_start":1,"column_end":59}},{"value":"/ is assumed to be the same as the wrapped type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21438,"byte_end":21488,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21489,"byte_end":21492,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ The wrapped type that is referred to is the [`Deref::Target`].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21493,"byte_end":21559,"line_start":325,"line_end":325,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":310},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23678,"byte_end":23695,"line_start":394,"line_end":394,"column_start":11,"column_end":28},"name":"WrapperTypeDecode","qualname":"::codec::WrapperTypeDecode","value":"WrapperTypeDecode: Sized","parent":null,"children":[{"krate":0,"index":311}],"decl_id":null,"docs":" A marker trait for types that can be created solely from other decodable types.","sig":null,"attributes":[{"value":"/ A marker trait for types that can be created solely from other decodable types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23503,"byte_end":23586,"line_start":391,"line_end":391,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23587,"byte_end":23590,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ The decoding of such type is assumed to be the same as the wrapped type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23591,"byte_end":23667,"line_start":393,"line_end":393,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":311},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23732,"byte_end":23739,"line_start":396,"line_end":396,"column_start":7,"column_end":14},"name":"Wrapped","qualname":"::codec::WrapperTypeDecode::Wrapped","value":"type Wrapped: Into<Self>;","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" A wrapped type.\n","sig":null,"attributes":[{"value":"/ A wrapped type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23706,"byte_end":23725,"line_start":395,"line_end":395,"column_start":2,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":327},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":25492,"byte_end":25503,"line_start":448,"line_end":448,"column_start":11,"column_end":22},"name":"EncodeAsRef","qualname":"::codec::EncodeAsRef","value":"EncodeAsRef<'a, T: 'a>","parent":null,"children":[{"krate":0,"index":330}],"decl_id":null,"docs":" Something that can be encoded as a reference.\n","sig":null,"attributes":[{"value":"/ Something that can be encoded as a reference.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":25432,"byte_end":25481,"line_start":447,"line_end":447,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":330},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":25574,"byte_end":25581,"line_start":450,"line_end":450,"column_start":7,"column_end":14},"name":"RefType","qualname":"::codec::EncodeAsRef::RefType","value":"type RefType: Encode + From<&'a T>;","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" The reference type that is used for encoding.\n","sig":null,"attributes":[{"value":"/ The reference type that is used for encoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":25518,"byte_end":25567,"line_start":449,"line_end":449,"column_start":2,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26803,"byte_end":26813,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"OptionBool","qualname":"::codec::OptionBool","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shim type because we can't do a specialised implementation for `Option<bool>` directly.\n","sig":null,"attributes":[{"value":"/ Shim type because we can't do a specialised implementation for `Option<bool>` directly.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26662,"byte_end":26753,"line_start":499,"line_end":499,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26814,"byte_end":26830,"line_start":501,"line_end":501,"column_start":23,"column_end":39},"name":"0","qualname":"::codec::OptionBool::0","value":"std::option::Option<bool>","parent":{"krate":0,"index":1058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":585},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":60870,"byte_end":60880,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"CompactLen","qualname":"::compact::CompactLen","value":"CompactLen<T>","parent":null,"children":[{"krate":0,"index":587}],"decl_id":null,"docs":" Something that can return the compact encoded length for a given value.\n","sig":null,"attributes":[{"value":"/ Something that can return the compact encoded length for a given value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":60784,"byte_end":60859,"line_start":73,"line_end":73,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":60951,"byte_end":60962,"line_start":76,"line_end":76,"column_start":5,"column_end":16},"name":"compact_len","qualname":"::compact::CompactLen::compact_len","value":"pub fn compact_len(&T) -> usize","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Returns the compact encoded length for the given value.\n","sig":null,"attributes":[{"value":"/ Returns the compact encoded length for the given value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":60887,"byte_end":60946,"line_start":75,"line_end":75,"column_start":2,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61191,"byte_end":61198,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"Compact","qualname":"::compact::Compact","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":60985,"byte_end":61075,"line_start":79,"line_end":79,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61202,"byte_end":61207,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"name":"0","qualname":"::compact::Compact::0","value":"T","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":595},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61448,"byte_end":61457,"line_start":93,"line_end":93,"column_start":11,"column_end":20},"name":"CompactAs","qualname":"::compact::CompactAs","value":"CompactAs: From<Compact<Self>>","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" Allow foreign structs to be wrap in Compact\n","sig":null,"attributes":[{"value":"/ Allow foreign structs to be wrap in Compact","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61390,"byte_end":61437,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":596},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61554,"byte_end":61556,"line_start":95,"line_end":95,"column_start":7,"column_end":9},"name":"As","qualname":"::compact::CompactAs::As","value":"type As;","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" A compact-encodable type that should be used as the encoding.\n","sig":null,"attributes":[{"value":"/ A compact-encodable type that should be used as the encoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61482,"byte_end":61547,"line_start":94,"line_end":94,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61604,"byte_end":61613,"line_start":98,"line_end":98,"column_start":5,"column_end":14},"name":"encode_as","qualname":"::compact::CompactAs::encode_as","value":"pub fn encode_as(&Self) -> &Self::As","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Returns the compact-encodable type.\n","sig":null,"attributes":[{"value":"/ Returns the compact-encodable type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61560,"byte_end":61599,"line_start":97,"line_end":97,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61690,"byte_end":61701,"line_start":101,"line_end":101,"column_start":5,"column_end":16},"name":"decode_from","qualname":"::compact::CompactAs::decode_from","value":"pub fn decode_from(Self::As) -> Result<Self, Error>","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Decode `Self` from the compact-decoded type.\n","sig":null,"attributes":[{"value":"/ Decode `Self` from the compact-decoded type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61637,"byte_end":61685,"line_start":100,"line_end":100,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63445,"byte_end":63455,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"CompactRef","qualname":"::compact::CompactRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63301,"byte_end":63395,"line_start":181,"line_end":181,"column_start":1,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63463,"byte_end":63472,"line_start":183,"line_end":183,"column_start":30,"column_end":39},"name":"0","qualname":"::compact::CompactRef::0","value":"&'a T","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":648},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64314,"byte_end":64324,"line_start":210,"line_end":210,"column_start":11,"column_end":21},"name":"HasCompact","qualname":"::compact::HasCompact","value":"HasCompact: Sized","parent":null,"children":[{"krate":0,"index":649}],"decl_id":null,"docs":" Trait that tells you if a given type can be encoded/decoded in a compact way.\n","sig":null,"attributes":[{"value":"/ Trait that tells you if a given type can be encoded/decoded in a compact way.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64222,"byte_end":64303,"line_start":209,"line_end":209,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":649},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64375,"byte_end":64379,"line_start":212,"line_end":212,"column_start":7,"column_end":11},"name":"Type","qualname":"::compact::HasCompact::Type","value":"type Type: for<'a> EncodeAsRef<'a, Self> + Decode + From<Self> + Into<Self>;","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" The compact type; this can be\n","sig":null,"attributes":[{"value":"/ The compact type; this can be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64335,"byte_end":64368,"line_start":211,"line_end":211,"column_start":2,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":752},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/joiner.rs","byte_start":85168,"byte_end":85174,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"Joiner","qualname":"::joiner::Joiner","value":"Joiner","parent":null,"children":[{"krate":0,"index":753}],"decl_id":null,"docs":" Trait to allow itself to be serialised into a value which can be extended\n by bytes.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised into a value which can be extended","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/joiner.rs","byte_start":85066,"byte_end":85143,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ by bytes.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/joiner.rs","byte_start":85144,"byte_end":85157,"line_start":22,"line_end":22,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/joiner.rs","byte_start":85222,"byte_end":85225,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"and","qualname":"::joiner::Joiner::and","value":"pub fn and<V: Codec + Sized>(Self, &V) -> Self","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Append encoding of value to `Self`.\n","sig":null,"attributes":[{"value":"/ Append encoding of value to `Self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/joiner.rs","byte_start":85178,"byte_end":85217,"line_start":24,"line_end":24,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":771},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/keyedvec.rs","byte_start":86239,"byte_end":86247,"line_start":23,"line_end":23,"column_start":11,"column_end":19},"name":"KeyedVec","qualname":"::keyedvec::KeyedVec","value":"KeyedVec","parent":null,"children":[{"krate":0,"index":772}],"decl_id":null,"docs":" Trait to allow itself to be serialised and prepended by a given slice.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised and prepended by a given slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/keyedvec.rs","byte_start":86154,"byte_end":86228,"line_start":22,"line_end":22,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/keyedvec.rs","byte_start":86314,"byte_end":86326,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"to_keyed_vec","qualname":"::keyedvec::KeyedVec::to_keyed_vec","value":"pub fn to_keyed_vec(&Self, &[u8]) -> Vec<u8>","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Return an encoding of `Self` prepended by given slice.\n","sig":null,"attributes":[{"value":"/ Return an encoding of `Self` prepended by given slice.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/keyedvec.rs","byte_start":86251,"byte_end":86309,"line_start":24,"line_end":24,"column_start":2,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":786},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87472,"byte_end":87481,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"DecodeAll","qualname":"::decode_all::DecodeAll","value":"DecodeAll: Sized","parent":null,"children":[{"krate":0,"index":787}],"decl_id":null,"docs":" Extension trait to [`Decode`] that ensures that the given input data is consumed completly while\n decoding.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] that ensures that the given input data is consumed completly while","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87347,"byte_end":87447,"line_start":20,"line_end":20,"column_start":1,"column_end":101}},{"value":"/ decoding.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87448,"byte_end":87461,"line_start":21,"line_end":21,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87616,"byte_end":87626,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"name":"decode_all","qualname":"::decode_all::DecodeAll::decode_all","value":"pub fn decode_all(&[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data.","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87492,"byte_end":87550,"line_start":23,"line_end":23,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87552,"byte_end":87555,"line_start":24,"line_end":24,"column_start":2,"column_end":5}},{"value":"/ If not all data is consumed, an error is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87557,"byte_end":87611,"line_start":25,"line_end":25,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":803},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90397,"byte_end":90408,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"DecodeLimit","qualname":"::depth_limit::DecodeLimit","value":"DecodeLimit: Sized","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":807}],"decl_id":null,"docs":" Extension trait to [`Decode`] for decoding with a maximum recursion depth.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] for decoding with a maximum recursion depth.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90308,"byte_end":90386,"line_start":20,"line_end":20,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90532,"byte_end":90555,"line_start":25,"line_end":25,"column_start":5,"column_end":28},"name":"decode_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_with_depth_limit","value":"pub fn decode_with_depth_limit(u32, &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":803},"children":[],"decl_id":null,"docs":" Decode `Self` with the given maximum recursion depth.","sig":null,"attributes":[{"value":"/ Decode `Self` with the given maximum recursion depth.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90419,"byte_end":90476,"line_start":22,"line_end":22,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90478,"byte_end":90481,"line_start":23,"line_end":23,"column_start":2,"column_end":5}},{"value":"/ If `limit` is hit, an error is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90483,"byte_end":90527,"line_start":24,"line_end":24,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90734,"byte_end":90769,"line_start":30,"line_end":30,"column_start":5,"column_end":40},"name":"decode_and_advance_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_and_advance_with_depth_limit","value":"pub fn decode_and_advance_with_depth_limit<I: Input>(u32, &mut I)\n-> Result<Self, Error>","parent":{"krate":0,"index":803},"children":[],"decl_id":null,"docs":" Decode `Self` and advance `input` by the number of bytes consumed.","sig":null,"attributes":[{"value":"/ Decode `Self` and advance `input` by the number of bytes consumed.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90608,"byte_end":90678,"line_start":27,"line_end":27,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90680,"byte_end":90683,"line_start":28,"line_end":28,"column_start":2,"column_end":5}},{"value":"/ If `limit` is hit, an error is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90685,"byte_end":90729,"line_start":29,"line_end":29,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90975,"byte_end":91002,"line_start":35,"line_end":35,"column_start":5,"column_end":32},"name":"decode_all_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_all_with_depth_limit","value":"pub fn decode_all_with_depth_limit(u32, &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":803},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data.","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90833,"byte_end":90891,"line_start":32,"line_end":32,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90893,"byte_end":90896,"line_start":33,"line_end":33,"column_start":2,"column_end":5}},{"value":"/ If not all data is consumed or `limit` is hit, an error is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90898,"byte_end":90970,"line_start":34,"line_end":34,"column_start":2,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":859},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94231,"byte_end":94243,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"EncodeAppend","qualname":"::encode_append::EncodeAppend","value":"EncodeAppend","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"decl_id":null,"docs":" Trait that allows to append items to an encoded representation without\n decoding all previous added items.\n","sig":null,"attributes":[{"value":"/ Trait that allows to append items to an encoded representation without","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94107,"byte_end":94181,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ decoding all previous added items.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94182,"byte_end":94220,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":860},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94289,"byte_end":94293,"line_start":26,"line_end":26,"column_start":7,"column_end":11},"name":"Item","qualname":"::encode_append::EncodeAppend::Item","value":"type Item: Encode;","parent":{"krate":0,"index":859},"children":[],"decl_id":null,"docs":" The item that will be appended.\n","sig":null,"attributes":[{"value":"/ The item that will be appended.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94247,"byte_end":94282,"line_start":25,"line_end":25,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94910,"byte_end":94923,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"append_or_new","qualname":"::encode_append::EncodeAppend::append_or_new","value":"pub fn append_or_new<EncodeLikeItem, I>(Vec<u8>, I) -> Result<Vec<u8>, Error>\nwhere I: IntoIterator<Item = EncodeLikeItem>,\nEncodeLikeItem: EncodeLike<Self::Item>, I::IntoIter: ExactSizeIterator","parent":{"krate":0,"index":859},"children":[],"decl_id":null,"docs":" Append all items in `iter` to the given `self_encoded` representation\n or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","sig":null,"attributes":[{"value":"/ Append all items in `iter` to the given `self_encoded` representation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94305,"byte_end":94378,"line_start":28,"line_end":28,"column_start":2,"column_end":75}},{"value":"/ or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94380,"byte_end":94468,"line_start":29,"line_end":29,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94470,"byte_end":94473,"line_start":30,"line_end":30,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94475,"byte_end":94488,"line_start":31,"line_end":31,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94490,"byte_end":94493,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94495,"byte_end":94502,"line_start":33,"line_end":33,"column_start":2,"column_end":9}},{"value":"/# use parity_scale_codec::EncodeAppend;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94504,"byte_end":94546,"line_start":34,"line_end":34,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94548,"byte_end":94551,"line_start":35,"line_end":35,"column_start":2,"column_end":5}},{"value":"/ // Some encoded data","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94553,"byte_end":94577,"line_start":36,"line_end":36,"column_start":2,"column_end":26}},{"value":"/ let data = Vec::new();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94579,"byte_end":94605,"line_start":37,"line_end":37,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94607,"byte_end":94610,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ let item = 8u32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94612,"byte_end":94632,"line_start":39,"line_end":39,"column_start":2,"column_end":22}},{"value":"/ let encoded = <Vec<u32> as EncodeAppend>::append_or_new(data, std::iter::once(&item)).expect(\"Adds new element\");","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94634,"byte_end":94751,"line_start":40,"line_end":40,"column_start":2,"column_end":119}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94753,"byte_end":94756,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ // Add multiple element","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94758,"byte_end":94785,"line_start":42,"line_end":42,"column_start":2,"column_end":29}},{"value":"/ <Vec<u32> as EncodeAppend>::append_or_new(encoded, &[700u32, 800u32, 10u32]).expect(\"Adds new elements\");","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94787,"byte_end":94896,"line_start":43,"line_end":43,"column_start":2,"column_end":111}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":94898,"byte_end":94905,"line_start":44,"line_end":44,"column_start":2,"column_end":9}}]},{"kind":"Trait","id":{"krate":0,"index":890},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103305,"byte_end":103315,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"EncodeLike","qualname":"::encode_like::EncodeLike","value":"EncodeLike<T: Encode = Self>: Sized + Encode","parent":null,"children":[],"decl_id":null,"docs":" A marker trait that tells the compiler that a type encode to the same representation as another\n type.","sig":null,"attributes":[{"value":"/ A marker trait that tells the compiler that a type encode to the same representation as another","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101206,"byte_end":101305,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101306,"byte_end":101315,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101316,"byte_end":101319,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ E.g. `Vec<u8>` has the same encoded representation as `&[u8]`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101320,"byte_end":101386,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101387,"byte_end":101390,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101391,"byte_end":101404,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101405,"byte_end":101408,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101409,"byte_end":101416,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101417,"byte_end":101467,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101468,"byte_end":101527,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101528,"byte_end":101578,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101579,"byte_end":101584,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101585,"byte_end":101588,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101589,"byte_end":101604,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     // Just pass the a reference to the normal tuple.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101605,"byte_end":101662,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/     encode_like::<(u32, u32), _>(&(1u32, 2u32));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101663,"byte_end":101715,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/     // Pass a tuple of references","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101716,"byte_end":101753,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, &2u32));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101754,"byte_end":101808,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/     // Pass a tuple of a reference and a value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101809,"byte_end":101860,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, 2u32));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101861,"byte_end":101914,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101915,"byte_end":101920,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101921,"byte_end":101928,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101929,"byte_end":101932,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101933,"byte_end":101946,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101947,"byte_end":101950,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The relation is not symetric, `T` implements `EncodeLike<U>` does not mean `U` has same","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":101951,"byte_end":102042,"line_start":42,"line_end":42,"column_start":1,"column_end":92}},{"value":"/ representation as `T`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102043,"byte_end":102069,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ For instance we could imaging a non zero integer to be encoded to the same representation as","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102070,"byte_end":102166,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/ the said integer but not the other way around.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102167,"byte_end":102217,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102218,"byte_end":102221,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Limitation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102222,"byte_end":102238,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102239,"byte_end":102242,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Not all possible implementations of EncodeLike are implemented (for instance `Box<Box<u32>>`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102243,"byte_end":102339,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ does not implement `EncodeLike<u32>`). To bypass this issue either open a PR to add the new","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102340,"byte_end":102435,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ combination or use [`Ref`](./struct.Ref.html) reference wrapper or define your own wrapper","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102436,"byte_end":102530,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ and implement `EncodeLike` on it as such:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102531,"byte_end":102576,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102577,"byte_end":102584,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode, WrapperTypeEncode};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102585,"byte_end":102654,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102655,"byte_end":102714,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102715,"byte_end":102765,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102766,"byte_end":102771,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102772,"byte_end":102775,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ struct MyWrapper<'a>(&'a (Box<Box<u32>>, u32));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102776,"byte_end":102827,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/ impl<'a> core::ops::Deref for MyWrapper<'a> { // Or use derive_deref crate","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102828,"byte_end":102906,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/     type Target = (Box<Box<u32>>, u32);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102907,"byte_end":102950,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/     fn deref(&self) -> &Self::Target { &self.0 }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":102951,"byte_end":103003,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103004,"byte_end":103009,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103010,"byte_end":103013,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl<'a> parity_scale_codec::WrapperTypeEncode for MyWrapper<'a> {}","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103014,"byte_end":103085,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ impl<'a> parity_scale_codec::EncodeLike<(u32, u32)> for MyWrapper<'a> {}","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103086,"byte_end":103162,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103163,"byte_end":103166,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103167,"byte_end":103182,"line_start":68,"line_end":68,"column_start":1,"column_end":16}},{"value":"/     let v = (Box::new(Box::new(0)), 0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103183,"byte_end":103226,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/     encode_like::<(u32, u32), _>(&MyWrapper(&v));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103227,"byte_end":103280,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103281,"byte_end":103286,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103287,"byte_end":103294,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103752,"byte_end":103755,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"Ref","qualname":"::encode_like::Ref","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference wrapper that implement encode like any type that is encoded like its inner type.","sig":null,"attributes":[{"value":"/ Reference wrapper that implement encode like any type that is encoded like its inner type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103354,"byte_end":103448,"line_start":75,"line_end":75,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103449,"byte_end":103452,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103453,"byte_end":103466,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103467,"byte_end":103470,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103471,"byte_end":103482,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use parity_scale_codec::{EncodeLike, Ref};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103483,"byte_end":103531,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/ fn foo<T: EncodeLike<u8>>(t: T) -> T {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103532,"byte_end":103574,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/     store_t(Ref::from(&t)); // Store t without moving it, but only using a reference.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103575,"byte_end":103664,"line_start":82,"line_end":82,"column_start":1,"column_end":90}},{"value":"/     t","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103665,"byte_end":103674,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103675,"byte_end":103680,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103681,"byte_end":103684,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ fn store_t<T: EncodeLike<u8>>(t: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103685,"byte_end":103726,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103727,"byte_end":103732,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103733,"byte_end":103740,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107094,"byte_end":107099,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2527},{"krate":0,"index":2528}],"decl_id":null,"docs":" Error type.","sig":null,"attributes":[{"value":"/ Error type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":106906,"byte_end":106921,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":106922,"byte_end":106925,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Descriptive on `std` environment, with chaining error on `chain-error` environment,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":106926,"byte_end":107013,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ underscriptive otherwise.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107014,"byte_end":107043,"line_start":24,"line_end":24,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107412,"byte_end":107417,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"chain","qualname":"<Error>::chain","value":"pub fn chain<impl Into<Cow<'static, str>>: Into<Cow>>(Self,\n                                                      impl Into<Cow<'static, str>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Chain error message with description.","sig":null,"attributes":[{"value":"/ Chain error message with description.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107239,"byte_end":107280,"line_start":34,"line_end":34,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107282,"byte_end":107285,"line_start":35,"line_end":35,"column_start":2,"column_end":5}},{"value":"/ When compiled with `chain-error` feature, the description is chained, otherwise the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107287,"byte_end":107374,"line_start":36,"line_end":36,"column_start":2,"column_end":89}},{"value":"/ description is ditched.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107376,"byte_end":107403,"line_start":37,"line_end":37,"column_start":2,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":958},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110832,"byte_end":110845,"line_start":28,"line_end":28,"column_start":11,"column_end":24},"name":"MaxEncodedLen","qualname":"::max_encoded_len::MaxEncodedLen","value":"MaxEncodedLen: Encode","parent":null,"children":[{"krate":0,"index":959}],"decl_id":null,"docs":" Items implementing `MaxEncodedLen` have a statically known maximum encoded size.","sig":null,"attributes":[{"value":"/ Items implementing `MaxEncodedLen` have a statically known maximum encoded size.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110376,"byte_end":110460,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110461,"byte_end":110464,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Some containers, such as `BoundedVec`, have enforced size limits and this trait","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110465,"byte_end":110548,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/ can be implemented accurately. Other containers, such as `StorageMap`, do not have enforced size","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110549,"byte_end":110649,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/ limits. For those containers, it is necessary to make a documented assumption about the maximum","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110650,"byte_end":110749,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ usage, and compute the max encoded length based on that assumption.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110750,"byte_end":110821,"line_start":27,"line_end":27,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110930,"byte_end":110945,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"max_encoded_len","qualname":"::max_encoded_len::MaxEncodedLen::max_encoded_len","value":"pub fn max_encoded_len() -> usize","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" Upper bound, in bytes, of the maximum encoded size of this item.\n","sig":null,"attributes":[{"value":"/ Upper bound, in bytes, of the maximum encoded size of this item.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110857,"byte_end":110925,"line_start":29,"line_end":29,"column_start":2,"column_end":70}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":15064,"byte_end":15069,"line_start":116,"line_end":116,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16319,"byte_end":16327,"line_start":148,"line_end":148,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16939,"byte_end":16940,"line_start":177,"line_end":177,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19209,"byte_end":19220,"line_start":259,"line_end":259,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20798,"byte_end":20799,"line_start":307,"line_end":307,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21025,"byte_end":21026,"line_start":312,"line_end":312,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21249,"byte_end":21250,"line_start":317,"line_end":317,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21637,"byte_end":21640,"line_start":328,"line_end":328,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21687,"byte_end":21690,"line_start":329,"line_end":329,"column_start":41,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21731,"byte_end":21734,"line_start":330,"line_end":330,"column_start":35,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21780,"byte_end":21781,"line_start":331,"line_end":331,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21951,"byte_end":21952,"line_start":336,"line_end":336,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22033,"byte_end":22034,"line_start":338,"line_end":338,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22220,"byte_end":22221,"line_start":343,"line_end":343,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22278,"byte_end":22281,"line_start":345,"line_end":345,"column_start":53,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22346,"byte_end":22349,"line_start":346,"line_end":346,"column_start":55,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22408,"byte_end":22411,"line_start":347,"line_end":347,"column_start":49,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22479,"byte_end":22480,"line_start":348,"line_end":348,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22626,"byte_end":22629,"line_start":354,"line_end":354,"column_start":40,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22677,"byte_end":22680,"line_start":355,"line_end":355,"column_start":42,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22722,"byte_end":22725,"line_start":356,"line_end":356,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22772,"byte_end":22773,"line_start":357,"line_end":357,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22817,"byte_end":22819,"line_start":359,"line_end":359,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22867,"byte_end":22869,"line_start":360,"line_end":360,"column_start":42,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22911,"byte_end":22913,"line_start":361,"line_end":361,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22959,"byte_end":22960,"line_start":362,"line_end":362,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22993,"byte_end":22999,"line_start":364,"line_end":364,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23024,"byte_end":23030,"line_start":365,"line_end":365,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23061,"byte_end":23067,"line_start":366,"line_end":366,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23133,"byte_end":23134,"line_start":370,"line_end":370,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23785,"byte_end":23788,"line_start":398,"line_end":398,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23892,"byte_end":23895,"line_start":402,"line_end":402,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23999,"byte_end":24001,"line_start":406,"line_end":406,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":24051,"byte_end":24052,"line_start":410,"line_end":410,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":25646,"byte_end":25652,"line_start":453,"line_end":453,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26068,"byte_end":26074,"line_start":475,"line_end":475,"column_start":63,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26207,"byte_end":26213,"line_start":483,"line_end":483,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26854,"byte_end":26864,"line_start":503,"line_end":503,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26965,"byte_end":26975,"line_start":509,"line_end":509,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27231,"byte_end":27241,"line_start":523,"line_end":523,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27262,"byte_end":27272,"line_start":525,"line_end":525,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27603,"byte_end":27609,"line_start":536,"line_end":536,"column_start":61,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27644,"byte_end":27650,"line_start":538,"line_end":538,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27974,"byte_end":27980,"line_start":557,"line_end":557,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32435,"byte_end":32438,"line_start":742,"line_end":742,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32617,"byte_end":32628,"line_start":750,"line_end":750,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32655,"byte_end":32666,"line_start":752,"line_end":752,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32753,"byte_end":32764,"line_start":756,"line_end":756,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32919,"byte_end":32925,"line_start":763,"line_end":763,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":35912,"byte_end":35915,"line_start":857,"line_end":857,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":35979,"byte_end":35982,"line_start":858,"line_end":858,"column_start":58,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":36044,"byte_end":36047,"line_start":859,"line_end":859,"column_start":56,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":36147,"byte_end":36150,"line_start":862,"line_end":862,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38076,"byte_end":38084,"line_start":924,"line_end":924,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38146,"byte_end":38154,"line_start":925,"line_end":925,"column_start":56,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38288,"byte_end":38296,"line_start":927,"line_end":927,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38365,"byte_end":38368,"line_start":928,"line_end":928,"column_start":63,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38403,"byte_end":38411,"line_start":930,"line_end":930,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":39341,"byte_end":39349,"line_start":968,"line_end":968,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":44451,"byte_end":44459,"line_start":1189,"line_end":1189,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":44688,"byte_end":44696,"line_start":1201,"line_end":1201,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45079,"byte_end":45087,"line_start":1213,"line_end":1213,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45111,"byte_end":45116,"line_start":1215,"line_end":1215,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45293,"byte_end":45298,"line_start":1228,"line_end":1228,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45537,"byte_end":45551,"line_start":1239,"line_end":1239,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45730,"byte_end":45744,"line_start":1252,"line_end":1252,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":59837,"byte_end":59852,"line_start":28,"line_end":28,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":60312,"byte_end":60323,"line_start":52,"line_end":52,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61231,"byte_end":61238,"line_start":84,"line_end":84,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61325,"byte_end":61332,"line_start":88,"line_end":88,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61765,"byte_end":61772,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61841,"byte_end":61848,"line_start":109,"line_end":109,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":62267,"byte_end":62277,"line_start":130,"line_end":130,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":62373,"byte_end":62383,"line_start":136,"line_end":136,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":62865,"byte_end":62872,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63504,"byte_end":63514,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63601,"byte_end":63608,"line_start":189,"line_end":189,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63787,"byte_end":63794,"line_start":196,"line_end":196,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64028,"byte_end":64035,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64489,"byte_end":64496,"line_start":215,"line_end":215,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64618,"byte_end":64619,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64751,"byte_end":64761,"line_start":225,"line_end":225,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64981,"byte_end":64991,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":65449,"byte_end":65456,"line_start":257,"line_end":257,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":65580,"byte_end":65590,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":66132,"byte_end":66139,"line_start":286,"line_end":286,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":66300,"byte_end":66310,"line_start":296,"line_end":296,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":66963,"byte_end":66970,"line_start":320,"line_end":320,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":67186,"byte_end":67196,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":68201,"byte_end":68208,"line_start":362,"line_end":362,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":68476,"byte_end":68486,"line_start":375,"line_end":375,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":69495,"byte_end":69502,"line_start":406,"line_end":406,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":69769,"byte_end":69776,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":70231,"byte_end":70238,"line_start":431,"line_end":431,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":70695,"byte_end":70702,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":71402,"byte_end":71409,"line_start":475,"line_end":475,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":72397,"byte_end":72404,"line_start":514,"line_end":514,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":73803,"byte_end":73810,"line_start":569,"line_end":569,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/joiner.rs","byte_start":85292,"byte_end":85293,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/keyedvec.rs","byte_start":86397,"byte_end":86398,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87698,"byte_end":87699,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":91172,"byte_end":91190,"line_start":45,"line_end":45,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":91771,"byte_end":91772,"line_start":74,"line_end":74,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":95170,"byte_end":95173,"line_start":55,"line_end":55,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":95547,"byte_end":95555,"line_start":71,"line_end":71,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103886,"byte_end":103889,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":104029,"byte_end":104032,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":104175,"byte_end":104178,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":104248,"byte_end":104251,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107230,"byte_end":107235,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":108248,"byte_end":108253,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":108512,"byte_end":108517,"line_start":87,"line_end":87,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":108780,"byte_end":108785,"line_start":103,"line_end":103,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":112504,"byte_end":112510,"line_start":88,"line_end":88,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":112625,"byte_end":112631,"line_start":94,"line_end":94,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":112816,"byte_end":112827,"line_start":104,"line_end":104,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":15064,"byte_end":15069,"line_start":116,"line_end":116,"column_start":31,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2526},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16319,"byte_end":16327,"line_start":148,"line_end":148,"column_start":34,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":165},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":16939,"byte_end":16940,"line_start":177,"line_end":177,"column_start":36,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":177},"to":{"krate":0,"index":173}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19209,"byte_end":19220,"line_start":259,"line_end":259,"column_start":17,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":213},"to":{"krate":0,"index":173}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":19717,"byte_end":19722,"line_start":277,"line_end":277,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20744,"byte_end":20750,"line_start":306,"line_end":306,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":220},"to":{"krate":0,"index":228}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20753,"byte_end":20759,"line_start":306,"line_end":306,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":202},"to":{"krate":0,"index":228}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20798,"byte_end":20799,"line_start":307,"line_end":307,"column_start":36,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":230},"to":{"krate":0,"index":228}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20958,"byte_end":20964,"line_start":311,"line_end":311,"column_start":23,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":202},"to":{"krate":0,"index":231}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":20967,"byte_end":20977,"line_start":311,"line_end":311,"column_start":32,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":890},"to":{"krate":0,"index":231}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21025,"byte_end":21026,"line_start":312,"line_end":312,"column_start":45,"column_end":46},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":233},"to":{"krate":0,"index":231}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21183,"byte_end":21189,"line_start":316,"line_end":316,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":220},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21192,"byte_end":21202,"line_start":316,"line_end":316,"column_start":31,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":231},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21249,"byte_end":21250,"line_start":317,"line_end":317,"column_start":44,"column_end":45},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":236},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21589,"byte_end":21594,"line_start":326,"line_end":326,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3215},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21637,"byte_end":21640,"line_start":328,"line_end":328,"column_start":39,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21687,"byte_end":21690,"line_start":329,"line_end":329,"column_start":41,"column_end":44},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21731,"byte_end":21734,"line_start":330,"line_end":330,"column_start":35,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21780,"byte_end":21781,"line_start":331,"line_end":331,"column_start":40,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":245},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":21951,"byte_end":21952,"line_start":336,"line_end":336,"column_start":36,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":253},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22033,"byte_end":22034,"line_start":338,"line_end":338,"column_start":37,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":257},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22220,"byte_end":22221,"line_start":343,"line_end":343,"column_start":40,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":265},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22278,"byte_end":22281,"line_start":345,"line_end":345,"column_start":53,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22346,"byte_end":22349,"line_start":346,"line_end":346,"column_start":55,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22408,"byte_end":22411,"line_start":347,"line_end":347,"column_start":49,"column_end":52},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22479,"byte_end":22480,"line_start":348,"line_end":348,"column_start":58,"column_end":59},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":277},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22626,"byte_end":22629,"line_start":354,"line_end":354,"column_start":40,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":5965},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22677,"byte_end":22680,"line_start":355,"line_end":355,"column_start":42,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5965},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22722,"byte_end":22725,"line_start":356,"line_end":356,"column_start":36,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":5965},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22772,"byte_end":22773,"line_start":357,"line_end":357,"column_start":41,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":287},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22817,"byte_end":22819,"line_start":359,"line_end":359,"column_start":40,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":4647},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22867,"byte_end":22869,"line_start":360,"line_end":360,"column_start":42,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4647},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22911,"byte_end":22913,"line_start":361,"line_end":361,"column_start":36,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":4647},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22959,"byte_end":22960,"line_start":362,"line_end":362,"column_start":40,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":295},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":22993,"byte_end":22999,"line_start":364,"line_end":364,"column_start":29,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":7602},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23024,"byte_end":23030,"line_start":365,"line_end":365,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":7602},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23061,"byte_end":23067,"line_start":366,"line_end":366,"column_start":28,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":7602},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23133,"byte_end":23134,"line_start":370,"line_end":370,"column_start":23,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23697,"byte_end":23702,"line_start":394,"line_end":394,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23785,"byte_end":23788,"line_start":398,"line_end":398,"column_start":31,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23892,"byte_end":23895,"line_start":402,"line_end":402,"column_start":31,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":5965},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":23999,"byte_end":24001,"line_start":406,"line_end":406,"column_start":31,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":4647},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":24051,"byte_end":24052,"line_start":410,"line_end":410,"column_start":23,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":323},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":25646,"byte_end":25652,"line_start":453,"line_end":453,"column_start":39,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":2,"index":37095},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26068,"byte_end":26074,"line_start":475,"line_end":475,"column_start":63,"column_end":69},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":37095},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26207,"byte_end":26213,"line_start":483,"line_end":483,"column_start":39,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":2,"index":37095},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26854,"byte_end":26864,"line_start":503,"line_end":503,"column_start":21,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":9373}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":26965,"byte_end":26975,"line_start":509,"line_end":509,"column_start":17,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1058},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27231,"byte_end":27241,"line_start":523,"line_end":523,"column_start":21,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1058},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27262,"byte_end":27272,"line_start":525,"line_end":525,"column_start":17,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1058},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27603,"byte_end":27609,"line_start":536,"line_end":536,"column_start":61,"column_end":67},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":36969},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27644,"byte_end":27650,"line_start":538,"line_end":538,"column_start":28,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":2,"index":36969},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":27974,"byte_end":27980,"line_start":557,"line_end":557,"column_start":28,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":2,"index":36969},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32435,"byte_end":32438,"line_start":742,"line_end":742,"column_start":42,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32617,"byte_end":32628,"line_start":750,"line_end":750,"column_start":24,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":3022},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32655,"byte_end":32666,"line_start":752,"line_end":752,"column_start":20,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":3022},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32753,"byte_end":32764,"line_start":756,"line_end":756,"column_start":20,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":3022},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":32919,"byte_end":32925,"line_start":763,"line_end":763,"column_start":17,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":7602},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":35912,"byte_end":35915,"line_start":857,"line_end":857,"column_start":31,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":5,"index":7062},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":35979,"byte_end":35982,"line_start":858,"line_end":858,"column_start":58,"column_end":61},"kind":{"Impl":{"id":71}},"from":{"krate":5,"index":7062},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":36044,"byte_end":36047,"line_start":859,"line_end":859,"column_start":56,"column_end":59},"kind":{"Impl":{"id":72}},"from":{"krate":5,"index":7062},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":36147,"byte_end":36150,"line_start":862,"line_end":862,"column_start":28,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":5,"index":7062},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38076,"byte_end":38084,"line_start":924,"line_end":924,"column_start":32,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":4039},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38146,"byte_end":38154,"line_start":925,"line_end":925,"column_start":56,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":4039},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38288,"byte_end":38296,"line_start":927,"line_end":927,"column_start":58,"column_end":66},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":4039},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38365,"byte_end":38368,"line_start":928,"line_end":928,"column_start":63,"column_end":66},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":7062},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":38403,"byte_end":38411,"line_start":930,"line_end":930,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":4039},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":39341,"byte_end":39349,"line_start":968,"line_end":968,"column_start":28,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":4039},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":44451,"byte_end":44459,"line_start":1189,"line_end":1189,"column_start":17,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":2,"index":39633},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":44688,"byte_end":44696,"line_start":1201,"line_end":1201,"column_start":17,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":2,"index":39633},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45079,"byte_end":45087,"line_start":1213,"line_end":1213,"column_start":21,"column_end":29},"kind":{"Impl":{"id":115}},"from":{"krate":2,"index":39633},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45111,"byte_end":45116,"line_start":1215,"line_end":1215,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":2,"index":35528},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45293,"byte_end":45298,"line_start":1228,"line_end":1228,"column_start":20,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":2,"index":35528},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45537,"byte_end":45551,"line_start":1239,"line_end":1239,"column_start":20,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":2,"index":35597},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/codec.rs","byte_start":45730,"byte_end":45744,"line_start":1252,"line_end":1252,"column_start":20,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":2,"index":35597},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":59837,"byte_end":59852,"line_start":28,"line_end":28,"column_start":33,"column_end":48},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":567},"to":{"krate":0,"index":173}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":60312,"byte_end":60323,"line_start":52,"line_end":52,"column_start":35,"column_end":46},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":575},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61231,"byte_end":61238,"line_start":84,"line_end":84,"column_start":21,"column_end":28},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2461},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61325,"byte_end":61332,"line_start":88,"line_end":88,"column_start":35,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2461},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61459,"byte_end":61463,"line_start":93,"line_end":93,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2910},"to":{"krate":0,"index":595}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61765,"byte_end":61772,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":61841,"byte_end":61848,"line_start":109,"line_end":109,"column_start":20,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":62267,"byte_end":62277,"line_start":130,"line_end":130,"column_start":28,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":62373,"byte_end":62383,"line_start":136,"line_end":136,"column_start":24,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":62865,"byte_end":62872,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63504,"byte_end":63514,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63601,"byte_end":63608,"line_start":189,"line_end":189,"column_start":30,"column_end":37},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2461},"to":{"krate":2,"index":9373}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":63787,"byte_end":63794,"line_start":196,"line_end":196,"column_start":30,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2461},"to":{"krate":22,"index":2078}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64028,"byte_end":64035,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2461},"to":{"krate":22,"index":1539}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64326,"byte_end":64331,"line_start":210,"line_end":210,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64489,"byte_end":64496,"line_start":215,"line_end":215,"column_start":40,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":327}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64618,"byte_end":64619,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":656},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64751,"byte_end":64761,"line_start":225,"line_end":225,"column_start":21,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":64981,"byte_end":64991,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":65449,"byte_end":65456,"line_start":257,"line_end":257,"column_start":25,"column_end":32},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":585}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":65580,"byte_end":65590,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":66132,"byte_end":66139,"line_start":286,"line_end":286,"column_start":26,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":585}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":66300,"byte_end":66310,"line_start":296,"line_end":296,"column_start":21,"column_end":31},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":66963,"byte_end":66970,"line_start":320,"line_end":320,"column_start":26,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":585}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":67186,"byte_end":67196,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":68201,"byte_end":68208,"line_start":362,"line_end":362,"column_start":26,"column_end":33},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":585}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":68476,"byte_end":68486,"line_start":375,"line_end":375,"column_start":21,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":202}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":69495,"byte_end":69502,"line_start":406,"line_end":406,"column_start":27,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":585}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":69769,"byte_end":69776,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":70231,"byte_end":70238,"line_start":431,"line_end":431,"column_start":17,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":70695,"byte_end":70702,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":71402,"byte_end":71409,"line_start":475,"line_end":475,"column_start":17,"column_end":24},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":72397,"byte_end":72404,"line_start":514,"line_end":514,"column_start":17,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/compact.rs","byte_start":73803,"byte_end":73810,"line_start":569,"line_end":569,"column_start":17,"column_end":24},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2461},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/joiner.rs","byte_start":85292,"byte_end":85293,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":756},"to":{"krate":0,"index":752}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/keyedvec.rs","byte_start":86397,"byte_end":86398,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":774},"to":{"krate":0,"index":771}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87483,"byte_end":87488,"line_start":22,"line_end":22,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":786}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/decode_all.rs","byte_start":87698,"byte_end":87699,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":789},"to":{"krate":0,"index":786}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":90410,"byte_end":90415,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":803}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":91172,"byte_end":91190,"line_start":45,"line_end":45,"column_start":29,"column_end":47},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/depth_limit.rs","byte_start":91771,"byte_end":91772,"line_start":74,"line_end":74,"column_start":33,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":823},"to":{"krate":0,"index":803}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":95170,"byte_end":95173,"line_start":55,"line_end":55,"column_start":34,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":5,"index":7062},"to":{"krate":0,"index":859}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_append.rs","byte_start":95547,"byte_end":95555,"line_start":71,"line_end":71,"column_start":61,"column_end":69},"kind":{"Impl":{"id":163}},"from":{"krate":5,"index":4039},"to":{"krate":0,"index":859}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103335,"byte_end":103340,"line_start":73,"line_end":73,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103343,"byte_end":103349,"line_start":73,"line_end":73,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":202},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":103886,"byte_end":103889,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":104029,"byte_end":104032,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":104175,"byte_end":104178,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/encode_like.rs","byte_start":104248,"byte_end":104251,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":890}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":107230,"byte_end":107235,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":108248,"byte_end":108253,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2526},"to":{"krate":2,"index":9380}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":108512,"byte_end":108517,"line_start":87,"line_end":87,"column_start":29,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2526},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/error.rs","byte_start":108780,"byte_end":108785,"line_start":103,"line_end":103,"column_start":28,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2526},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":110847,"byte_end":110853,"line_start":28,"line_end":28,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":202},"to":{"krate":0,"index":958}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":112504,"byte_end":112510,"line_start":88,"line_end":88,"column_start":42,"column_end":48},"kind":{"Impl":{"id":183}},"from":{"krate":2,"index":36969},"to":{"krate":0,"index":958}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":112625,"byte_end":112631,"line_start":94,"line_end":94,"column_start":30,"column_end":36},"kind":{"Impl":{"id":184}},"from":{"krate":2,"index":37095},"to":{"krate":0,"index":958}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.3.1/src/max_encoded_len.rs","byte_start":112816,"byte_end":112827,"line_start":104,"line_end":104,"column_start":27,"column_end":38},"kind":{"Impl":{"id":185}},"from":{"krate":2,"index":3022},"to":{"krate":0,"index":958}}]}