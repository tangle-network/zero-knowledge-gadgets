{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6","program":"/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","ahash","--edition=2018","/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=4cd14bf9ef7a2dda","-C","extra-filename=-4cd14bf9ef7a2dda","--out-dir","/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","-L","dependency=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","--extern","getrandom=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libgetrandom-de21c0b58755dd77.rmeta","--extern","once_cell=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libonce_cell-a997dae934948171.rmeta","--cap-lints","allow","--cfg","feature=\"specialize\"","--cfg","feature=\"stdsimd\"","--cfg","feature=\"runtime-rng\"","--cfg","feature=\"folded_multiply\"","--error-format=json","--sysroot","/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin"],"output":"/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libahash-4cd14bf9ef7a2dda.rmeta"},"prelude":{"crate_id":{"name":"ahash","disambiguator":[14218587570204302749,0]},"crate_root":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src","external_crates":[{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5231689799850066461,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17864008973282999150,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17296295565214172833,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":4,"id":{"name":"alloc","disambiguator":[2118848927325286491,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":5,"id":{"name":"once_cell","disambiguator":[5810844705288385153,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":6,"id":{"name":"getrandom","disambiguator":[15405553764762976901,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":7,"id":{"name":"cfg_if","disambiguator":[1558138431257801347,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":8,"id":{"name":"std","disambiguator":[10313591498153884623,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":9,"id":{"name":"libc","disambiguator":[13292461249116594054,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":10,"id":{"name":"unwind","disambiguator":[4814502004061530608,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":11,"id":{"name":"cfg_if","disambiguator":[15708407810567005444,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2791263468303431766,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6506189918680636659,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[8728067978980854181,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":15,"id":{"name":"std_detect","disambiguator":[10381178398037116026,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":16,"id":{"name":"addr2line","disambiguator":[10719114933783356113,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":17,"id":{"name":"gimli","disambiguator":[903433031267741442,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":18,"id":{"name":"object","disambiguator":[3053230250002770710,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":19,"id":{"name":"memchr","disambiguator":[4944501850750929564,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[675967159280285970,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":21,"id":{"name":"libc","disambiguator":[4936676803799380173,0]}}],"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":0,"byte_end":8507,"line_start":1,"line_end":263,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":867},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":2432,"byte_end":2439,"line_start":65,"line_end":65,"column_start":31,"column_end":38},"alias_span":null,"name":"AHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":876},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":2470,"byte_end":2481,"line_start":66,"line_end":66,"column_start":30,"column_end":41},"alias_span":null,"name":"RandomState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":2511,"byte_end":2521,"line_start":68,"line_end":68,"column_start":28,"column_end":38},"alias_span":null,"name":"CallHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":0,"byte_end":8507,"line_start":1,"line_end":263,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":44},{"krate":0,"index":121},{"krate":0,"index":134},{"krate":0,"index":231},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":320}],"decl_id":null,"docs":" AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.\n This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.\n It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.\n This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can\n induce a collision.","sig":null,"attributes":[{"value":"/ AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":1,"column_start":1,"column_end":113}},{"value":"/ This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":113,"byte_end":212,"line_start":2,"line_end":2,"column_start":1,"column_end":100}},{"value":"/ It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":213,"byte_end":320,"line_start":3,"line_end":3,"column_start":1,"column_end":108}},{"value":"/ This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":321,"byte_end":429,"line_start":4,"line_end":4,"column_start":1,"column_end":109}},{"value":"/ induce a collision.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":430,"byte_end":453,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":454,"byte_end":457,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # How aHash works","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":458,"byte_end":479,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":480,"byte_end":483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ aHash uses the hardware AES instruction on x86 processors to provide a keyed hash function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":484,"byte_end":579,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ aHash is not a cryptographically secure hash.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":580,"byte_end":629,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":630,"byte_end":633,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":634,"byte_end":647,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":648,"byte_end":655,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use ahash::{AHasher, RandomState};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":656,"byte_end":694,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":695,"byte_end":729,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":730,"byte_end":733,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<i32, i32, RandomState> = HashMap::default();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":734,"byte_end":803,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":804,"byte_end":827,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":828,"byte_end":835,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ For convinence wrappers called `AHashMap` and `AHashSet` are also provided.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":836,"byte_end":915,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ These to the same thing with slightly less typing.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":916,"byte_end":970,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/ ```ignore","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":971,"byte_end":984,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use ahash::AHashMap;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":985,"byte_end":1009,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut map: AHashMap<i32, i32> = AHashMap::with_capacity(4);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1014,"byte_end":1079,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1080,"byte_end":1103,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ map.insert(56, 78);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1104,"byte_end":1127,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1128,"byte_end":1135,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"deny(clippy :: correctness, clippy :: complexity, clippy :: perf)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1136,"byte_end":1199,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"allow(clippy :: pedantic, clippy :: cast_lossless, clippy ::\n        unreadable_literal)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1200,"byte_end":1278,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"no_std","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1329,"byte_end":1335,"line_start":31,"line_end":31,"column_start":51,"column_end":57}},{"value":"feature(min_specialization)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1374,"byte_end":1401,"line_start":32,"line_end":32,"column_start":37,"column_end":64}},{"value":"feature(stdsimd)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1437,"byte_end":1453,"line_start":33,"line_end":33,"column_start":34,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":867},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13934,"byte_end":13941,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"AHasher","qualname":"::fallback_hash::AHasher","value":"AHasher {  }","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"decl_id":null,"docs":" A `Hasher` for hashing an arbitrary stream of bytes.","sig":null,"attributes":[{"value":"/ A `Hasher` for hashing an arbitrary stream of bytes.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13440,"byte_end":13496,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13497,"byte_end":13500,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instances of [`AHasher`] represent state that is updated while hashing data.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13501,"byte_end":13581,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13582,"byte_end":13585,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Each method updates the internal state based on the new data provided. Once","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13586,"byte_end":13665,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ all of the data has been provided, the resulting hash can be obtained by calling","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13666,"byte_end":13750,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ `finish()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13751,"byte_end":13765,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13766,"byte_end":13769,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [Clone] is also provided in case you wish to calculate hashes for two different items that","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13770,"byte_end":13864,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ start with the same data.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13865,"byte_end":13894,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13895,"byte_end":13898,"line_start":22,"line_end":22,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14171,"byte_end":14184,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<AHasher>::new_with_keys","value":"pub fn new_with_keys(u128, u128) -> AHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hasher keyed to the provided key.\n","sig":null,"attributes":[{"value":"/ Creates a new hasher keyed to the provided key.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14023,"byte_end":14074,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14079,"byte_end":14088,"line_start":32,"line_end":32,"column_start":5,"column_end":14}},{"value":"allow(dead_code)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14093,"byte_end":14112,"line_start":33,"line_end":33,"column_start":5,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39259,"byte_end":39271,"line_start":53,"line_end":53,"column_start":11,"column_end":23},"name":"RandomSource","qualname":"::random_state::RandomSource","value":"RandomSource","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":181}],"decl_id":null,"docs":" A supplier of Randomness used for different hashers.\n See [RandomState.set_random_source].\n","sig":null,"attributes":[{"value":"/ A supplier of Randomness used for different hashers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39151,"byte_end":39207,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/ See [RandomState.set_random_source].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39208,"byte_end":39248,"line_start":52,"line_end":52,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39282,"byte_end":39297,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"get_fixed_seeds","qualname":"::random_state::RandomSource::get_fixed_seeds","value":"pub fn get_fixed_seeds(&Self) -> &'static [[u64; ]; ]","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39340,"byte_end":39355,"line_start":57,"line_end":57,"column_start":8,"column_end":23},"name":"gen_hasher_seed","qualname":"::random_state::RandomSource::gen_hasher_seed","value":"pub fn gen_hasher_seed(&Self) -> usize","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42129,"byte_end":42140,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::random_state::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880}],"decl_id":null,"docs":" Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create\n [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","sig":null,"attributes":[{"value":"/ Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41789,"byte_end":41874,"line_start":145,"line_end":145,"column_start":1,"column_end":86}},{"value":"/ [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41875,"byte_end":41953,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41954,"byte_end":41957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [build_hasher]: ahash::","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41958,"byte_end":41985,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41986,"byte_end":42017,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42018,"byte_end":42059,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42060,"byte_end":42100,"line_start":151,"line_end":151,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43151,"byte_end":43168,"line_start":177,"line_end":177,"column_start":12,"column_end":29},"name":"set_random_source","qualname":"<RandomState>::set_random_source","value":"pub fn set_random_source<impl RandomSource + Send + Sync + 'static: RandomSource +\n                         Send + Sync +\n                         'static>(impl RandomSource + Send + Sync + 'static)\n-> Result<(), bool>","parent":null,"children":[],"decl_id":null,"docs":" Provides an optional way to manually supply a source of randomness for Hasher keys.","sig":null,"attributes":[{"value":"/ Provides an optional way to manually supply a source of randomness for Hasher keys.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42408,"byte_end":42495,"line_start":168,"line_end":168,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42500,"byte_end":42503,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The provided [RandomSource] will be used to be used as a source of randomness by [RandomState] to generate new states.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42508,"byte_end":42630,"line_start":170,"line_end":170,"column_start":5,"column_end":127}},{"value":"/ If this method is not invoked the standard source of randomness is used as described in the Readme.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42635,"byte_end":42738,"line_start":171,"line_end":171,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42743,"byte_end":42746,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The source of randomness can only be set once, and must be set before the first RandomState is created.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42751,"byte_end":42858,"line_start":173,"line_end":173,"column_start":5,"column_end":112}},{"value":"/ If the source has already been specified `Err` is returned with a `bool` indicating if the set failed because","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42863,"byte_end":42976,"line_start":174,"line_end":174,"column_start":5,"column_end":118}},{"value":"/ method was previously invoked (true) or if the default source is already being used (false).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42981,"byte_end":43077,"line_start":175,"line_end":175,"column_start":5,"column_end":101}},{"value":"cfg(not(all(target_arch = \"arm\", target_os = \"none\")))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43082,"byte_end":43139,"line_start":176,"line_end":176,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43888,"byte_end":43891,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState>::new","value":"pub fn new() -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Use randomly generated keys\n","sig":null,"attributes":[{"value":"/ Use randomly generated keys","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43831,"byte_end":43862,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43867,"byte_end":43876,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44281,"byte_end":44294,"line_start":205,"line_end":205,"column_start":12,"column_end":25},"name":"generate_with","qualname":"<RandomState>::generate_with","value":"pub fn generate_with(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for supplying seeds, but each time it is called the resulting state will be different.\n This is done using a static counter, so it can safely be used with a fixed keys.\n","sig":null,"attributes":[{"value":"/ Allows for supplying seeds, but each time it is called the resulting state will be different.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44069,"byte_end":44166,"line_start":202,"line_end":202,"column_start":5,"column_end":102}},{"value":"/ This is done using a static counter, so it can safely be used with a fixed keys.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44171,"byte_end":44255,"line_start":203,"line_end":203,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44260,"byte_end":44269,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45398,"byte_end":45407,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"with_seed","qualname":"<RandomState>::with_seed","value":"pub fn with_seed(usize) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting a seed to used.","sig":null,"attributes":[{"value":"/ Allows for explicitly setting a seed to used.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45240,"byte_end":45289,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45294,"byte_end":45297,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Note: This method does not require the provided seed to be strong.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45302,"byte_end":45372,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45377,"byte_end":45386,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45815,"byte_end":45825,"line_start":249,"line_end":249,"column_start":18,"column_end":28},"name":"with_seeds","qualname":"<RandomState>::with_seeds","value":"pub const fn with_seeds(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting the seeds to used.","sig":null,"attributes":[{"value":"/ Allows for explicitly setting the seeds to used.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45561,"byte_end":45613,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45618,"byte_end":45621,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Note: This method is robust against 0s being passed for one or more of the parameters","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45626,"byte_end":45715,"line_start":246,"line_end":246,"column_start":5,"column_end":94}},{"value":"/ or the same value being passed for more than one parameter.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45720,"byte_end":45783,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45788,"byte_end":45797,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":251},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50354,"byte_end":50364,"line_start":41,"line_end":41,"column_start":11,"column_end":21},"name":"CallHasher","qualname":"::specialize::CallHasher","value":"CallHasher","parent":null,"children":[{"krate":0,"index":252}],"decl_id":null,"docs":" Provides a way to get an optimized hasher for a given data type.\n Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash\n for a specific type. So this may be faster for primitive types.\n # Example\n ```\n use std::hash::BuildHasher;\n use ahash::RandomState;\n use ahash::CallHasher;","sig":null,"attributes":[{"value":"/ Provides a way to get an optimized hasher for a given data type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49432,"byte_end":49500,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49501,"byte_end":49615,"line_start":18,"line_end":18,"column_start":1,"column_end":115}},{"value":"/ for a specific type. So this may be faster for primitive types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49616,"byte_end":49683,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49684,"byte_end":49697,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49698,"byte_end":49705,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::hash::BuildHasher;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49706,"byte_end":49737,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ use ahash::RandomState;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49738,"byte_end":49765,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ use ahash::CallHasher;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49766,"byte_end":49792,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49793,"byte_end":49796,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let hash_builder = RandomState::new();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49797,"byte_end":49839,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ //...","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49840,"byte_end":49849,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ let value: u32 = 17;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49850,"byte_end":49874,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/ let hash = u32::get_hash(&value, &hash_builder);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49875,"byte_end":49927,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49928,"byte_end":49935,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ Note that the type used to invoke `get_hash` must be the same a the type of value passed.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49936,"byte_end":50029,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ For example get a hasher specialized on `[u8]` can invoke:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50030,"byte_end":50092,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50093,"byte_end":50100,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ /// use std::hash::BuildHasher;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50101,"byte_end":50136,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use ahash::RandomState;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50137,"byte_end":50166,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ # use ahash::CallHasher;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50167,"byte_end":50195,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # let hash_builder = RandomState::new();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50196,"byte_end":50240,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/ let bytes: [u8; 4] = [1, 2, 3, 4];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50241,"byte_end":50279,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ let hash = <[u8]>::get_hash(&bytes, &hash_builder);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50280,"byte_end":50335,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50336,"byte_end":50343,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50374,"byte_end":50382,"line_start":42,"line_end":42,"column_start":8,"column_end":16},"name":"get_hash","qualname":"::specialize::CallHasher::get_hash","value":"pub fn get_hash<H: Hash + ?Sized, B: BuildHasher>(&H, &B) -> u64","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":12,"kind":"Inherent","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14009,"byte_end":14016,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20004,"byte_end":20011,"line_start":146,"line_end":146,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":22466,"byte_end":22476,"line_start":233,"line_end":233,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":23655,"byte_end":23667,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":24675,"byte_end":24685,"line_start":329,"line_end":329,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39733,"byte_end":39752,"line_start":79,"line_end":79,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":40079,"byte_end":40098,"line_start":93,"line_end":93,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42262,"byte_end":42273,"line_start":160,"line_end":160,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42389,"byte_end":42400,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45996,"byte_end":46007,"line_start":254,"line_end":254,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46101,"byte_end":46112,"line_start":261,"line_end":261,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47448,"byte_end":47459,"line_start":299,"line_end":299,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50824,"byte_end":50825,"line_start":59,"line_end":59,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":52735,"byte_end":52738,"line_start":132,"line_end":132,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":53160,"byte_end":53166,"line_start":148,"line_end":148,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3498,"byte_end":3505,"line_start":99,"line_end":99,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4952,"byte_end":4953,"line_start":141,"line_end":141,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14009,"byte_end":14016,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20004,"byte_end":20011,"line_start":146,"line_end":146,"column_start":17,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":867},"to":{"krate":1,"index":9589}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":22466,"byte_end":22476,"line_start":233,"line_end":233,"column_start":17,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":85},"to":{"krate":1,"index":9589}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":23655,"byte_end":23667,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":9589}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":24675,"byte_end":24685,"line_start":329,"line_end":329,"column_start":17,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":109},"to":{"krate":1,"index":9589}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39733,"byte_end":39752,"line_start":79,"line_end":79,"column_start":6,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":40079,"byte_end":40098,"line_start":93,"line_end":93,"column_start":23,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":186},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42262,"byte_end":42273,"line_start":160,"line_end":160,"column_start":21,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":9373}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42389,"byte_end":42400,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45996,"byte_end":46007,"line_start":254,"line_end":254,"column_start":18,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":2982}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46101,"byte_end":46112,"line_start":261,"line_end":261,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":9620}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47448,"byte_end":47459,"line_start":299,"line_end":299,"column_start":25,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":876},"to":{"krate":0,"index":313}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50824,"byte_end":50825,"line_start":59,"line_end":59,"column_start":24,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":256},"to":{"krate":0,"index":251}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":52735,"byte_end":52738,"line_start":132,"line_end":132,"column_start":21,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":4,"index":7062},"to":{"krate":0,"index":251}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":53160,"byte_end":53166,"line_start":148,"line_end":148,"column_start":21,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":4,"index":7602},"to":{"krate":0,"index":251}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3498,"byte_end":3505,"line_start":99,"line_end":99,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":867},"to":{"krate":1,"index":2982}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4638,"byte_end":4649,"line_start":130,"line_end":130,"column_start":34,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":9620},"to":{"krate":0,"index":313}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4952,"byte_end":4953,"line_start":141,"line_end":141,"column_start":41,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":313}}]}