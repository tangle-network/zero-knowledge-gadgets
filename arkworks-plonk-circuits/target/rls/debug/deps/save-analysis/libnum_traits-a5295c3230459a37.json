{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14","program":"/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","num_traits","/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"i128\"","--cfg","feature=\"std\"","-C","metadata=a5295c3230459a37","-C","extra-filename=-a5295c3230459a37","--out-dir","/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","-L","dependency=/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps","--cap-lints","allow","--cfg","has_i128","--cfg","has_to_int_unchecked","--error-format=json","--sysroot","/Users/thomascnorton/.rustup/toolchains/nightly-2021-11-10-aarch64-apple-darwin"],"output":"/Users/thomascnorton/Documents/Webb/arkworks-gadgets/arkworks-plonk-circuits/target/rls/debug/deps/libnum_traits-a5295c3230459a37.rmeta"},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[11289556834277415635,0]},"crate_root":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src","external_crates":[{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5231689799850066461,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17864008973282999150,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17296295565214172833,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[10313591498153884623,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2118848927325286491,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13292461249116594054,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4814502004061530608,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15708407810567005444,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2791263468303431766,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6506189918680636659,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8728067978980854181,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10381178398037116026,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10719114933783356113,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[903433031267741442,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[3053230250002770710,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[4944501850750929564,0]}},{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[675967159280285970,0]}}],"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":472,"byte_end":19986,"line_start":11,"line_end":583,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1043,"byte_end":1050,"line_start":32,"line_end":32,"column_start":17,"column_end":24},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":424},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1114,"byte_end":1119,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2465},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1136,"byte_end":1146,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"alias_span":null,"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1255,"byte_end":1259,"line_start":37,"line_end":37,"column_start":16,"column_end":20},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1261,"byte_end":1272,"line_start":37,"line_end":37,"column_start":22,"column_end":33},"alias_span":null,"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1274,"byte_end":1287,"line_start":37,"line_end":37,"column_start":35,"column_end":48},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1289,"byte_end":1296,"line_start":37,"line_end":37,"column_start":50,"column_end":57},"alias_span":null,"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1298,"byte_end":1309,"line_start":37,"line_end":37,"column_start":59,"column_end":70},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1333,"byte_end":1336,"line_start":38,"line_end":38,"column_start":22,"column_end":25},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1338,"byte_end":1342,"line_start":38,"line_end":38,"column_start":27,"column_end":31},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":38,"line_end":38,"column_start":33,"column_end":36},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1349,"byte_end":1353,"line_start":38,"line_end":38,"column_start":38,"column_end":42},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1369,"byte_end":1376,"line_start":39,"line_end":39,"column_start":14,"column_end":21},"alias_span":null,"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1406,"byte_end":1416,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":603},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1418,"byte_end":1428,"line_start":41,"line_end":41,"column_start":17,"column_end":27},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1430,"byte_end":1440,"line_start":41,"line_end":41,"column_start":29,"column_end":39},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1442,"byte_end":1452,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1454,"byte_end":1464,"line_start":41,"line_end":41,"column_start":53,"column_end":63},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":610},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1466,"byte_end":1476,"line_start":41,"line_end":41,"column_start":65,"column_end":75},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1478,"byte_end":1488,"line_start":41,"line_end":41,"column_start":77,"column_end":87},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1490,"byte_end":1500,"line_start":41,"line_end":41,"column_start":89,"column_end":99},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1523,"byte_end":1526,"line_start":43,"line_end":43,"column_start":19,"column_end":22},"alias_span":null,"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":634},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1551,"byte_end":1557,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"alias_span":null,"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":639},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1559,"byte_end":1571,"line_start":44,"line_end":44,"column_start":32,"column_end":44},"alias_span":null,"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1600,"byte_end":1610,"line_start":45,"line_end":45,"column_start":27,"column_end":37},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":728},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1612,"byte_end":1625,"line_start":45,"line_end":45,"column_start":39,"column_end":52},"alias_span":null,"name":"SaturatingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1627,"byte_end":1640,"line_start":45,"line_end":45,"column_start":54,"column_end":67},"alias_span":null,"name":"SaturatingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1642,"byte_end":1655,"line_start":45,"line_end":45,"column_start":69,"column_end":82},"alias_span":null,"name":"SaturatingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":758},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1687,"byte_end":1698,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"alias_span":null,"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1700,"byte_end":1711,"line_start":47,"line_end":47,"column_start":18,"column_end":29},"alias_span":null,"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":765},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1713,"byte_end":1724,"line_start":47,"line_end":47,"column_start":31,"column_end":42},"alias_span":null,"name":"WrappingNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":768},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1726,"byte_end":1737,"line_start":47,"line_end":47,"column_start":44,"column_end":55},"alias_span":null,"name":"WrappingShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1739,"byte_end":1750,"line_start":47,"line_end":47,"column_start":57,"column_end":68},"alias_span":null,"name":"WrappingShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1752,"byte_end":1763,"line_start":47,"line_end":47,"column_start":70,"column_end":81},"alias_span":null,"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":818},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1782,"byte_end":1793,"line_start":49,"line_end":49,"column_start":15,"column_end":26},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":816},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1795,"byte_end":1798,"line_start":49,"line_end":49,"column_start":28,"column_end":31},"alias_span":null,"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":804},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1800,"byte_end":1803,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"alias_span":null,"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":50,"line_end":50,"column_start":16,"column_end":19},"alias_span":null,"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":915},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1826,"byte_end":1833,"line_start":50,"line_end":50,"column_start":21,"column_end":28},"alias_span":null,"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":917},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1835,"byte_end":1841,"line_start":50,"line_end":50,"column_start":30,"column_end":36},"alias_span":null,"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":898},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1843,"byte_end":1849,"line_start":50,"line_end":50,"column_start":38,"column_end":44},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1851,"byte_end":1859,"line_start":50,"line_end":50,"column_start":46,"column_end":54},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":472,"byte_end":19986,"line_start":11,"line_end":583,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":241},{"krate":0,"index":357},{"krate":0,"index":486},{"krate":0,"index":520},{"krate":0,"index":572},{"krate":0,"index":790},{"krate":0,"index":821},{"krate":0,"index":885},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":4850},{"krate":0,"index":4853},{"krate":0,"index":4856},{"krate":0,"index":4859},{"krate":0,"index":4862},{"krate":0,"index":4865},{"krate":0,"index":4868},{"krate":0,"index":4871},{"krate":0,"index":4874},{"krate":0,"index":4877},{"krate":0,"index":4880},{"krate":0,"index":4883},{"krate":0,"index":959},{"krate":0,"index":4886},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":4897},{"krate":0,"index":4906},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"/ Numeric traits for generic mathematics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Compatibility","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":519,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":540,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `num-traits` crate is tested for rustc 1.8 and greater.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":544,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":667,"byte_end":700,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":701,"byte_end":711,"line_start":19,"line_end":19,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":180},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":234},{"krate":0,"index":1008},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":1011},{"krate":0,"index":1034},{"krate":0,"index":1056},{"krate":0,"index":1077},{"krate":0,"index":1097},{"krate":0,"index":1116},{"krate":0,"index":1134},{"krate":0,"index":1151},{"krate":0,"index":1167},{"krate":0,"index":1182},{"krate":0,"index":1196},{"krate":0,"index":1209},{"krate":0,"index":1221},{"krate":0,"index":1232},{"krate":0,"index":1242},{"krate":0,"index":1251},{"krate":0,"index":1259},{"krate":0,"index":1266},{"krate":0,"index":1272},{"krate":0,"index":1277},{"krate":0,"index":1281},{"krate":0,"index":1284}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":21467,"byte_end":21474,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[{"value":"/ Numbers which have upper and lower bounds","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":21411,"byte_end":21456,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":21610,"byte_end":21619,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" returns the smallest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the smallest finite number this type can represent","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":21540,"byte_end":21602,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":21704,"byte_end":21713,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" returns the largest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the largest finite number this type can represent","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":21635,"byte_end":21696,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":241},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":1287},{"krate":0,"index":1302},{"krate":0,"index":1317},{"krate":0,"index":1332},{"krate":0,"index":1347},{"krate":0,"index":1362},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":1377},{"krate":0,"index":1392},{"krate":0,"index":1407},{"krate":0,"index":1422},{"krate":0,"index":1437},{"krate":0,"index":1452},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":1467},{"krate":0,"index":1518},{"krate":0,"index":320},{"krate":0,"index":335},{"krate":0,"index":1569},{"krate":0,"index":1584},{"krate":0,"index":1599},{"krate":0,"index":1614},{"krate":0,"index":1629},{"krate":0,"index":1644},{"krate":0,"index":1659},{"krate":0,"index":1674},{"krate":0,"index":1689},{"krate":0,"index":1704},{"krate":0,"index":1719},{"krate":0,"index":1734},{"krate":0,"index":1749},{"krate":0,"index":1764},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25293,"byte_end":25304,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"decl_id":null,"docs":" A generic trait for converting a value to a number.","sig":null,"attributes":[{"value":"/ A generic trait for converting a value to a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":24719,"byte_end":24774,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":24775,"byte_end":24778,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A value can be represented by the target type when it lies within","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":24779,"byte_end":24848,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ the range of scalars supported by the target type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":24849,"byte_end":24903,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/ For example, a negative integer cannot be represented by an unsigned","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":24904,"byte_end":24976,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ integer type, and an `i64` with a very high magnitude might not be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":24977,"byte_end":25047,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ convertible to an `i32`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25048,"byte_end":25076,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/ On the other hand, conversions with possible precision loss or truncation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25077,"byte_end":25154,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ are admitted, like an `f32` with a decimal part to an integer type, or","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25155,"byte_end":25229,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ even a large `f64` saturating to `f32` infinity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25230,"byte_end":25282,"line_start":18,"line_end":18,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25463,"byte_end":25471,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"pub fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `isize`. If the value cannot be\n represented by an `isize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `isize`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25311,"byte_end":25381,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ represented by an `isize`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25386,"byte_end":25441,"line_start":21,"line_end":21,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25446,"byte_end":25455,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25718,"byte_end":25723,"line_start":30,"line_end":30,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"pub fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i8`. If the value cannot be\n represented by an `i8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i8`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25572,"byte_end":25639,"line_start":27,"line_end":27,"column_start":5,"column_end":72}},{"value":"/ represented by an `i8`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25644,"byte_end":25696,"line_start":28,"line_end":28,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25701,"byte_end":25710,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25966,"byte_end":25972,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"pub fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i16`. If the value cannot be\n represented by an `i16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i16`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25818,"byte_end":25886,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ represented by an `i16`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25891,"byte_end":25944,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":25949,"byte_end":25958,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26217,"byte_end":26223,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"pub fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i32`. If the value cannot be\n represented by an `i32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i32`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26069,"byte_end":26137,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ represented by an `i32`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26142,"byte_end":26195,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26200,"byte_end":26209,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26454,"byte_end":26460,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i64`. If the value cannot be\n represented by an `i64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i64`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26320,"byte_end":26388,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ represented by an `i64`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26393,"byte_end":26446,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26977,"byte_end":26984,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i128`. If the value cannot be\n represented by an `i128` (`i64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i128`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26489,"byte_end":26558,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ represented by an `i128` (`i64` under the default implementation), then","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26563,"byte_end":26638,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26643,"byte_end":26666,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26671,"byte_end":26674,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26679,"byte_end":26757,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26762,"byte_end":26765,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_i64()`. Types implementing","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26770,"byte_end":26848,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26853,"byte_end":26934,"line_start":59,"line_end":59,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26939,"byte_end":26948,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":26953,"byte_end":26969,"line_start":61,"line_end":61,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27209,"byte_end":27217,"line_start":69,"line_end":69,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"pub fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `usize`. If the value cannot be\n represented by a `usize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `usize`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27059,"byte_end":27128,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ represented by a `usize`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27133,"byte_end":27187,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27192,"byte_end":27201,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27462,"byte_end":27467,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"pub fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u8`. If the value cannot be\n represented by a `u8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u8`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27318,"byte_end":27384,"line_start":73,"line_end":73,"column_start":5,"column_end":71}},{"value":"/ represented by a `u8`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27389,"byte_end":27440,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27445,"byte_end":27454,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27708,"byte_end":27714,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"pub fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u16`. If the value cannot be\n represented by a `u16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u16`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27562,"byte_end":27629,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ represented by a `u16`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27634,"byte_end":27686,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27691,"byte_end":27700,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27957,"byte_end":27963,"line_start":90,"line_end":90,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"pub fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u32`. If the value cannot be\n represented by a `u32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u32`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27811,"byte_end":27878,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ represented by a `u32`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27883,"byte_end":27935,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":27940,"byte_end":27949,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28192,"byte_end":28198,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u64`. If the value cannot be\n represented by a `u64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u64`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28060,"byte_end":28127,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/ represented by a `u64`, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28132,"byte_end":28184,"line_start":95,"line_end":95,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28713,"byte_end":28720,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u128`. If the value cannot be\n represented by a `u128` (`u64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u128`. If the value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28227,"byte_end":28295,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ represented by a `u128` (`u64` under the default implementation), then","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28300,"byte_end":28374,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28379,"byte_end":28402,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28407,"byte_end":28410,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28415,"byte_end":28493,"line_start":102,"line_end":102,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28498,"byte_end":28501,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_u64()`. Types implementing","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28506,"byte_end":28584,"line_start":104,"line_end":104,"column_start":5,"column_end":83}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28589,"byte_end":28670,"line_start":105,"line_end":105,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28675,"byte_end":28684,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28689,"byte_end":28705,"line_start":107,"line_end":107,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29008,"byte_end":29014,"line_start":116,"line_end":116,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"pub fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f32`. Overflows may map to positive\n or negative inifinity, otherwise `None` is returned if the value cannot\n be represented by an `f32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f32`. Overflows may map to positive","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28795,"byte_end":28870,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ or negative inifinity, otherwise `None` is returned if the value cannot","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28875,"byte_end":28950,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ be represented by an `f32`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28955,"byte_end":28986,"line_start":114,"line_end":114,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":28991,"byte_end":29000,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29554,"byte_end":29560,"line_start":128,"line_end":128,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f64`. Overflows may map to positive\n or negative inifinity, otherwise `None` is returned if the value cannot\n be represented by an `f64`.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f64`. Overflows may map to positive","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29111,"byte_end":29186,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ or negative inifinity, otherwise `None` is returned if the value cannot","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29191,"byte_end":29266,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ be represented by an `f64`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29271,"byte_end":29302,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29307,"byte_end":29310,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The default implementation tries to convert through `to_i64()`, and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29315,"byte_end":29386,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ failing that through `to_u64()`. Types implementing this trait should","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29391,"byte_end":29464,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ override this method if they can represent a greater range.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29469,"byte_end":29532,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":29537,"byte_end":29546,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":320},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38785,"byte_end":38798,"line_start":411,"line_end":411,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"decl_id":null,"docs":" A generic trait for converting a number to a value.","sig":null,"attributes":[{"value":"/ A generic trait for converting a number to a value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38211,"byte_end":38266,"line_start":401,"line_end":401,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38267,"byte_end":38270,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ A value can be represented by the target type when it lies within","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38271,"byte_end":38340,"line_start":403,"line_end":403,"column_start":1,"column_end":70}},{"value":"/ the range of scalars supported by the target type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38341,"byte_end":38395,"line_start":404,"line_end":404,"column_start":1,"column_end":55}},{"value":"/ For example, a negative integer cannot be represented by an unsigned","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38396,"byte_end":38468,"line_start":405,"line_end":405,"column_start":1,"column_end":73}},{"value":"/ integer type, and an `i64` with a very high magnitude might not be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38469,"byte_end":38539,"line_start":406,"line_end":406,"column_start":1,"column_end":71}},{"value":"/ convertible to an `i32`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38540,"byte_end":38568,"line_start":407,"line_end":407,"column_start":1,"column_end":29}},{"value":"/ On the other hand, conversions with possible precision loss or truncation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38569,"byte_end":38646,"line_start":408,"line_end":408,"column_start":1,"column_end":78}},{"value":"/ are admitted, like an `f32` with a decimal part to an integer type, or","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38647,"byte_end":38721,"line_start":409,"line_end":409,"column_start":1,"column_end":75}},{"value":"/ even a large `f64` saturating to `f32` infinity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38722,"byte_end":38774,"line_start":410,"line_end":410,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38981,"byte_end":38991,"line_start":415,"line_end":415,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"pub fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `isize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `isize` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38812,"byte_end":38884,"line_start":412,"line_end":412,"column_start":5,"column_end":77}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38889,"byte_end":38959,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38964,"byte_end":38973,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39250,"byte_end":39257,"line_start":422,"line_end":422,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"pub fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `i8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i8` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39084,"byte_end":39153,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39158,"byte_end":39228,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39233,"byte_end":39242,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39508,"byte_end":39516,"line_start":429,"line_end":429,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"pub fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `i16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i16` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39341,"byte_end":39411,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39416,"byte_end":39486,"line_start":427,"line_end":427,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39491,"byte_end":39500,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39768,"byte_end":39776,"line_start":436,"line_end":436,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"pub fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `i32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i32` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39601,"byte_end":39671,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39676,"byte_end":39746,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39751,"byte_end":39760,"line_start":435,"line_end":435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40014,"byte_end":40022,"line_start":442,"line_end":442,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"pub fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `i64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i64` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39861,"byte_end":39931,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":39936,"byte_end":40006,"line_start":441,"line_end":441,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40512,"byte_end":40521,"line_start":453,"line_end":453,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"pub fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `i128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `i128` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40053,"byte_end":40124,"line_start":444,"line_end":444,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40129,"byte_end":40199,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40204,"byte_end":40207,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40212,"byte_end":40290,"line_start":447,"line_end":447,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40295,"byte_end":40298,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_i64()`. Types implementing","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40303,"byte_end":40383,"line_start":449,"line_end":449,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40388,"byte_end":40469,"line_start":450,"line_end":450,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40474,"byte_end":40483,"line_start":451,"line_end":451,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40488,"byte_end":40504,"line_start":452,"line_end":452,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40781,"byte_end":40791,"line_start":460,"line_end":460,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"pub fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts a `usize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `usize` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40613,"byte_end":40684,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40689,"byte_end":40759,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40764,"byte_end":40773,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41050,"byte_end":41057,"line_start":467,"line_end":467,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"pub fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `u8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u8` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40884,"byte_end":40953,"line_start":464,"line_end":464,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":40958,"byte_end":41028,"line_start":465,"line_end":465,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41033,"byte_end":41042,"line_start":466,"line_end":466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41308,"byte_end":41316,"line_start":474,"line_end":474,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"pub fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `u16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u16` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41141,"byte_end":41211,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41216,"byte_end":41286,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41291,"byte_end":41300,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41568,"byte_end":41576,"line_start":481,"line_end":481,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"pub fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `u32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u32` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41401,"byte_end":41471,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41476,"byte_end":41546,"line_start":479,"line_end":479,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41551,"byte_end":41560,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41814,"byte_end":41822,"line_start":487,"line_end":487,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"pub fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `u64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u64` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41661,"byte_end":41731,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41736,"byte_end":41806,"line_start":486,"line_end":486,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42312,"byte_end":42321,"line_start":498,"line_end":498,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"pub fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts an `u128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `u128` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41853,"byte_end":41924,"line_start":489,"line_end":489,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":41929,"byte_end":41999,"line_start":490,"line_end":490,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42004,"byte_end":42007,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42012,"byte_end":42090,"line_start":492,"line_end":492,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42095,"byte_end":42098,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_u64()`. Types implementing","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42103,"byte_end":42183,"line_start":494,"line_end":494,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42188,"byte_end":42269,"line_start":495,"line_end":495,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42274,"byte_end":42283,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42288,"byte_end":42304,"line_start":497,"line_end":497,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42579,"byte_end":42587,"line_start":505,"line_end":505,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"pub fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts a `f32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `f32` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42413,"byte_end":42482,"line_start":502,"line_end":502,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42487,"byte_end":42557,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42562,"byte_end":42571,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":43072,"byte_end":43080,"line_start":516,"line_end":516,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"pub fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Converts a `f64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts a `f64` to return an optional value of this type. If the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42672,"byte_end":42741,"line_start":509,"line_end":509,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42746,"byte_end":42816,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42821,"byte_end":42824,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ The default implementation tries to convert through `from_i64()`, and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42829,"byte_end":42902,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ failing that through `from_u64()`. Types implementing this trait should","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42907,"byte_end":42982,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ override this method if they can represent a greater range.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":42987,"byte_end":43050,"line_start":514,"line_end":514,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":43055,"byte_end":43064,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47326,"byte_end":47330,"line_start":686,"line_end":686,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"pub fn cast<T: NumCast, U: NumCast>(T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"/ Cast from one machine scalar to another.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47113,"byte_end":47157,"line_start":675,"line_end":675,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47158,"byte_end":47161,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47162,"byte_end":47176,"line_start":677,"line_end":677,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47177,"byte_end":47180,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47181,"byte_end":47188,"line_start":679,"line_end":679,"column_start":1,"column_end":8}},{"value":"/ # use num_traits as num;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47189,"byte_end":47217,"line_start":680,"line_end":680,"column_start":1,"column_end":29}},{"value":"/ let twenty: f32 = num::cast(0x14).unwrap();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47218,"byte_end":47265,"line_start":681,"line_end":681,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(twenty, 20f32);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47266,"byte_end":47296,"line_start":682,"line_end":682,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47297,"byte_end":47304,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47305,"byte_end":47308,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47309,"byte_end":47318,"line_start":685,"line_end":685,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":345},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47464,"byte_end":47471,"line_start":691,"line_end":691,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":346}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47400,"byte_end":47453,"line_start":690,"line_end":690,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":48261,"byte_end":48265,"line_start":704,"line_end":704,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"pub fn from<T: ToPrimitive>(T) -> Option<Self>","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `ToPrimitive` trait. If the source value cannot be\n represented by the target type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47499,"byte_end":47565,"line_start":692,"line_end":692,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `ToPrimitive` trait. If the source value cannot be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47570,"byte_end":47644,"line_start":693,"line_end":693,"column_start":5,"column_end":79}},{"value":"/ represented by the target type, then `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47649,"byte_end":47709,"line_start":694,"line_end":694,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47714,"byte_end":47717,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ A value can be represented by the target type when it lies within","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47722,"byte_end":47791,"line_start":696,"line_end":696,"column_start":5,"column_end":74}},{"value":"/ the range of scalars supported by the target type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47796,"byte_end":47850,"line_start":697,"line_end":697,"column_start":5,"column_end":59}},{"value":"/ For example, a negative integer cannot be represented by an unsigned","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47855,"byte_end":47927,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ integer type, and an `i64` with a very high magnitude might not be","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47932,"byte_end":48002,"line_start":699,"line_end":699,"column_start":5,"column_end":75}},{"value":"/ convertible to an `i32`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":48007,"byte_end":48035,"line_start":700,"line_end":700,"column_start":5,"column_end":33}},{"value":"/ On the other hand, conversions with possible precision loss or truncation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":48040,"byte_end":48117,"line_start":701,"line_end":701,"column_start":5,"column_end":82}},{"value":"/ are admitted, like an `f32` with a decimal part to an integer type, or","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":48122,"byte_end":48196,"line_start":702,"line_end":702,"column_start":5,"column_end":79}},{"value":"/ even a large `f64` saturating to `f32` infinity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":48201,"byte_end":48253,"line_start":703,"line_end":703,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":353},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50174,"byte_end":50185,"line_start":770,"line_end":770,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":355}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait `AsPrimitive` should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[{"value":"/ A generic interface for casting between machine scalars with the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49293,"byte_end":49361,"line_start":744,"line_end":744,"column_start":1,"column_end":69}},{"value":"/ `as` operator, which admits narrowing and precision loss.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49362,"byte_end":49423,"line_start":745,"line_end":745,"column_start":1,"column_end":62}},{"value":"/ Implementers of this trait `AsPrimitive` should behave like a primitive","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49424,"byte_end":49499,"line_start":746,"line_end":746,"column_start":1,"column_end":76}},{"value":"/ numeric type (e.g. a newtype around another primitive), and the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49500,"byte_end":49567,"line_start":747,"line_end":747,"column_start":1,"column_end":68}},{"value":"/ intended conversion must never fail.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49568,"byte_end":49608,"line_start":748,"line_end":748,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49609,"byte_end":49612,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49613,"byte_end":49627,"line_start":750,"line_end":750,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49628,"byte_end":49631,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49632,"byte_end":49639,"line_start":752,"line_end":752,"column_start":1,"column_end":8}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49640,"byte_end":49674,"line_start":753,"line_end":753,"column_start":1,"column_end":35}},{"value":"/ let three: i32 = (3.14159265f32).as_();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49675,"byte_end":49718,"line_start":754,"line_end":754,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(three, 3);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49719,"byte_end":49744,"line_start":755,"line_end":755,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49745,"byte_end":49752,"line_start":756,"line_end":756,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49753,"byte_end":49756,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49757,"byte_end":49769,"line_start":758,"line_end":758,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49770,"byte_end":49773,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ **In Rust versions before 1.45.0**, some uses of the `as` operator were not entirely safe.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49774,"byte_end":49868,"line_start":760,"line_end":760,"column_start":1,"column_end":95}},{"value":"/ In particular, it was undefined behavior if","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49869,"byte_end":49916,"line_start":761,"line_end":761,"column_start":1,"column_end":48}},{"value":"/ a truncated floating point value could not fit in the target integer","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49917,"byte_end":49989,"line_start":762,"line_end":762,"column_start":1,"column_end":73}},{"value":"/ type ([#10184](https://github.com/rust-lang/rust/issues/10184)).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49990,"byte_end":50058,"line_start":763,"line_end":763,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50059,"byte_end":50062,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50063,"byte_end":50076,"line_start":765,"line_end":765,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50077,"byte_end":50111,"line_start":766,"line_end":766,"column_start":1,"column_end":35}},{"value":"/ let x: u8 = (1.04E+17).as_(); // UB","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50112,"byte_end":50151,"line_start":767,"line_end":767,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50152,"byte_end":50159,"line_start":768,"line_end":768,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50160,"byte_end":50163,"line_start":769,"line_end":769,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50304,"byte_end":50307,"line_start":775,"line_end":775,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"pub fn as_(Self) -> T","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Convert a value to another, using the `as` operator.\n","sig":null,"attributes":[{"value":"/ Convert a value to another, using the `as` operator.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50240,"byte_end":50296,"line_start":774,"line_end":774,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":357},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":2349},{"krate":0,"index":2407},{"krate":0,"index":485},{"krate":0,"index":2465},{"krate":0,"index":2485},{"krate":0,"index":2505}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":390},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52033,"byte_end":52042,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers that works with `no_std`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":51891,"byte_end":51961,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":51962,"byte_end":51965,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This trait implements a subset of the `Float` trait.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":51966,"byte_end":52022,"line_start":15,"line_end":15,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52439,"byte_end":52447,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns positive infinity.","sig":null,"attributes":[{"value":"/ Returns positive infinity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52105,"byte_end":52135,"line_start":17,"line_end":17,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52140,"byte_end":52143,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52148,"byte_end":52162,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52167,"byte_end":52170,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52175,"byte_end":52182,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52187,"byte_end":52224,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52229,"byte_end":52253,"line_start":23,"line_end":23,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52258,"byte_end":52261,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52266,"byte_end":52300,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/     assert!(T::infinity() == x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52305,"byte_end":52341,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52346,"byte_end":52351,"line_start":27,"line_end":27,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52356,"byte_end":52359,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52364,"byte_end":52389,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/ check(f64::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52394,"byte_end":52419,"line_start":30,"line_end":30,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52424,"byte_end":52431,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52810,"byte_end":52822,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns negative infinity.","sig":null,"attributes":[{"value":"/ Returns negative infinity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52464,"byte_end":52494,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52499,"byte_end":52502,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52507,"byte_end":52521,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52526,"byte_end":52529,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52534,"byte_end":52541,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52546,"byte_end":52583,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52588,"byte_end":52612,"line_start":40,"line_end":40,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52617,"byte_end":52620,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52625,"byte_end":52659,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/     assert!(T::neg_infinity() == x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52664,"byte_end":52704,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52709,"byte_end":52714,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52719,"byte_end":52722,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52727,"byte_end":52756,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52761,"byte_end":52790,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52795,"byte_end":52802,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53132,"byte_end":53135,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns NaN.","sig":null,"attributes":[{"value":"/ Returns NaN.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52839,"byte_end":52855,"line_start":51,"line_end":51,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52860,"byte_end":52863,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52868,"byte_end":52882,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52887,"byte_end":52890,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52895,"byte_end":52902,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52907,"byte_end":52944,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52949,"byte_end":52952,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>() {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52957,"byte_end":52987,"line_start":58,"line_end":58,"column_start":5,"column_end":35}},{"value":"/     let n = T::nan();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52992,"byte_end":53017,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/     assert!(n != n);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53022,"byte_end":53046,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53051,"byte_end":53056,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53061,"byte_end":53064,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ check::<f32>();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53069,"byte_end":53088,"line_start":63,"line_end":63,"column_start":5,"column_end":24}},{"value":"/ check::<f64>();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53093,"byte_end":53112,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53117,"byte_end":53124,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53551,"byte_end":53559,"line_start":85,"line_end":85,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53152,"byte_end":53171,"line_start":68,"line_end":68,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53176,"byte_end":53179,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53184,"byte_end":53198,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53203,"byte_end":53206,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53211,"byte_end":53218,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53223,"byte_end":53260,"line_start":73,"line_end":73,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53265,"byte_end":53289,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53294,"byte_end":53297,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(n: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53302,"byte_end":53336,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/     let z = T::neg_zero();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53341,"byte_end":53371,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/     assert!(z.is_zero());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53376,"byte_end":53405,"line_start":78,"line_end":78,"column_start":5,"column_end":34}},{"value":"/     assert!(T::one() / z == n);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53410,"byte_end":53445,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53450,"byte_end":53455,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53460,"byte_end":53463,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53468,"byte_end":53497,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53502,"byte_end":53531,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53536,"byte_end":53543,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53938,"byte_end":53947,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53576,"byte_end":53643,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53648,"byte_end":53651,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53656,"byte_end":53670,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53675,"byte_end":53678,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53683,"byte_end":53690,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53695,"byte_end":53732,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53737,"byte_end":53761,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53766,"byte_end":53769,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53774,"byte_end":53808,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_value() == x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53813,"byte_end":53850,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53855,"byte_end":53860,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53865,"byte_end":53868,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53873,"byte_end":53893,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ check(f64::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53898,"byte_end":53918,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53923,"byte_end":53930,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54367,"byte_end":54385,"line_start":119,"line_end":119,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":53964,"byte_end":54045,"line_start":104,"line_end":104,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54050,"byte_end":54053,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54058,"byte_end":54072,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54077,"byte_end":54080,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54085,"byte_end":54092,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54097,"byte_end":54134,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54139,"byte_end":54163,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54168,"byte_end":54171,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54176,"byte_end":54210,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_positive_value() == x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54215,"byte_end":54261,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54266,"byte_end":54271,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54276,"byte_end":54279,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN_POSITIVE);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54284,"byte_end":54313,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/ check(f64::MIN_POSITIVE);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54318,"byte_end":54347,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54352,"byte_end":54359,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54747,"byte_end":54754,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54402,"byte_end":54446,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54451,"byte_end":54454,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54459,"byte_end":54473,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54478,"byte_end":54481,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54486,"byte_end":54493,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54498,"byte_end":54535,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54540,"byte_end":54564,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54569,"byte_end":54572,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54577,"byte_end":54611,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/     assert!(T::epsilon() == x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54616,"byte_end":54651,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54656,"byte_end":54661,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54666,"byte_end":54669,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ check(f32::EPSILON);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54674,"byte_end":54698,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/ check(f64::EPSILON);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54703,"byte_end":54727,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54732,"byte_end":54739,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55132,"byte_end":55141,"line_start":153,"line_end":153,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54771,"byte_end":54837,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54842,"byte_end":54845,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54850,"byte_end":54864,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54869,"byte_end":54872,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54877,"byte_end":54884,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54889,"byte_end":54926,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54931,"byte_end":54955,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54960,"byte_end":54963,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":54968,"byte_end":55002,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/     assert!(T::max_value() == x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55007,"byte_end":55044,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55049,"byte_end":55054,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55059,"byte_end":55062,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55067,"byte_end":55087,"line_start":150,"line_end":150,"column_start":5,"column_end":25}},{"value":"/ check(f64::MAX);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55092,"byte_end":55112,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55117,"byte_end":55124,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55591,"byte_end":55597,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns `true` if the number is NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is NaN.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55158,"byte_end":55198,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55203,"byte_end":55206,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55211,"byte_end":55225,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55230,"byte_end":55233,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55238,"byte_end":55245,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55250,"byte_end":55287,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55292,"byte_end":55316,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55321,"byte_end":55324,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55329,"byte_end":55372,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_nan() == p);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55377,"byte_end":55410,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55415,"byte_end":55420,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55425,"byte_end":55428,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ check(f32::NAN, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55433,"byte_end":55459,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55464,"byte_end":55496,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/ check(f64::NAN, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55501,"byte_end":55527,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55532,"byte_end":55557,"line_start":170,"line_end":170,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55562,"byte_end":55569,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55574,"byte_end":55583,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56174,"byte_end":56185,"line_start":197,"line_end":197,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns `true` if the number is infinite.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is infinite.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55646,"byte_end":55691,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55696,"byte_end":55699,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55704,"byte_end":55718,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55723,"byte_end":55726,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55731,"byte_end":55738,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55743,"byte_end":55780,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55785,"byte_end":55809,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55814,"byte_end":55817,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55822,"byte_end":55865,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_infinite() == p);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55870,"byte_end":55908,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55913,"byte_end":55918,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55923,"byte_end":55926,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55931,"byte_end":55962,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ check(f32::NEG_INFINITY, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":55967,"byte_end":56002,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ check(f32::NAN, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56007,"byte_end":56034,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ check(f64::INFINITY, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56039,"byte_end":56070,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56075,"byte_end":56110,"line_start":193,"line_end":193,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56115,"byte_end":56140,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56145,"byte_end":56152,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56157,"byte_end":56166,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56786,"byte_end":56795,"line_start":220,"line_end":220,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither infinite or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither infinite or NaN.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56278,"byte_end":56338,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56343,"byte_end":56346,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56351,"byte_end":56365,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56370,"byte_end":56373,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56378,"byte_end":56385,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56390,"byte_end":56427,"line_start":206,"line_end":206,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56432,"byte_end":56456,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56461,"byte_end":56464,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56469,"byte_end":56512,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_finite() == p);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56517,"byte_end":56553,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56558,"byte_end":56563,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56568,"byte_end":56571,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56576,"byte_end":56608,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56613,"byte_end":56639,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56644,"byte_end":56680,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56685,"byte_end":56720,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56725,"byte_end":56752,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56757,"byte_end":56764,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56769,"byte_end":56778,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57393,"byte_end":57402,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, subnormal or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, subnormal or NaN.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56870,"byte_end":56947,"line_start":224,"line_end":224,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56952,"byte_end":56955,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56960,"byte_end":56974,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56979,"byte_end":56982,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56987,"byte_end":56994,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":56999,"byte_end":57036,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57041,"byte_end":57065,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57070,"byte_end":57073,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57078,"byte_end":57121,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_normal() == p);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57126,"byte_end":57162,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57167,"byte_end":57172,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57177,"byte_end":57180,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57185,"byte_end":57217,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57222,"byte_end":57248,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57253,"byte_end":57289,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57294,"byte_end":57329,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57334,"byte_end":57359,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57364,"byte_end":57371,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57376,"byte_end":57385,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58241,"byte_end":58249,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57476,"byte_end":57551,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57556,"byte_end":57625,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57630,"byte_end":57652,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57657,"byte_end":57660,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57665,"byte_end":57679,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57684,"byte_end":57687,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57692,"byte_end":57699,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57704,"byte_end":57741,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57746,"byte_end":57770,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57775,"byte_end":57804,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57809,"byte_end":57812,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, c: FpCategory) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57817,"byte_end":57866,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/     assert!(x.classify() == c);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57871,"byte_end":57906,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57911,"byte_end":57916,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57921,"byte_end":57924,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, FpCategory::Infinite);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57929,"byte_end":57976,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ check(f32::MAX, FpCategory::Normal);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":57981,"byte_end":58021,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/ check(f64::NAN, FpCategory::Nan);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58026,"byte_end":58063,"line_start":264,"line_end":264,"column_start":5,"column_end":42}},{"value":"/ check(f64::MIN_POSITIVE, FpCategory::Normal);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58068,"byte_end":58117,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ check(f64::MIN_POSITIVE / 2.0, FpCategory::Subnormal);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58122,"byte_end":58180,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/ check(0.0f64, FpCategory::Zero);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58185,"byte_end":58221,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58226,"byte_end":58233,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58882,"byte_end":58887,"line_start":294,"line_end":294,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58276,"byte_end":58339,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58344,"byte_end":58347,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58352,"byte_end":58366,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58371,"byte_end":58374,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58379,"byte_end":58386,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58391,"byte_end":58428,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58433,"byte_end":58457,"line_start":277,"line_end":277,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58462,"byte_end":58465,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58470,"byte_end":58510,"line_start":279,"line_end":279,"column_start":5,"column_end":45}},{"value":"/     assert!(x.floor() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58515,"byte_end":58547,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58552,"byte_end":58557,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58562,"byte_end":58565,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58570,"byte_end":58610,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58615,"byte_end":58638,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58643,"byte_end":58666,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58671,"byte_end":58694,"line_start":286,"line_end":286,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58699,"byte_end":58723,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58728,"byte_end":58753,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58758,"byte_end":58783,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -2.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58788,"byte_end":58813,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58818,"byte_end":58848,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58853,"byte_end":58860,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":58865,"byte_end":58874,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59733,"byte_end":59737,"line_start":328,"line_end":328,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59124,"byte_end":59191,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59196,"byte_end":59199,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59204,"byte_end":59218,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59223,"byte_end":59226,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59231,"byte_end":59238,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59243,"byte_end":59280,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59285,"byte_end":59309,"line_start":311,"line_end":311,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59314,"byte_end":59317,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59322,"byte_end":59362,"line_start":313,"line_end":313,"column_start":5,"column_end":45}},{"value":"/     assert!(x.ceil() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59367,"byte_end":59398,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59403,"byte_end":59408,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59413,"byte_end":59416,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59421,"byte_end":59461,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59466,"byte_end":59489,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59494,"byte_end":59517,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 2.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59522,"byte_end":59545,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59550,"byte_end":59574,"line_start":321,"line_end":321,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59579,"byte_end":59604,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59609,"byte_end":59634,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59639,"byte_end":59664,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59669,"byte_end":59699,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59704,"byte_end":59711,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59716,"byte_end":59725,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60569,"byte_end":60574,"line_start":361,"line_end":361,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from `0.0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":59974,"byte_end":60056,"line_start":339,"line_end":339,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60061,"byte_end":60064,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60069,"byte_end":60083,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60088,"byte_end":60091,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60096,"byte_end":60103,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60108,"byte_end":60145,"line_start":344,"line_end":344,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60150,"byte_end":60174,"line_start":345,"line_end":345,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60179,"byte_end":60182,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60187,"byte_end":60227,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/     assert!(x.round() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60232,"byte_end":60264,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60269,"byte_end":60274,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60279,"byte_end":60282,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60287,"byte_end":60327,"line_start":351,"line_end":351,"column_start":5,"column_end":45}},{"value":"/ check(0.4f32, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60332,"byte_end":60355,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/ check(0.5f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60360,"byte_end":60383,"line_start":353,"line_end":353,"column_start":5,"column_end":28}},{"value":"/ check(0.6f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60388,"byte_end":60411,"line_start":354,"line_end":354,"column_start":5,"column_end":28}},{"value":"/ check(-0.4f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60416,"byte_end":60440,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/ check(-0.5f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60445,"byte_end":60470,"line_start":356,"line_end":356,"column_start":5,"column_end":30}},{"value":"/ check(-0.6f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60475,"byte_end":60500,"line_start":357,"line_end":357,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60505,"byte_end":60535,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60540,"byte_end":60547,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":60552,"byte_end":60561,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61665,"byte_end":61670,"line_start":405,"line_end":405,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61082,"byte_end":61122,"line_start":382,"line_end":382,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61127,"byte_end":61130,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61135,"byte_end":61149,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61154,"byte_end":61157,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61162,"byte_end":61169,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61174,"byte_end":61211,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61216,"byte_end":61240,"line_start":388,"line_end":388,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61245,"byte_end":61248,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61253,"byte_end":61293,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/     assert!(x.trunc() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61298,"byte_end":61330,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61335,"byte_end":61340,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61345,"byte_end":61348,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61353,"byte_end":61393,"line_start":394,"line_end":394,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61398,"byte_end":61421,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61426,"byte_end":61449,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61454,"byte_end":61477,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61482,"byte_end":61506,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61511,"byte_end":61536,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61541,"byte_end":61566,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61571,"byte_end":61596,"line_start":401,"line_end":401,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61601,"byte_end":61631,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61636,"byte_end":61643,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61648,"byte_end":61657,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62391,"byte_end":62396,"line_start":437,"line_end":437,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61817,"byte_end":61861,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61866,"byte_end":61869,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61874,"byte_end":61888,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61893,"byte_end":61896,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61901,"byte_end":61908,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61913,"byte_end":61950,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61955,"byte_end":61979,"line_start":420,"line_end":420,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61984,"byte_end":61987,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":61992,"byte_end":62032,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/     assert!(x.fract() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62037,"byte_end":62069,"line_start":423,"line_end":423,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62074,"byte_end":62079,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62084,"byte_end":62087,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62092,"byte_end":62117,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/ check(0.75f32, 0.75);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62122,"byte_end":62147,"line_start":427,"line_end":427,"column_start":5,"column_end":30}},{"value":"/ check(1.0f32, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62152,"byte_end":62175,"line_start":428,"line_end":428,"column_start":5,"column_end":28}},{"value":"/ check(1.25f32, 0.25);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62180,"byte_end":62205,"line_start":429,"line_end":429,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62210,"byte_end":62234,"line_start":430,"line_end":430,"column_start":5,"column_end":29}},{"value":"/ check(-0.75f64, -0.75);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62239,"byte_end":62266,"line_start":431,"line_end":431,"column_start":5,"column_end":32}},{"value":"/ check(-1.0f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62271,"byte_end":62295,"line_start":432,"line_end":432,"column_start":5,"column_end":29}},{"value":"/ check(-1.25f64, -0.25);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62300,"byte_end":62327,"line_start":433,"line_end":433,"column_start":5,"column_end":32}},{"value":"/ check(f64::MIN, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62332,"byte_end":62357,"line_start":434,"line_end":434,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62362,"byte_end":62369,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62374,"byte_end":62383,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63101,"byte_end":63104,"line_start":466,"line_end":466,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `FloatCore::nan()` if the\n number is `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `FloatCore::nan()` if the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62535,"byte_end":62611,"line_start":445,"line_end":445,"column_start":5,"column_end":81}},{"value":"/ number is `FloatCore::nan()`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62616,"byte_end":62649,"line_start":446,"line_end":446,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62654,"byte_end":62657,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62662,"byte_end":62676,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62681,"byte_end":62684,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62689,"byte_end":62696,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62701,"byte_end":62738,"line_start":451,"line_end":451,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62743,"byte_end":62767,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62772,"byte_end":62775,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62780,"byte_end":62820,"line_start":454,"line_end":454,"column_start":5,"column_end":45}},{"value":"/     assert!(x.abs() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62825,"byte_end":62855,"line_start":455,"line_end":455,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62860,"byte_end":62865,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62870,"byte_end":62873,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62878,"byte_end":62918,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62923,"byte_end":62946,"line_start":459,"line_end":459,"column_start":5,"column_end":28}},{"value":"/ check(0.0f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62951,"byte_end":62974,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":62979,"byte_end":63003,"line_start":461,"line_end":461,"column_start":5,"column_end":29}},{"value":"/ check(-1.0f64, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63008,"byte_end":63032,"line_start":462,"line_end":462,"column_start":5,"column_end":29}},{"value":"/ check(f64::MIN, f64::MAX);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63037,"byte_end":63067,"line_start":463,"line_end":463,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63072,"byte_end":63079,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63084,"byte_end":63093,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64028,"byte_end":64034,"line_start":500,"line_end":500,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63297,"byte_end":63353,"line_start":476,"line_end":476,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63358,"byte_end":63361,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `FloatCore::infinity()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63366,"byte_end":63438,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `FloatCore::neg_infinity()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63443,"byte_end":63520,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ - `FloatCore::nan()` if the number is `FloatCore::nan()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63525,"byte_end":63585,"line_start":480,"line_end":480,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63590,"byte_end":63593,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63598,"byte_end":63612,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63617,"byte_end":63620,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63625,"byte_end":63632,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63637,"byte_end":63674,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63679,"byte_end":63703,"line_start":486,"line_end":486,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63708,"byte_end":63711,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63716,"byte_end":63756,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/     assert!(x.signum() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63761,"byte_end":63794,"line_start":489,"line_end":489,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63799,"byte_end":63804,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63809,"byte_end":63812,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63817,"byte_end":63847,"line_start":492,"line_end":492,"column_start":5,"column_end":35}},{"value":"/ check(3.0f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63852,"byte_end":63875,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/ check(0.0f32, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63880,"byte_end":63903,"line_start":494,"line_end":494,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63908,"byte_end":63933,"line_start":495,"line_end":495,"column_start":5,"column_end":30}},{"value":"/ check(-3.0f64, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63938,"byte_end":63963,"line_start":496,"line_end":496,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63968,"byte_end":63994,"line_start":497,"line_end":497,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":63999,"byte_end":64006,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64011,"byte_end":64020,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64896,"byte_end":64912,"line_start":533,"line_end":533,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0` and\n `FloatCore::infinity()`, and since Rust 1.20 also\n `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0` and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64233,"byte_end":64295,"line_start":510,"line_end":510,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::infinity()`, and since Rust 1.20 also","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64300,"byte_end":64353,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ `FloatCore::nan()`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64358,"byte_end":64381,"line_start":512,"line_end":512,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64386,"byte_end":64389,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64394,"byte_end":64408,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64413,"byte_end":64416,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64421,"byte_end":64428,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64433,"byte_end":64470,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64475,"byte_end":64499,"line_start":518,"line_end":518,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64504,"byte_end":64507,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64512,"byte_end":64555,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_positive() == p);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64560,"byte_end":64603,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64608,"byte_end":64613,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64618,"byte_end":64621,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64626,"byte_end":64657,"line_start":524,"line_end":524,"column_start":5,"column_end":36}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64662,"byte_end":64688,"line_start":525,"line_end":525,"column_start":5,"column_end":31}},{"value":"/ check(0.0f32, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64693,"byte_end":64717,"line_start":526,"line_end":526,"column_start":5,"column_end":29}},{"value":"/ check(-0.0f64, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64722,"byte_end":64748,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64753,"byte_end":64789,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64794,"byte_end":64829,"line_start":529,"line_end":529,"column_start":5,"column_end":40}},{"value":"/ check(-f64::NAN, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64834,"byte_end":64862,"line_start":530,"line_end":530,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64867,"byte_end":64874,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64879,"byte_end":64888,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65642,"byte_end":65658,"line_start":560,"line_end":560,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0` and\n `FloatCore::neg_infinity()`, and since Rust 1.20 also\n `-FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0` and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":64973,"byte_end":65035,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::neg_infinity()`, and since Rust 1.20 also","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65040,"byte_end":65097,"line_start":538,"line_end":538,"column_start":5,"column_end":62}},{"value":"/ `-FloatCore::nan()`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65102,"byte_end":65126,"line_start":539,"line_end":539,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65131,"byte_end":65134,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65139,"byte_end":65153,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65158,"byte_end":65161,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65166,"byte_end":65173,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65178,"byte_end":65215,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65220,"byte_end":65244,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65249,"byte_end":65252,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65257,"byte_end":65300,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_negative() == p);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65305,"byte_end":65348,"line_start":548,"line_end":548,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65353,"byte_end":65358,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65363,"byte_end":65366,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65371,"byte_end":65403,"line_start":551,"line_end":551,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65408,"byte_end":65435,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/ check(0.0f32, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65440,"byte_end":65465,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65470,"byte_end":65495,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65500,"byte_end":65535,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ check(f64::MIN_POSITIVE, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65540,"byte_end":65576,"line_start":556,"line_end":556,"column_start":5,"column_end":41}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65581,"byte_end":65608,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65613,"byte_end":65620,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65625,"byte_end":65634,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66291,"byte_end":66294,"line_start":585,"line_end":585,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65753,"byte_end":65796,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65801,"byte_end":65804,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65809,"byte_end":65881,"line_start":567,"line_end":567,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65886,"byte_end":65889,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65894,"byte_end":65908,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65913,"byte_end":65916,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65921,"byte_end":65928,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65933,"byte_end":65970,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":65975,"byte_end":65999,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66004,"byte_end":66007,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66012,"byte_end":66060,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/     assert!(x.min(y) == min);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66065,"byte_end":66098,"line_start":576,"line_end":576,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66103,"byte_end":66108,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66113,"byte_end":66116,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66121,"byte_end":66149,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ check(f32::NAN, 2.0, 2.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66154,"byte_end":66184,"line_start":580,"line_end":580,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, -2.0, -2.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66189,"byte_end":66219,"line_start":581,"line_end":581,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, f64::NAN, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66224,"byte_end":66257,"line_start":582,"line_end":582,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66262,"byte_end":66269,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66274,"byte_end":66283,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67091,"byte_end":67094,"line_start":619,"line_end":619,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66549,"byte_end":66592,"line_start":599,"line_end":599,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66597,"byte_end":66600,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66605,"byte_end":66677,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66682,"byte_end":66685,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66690,"byte_end":66704,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66709,"byte_end":66712,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66717,"byte_end":66724,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66729,"byte_end":66766,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66771,"byte_end":66795,"line_start":607,"line_end":607,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66800,"byte_end":66803,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, max: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66808,"byte_end":66856,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/     assert!(x.max(y) == max);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66861,"byte_end":66894,"line_start":610,"line_end":610,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66899,"byte_end":66904,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66909,"byte_end":66912,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 2.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66917,"byte_end":66945,"line_start":613,"line_end":613,"column_start":5,"column_end":33}},{"value":"/ check(1.0f32, f32::NAN, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66950,"byte_end":66983,"line_start":614,"line_end":614,"column_start":5,"column_end":38}},{"value":"/ check(-1.0f64, 2.0, 2.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":66988,"byte_end":67017,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/ check(-1.0f64, f64::NAN, -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67022,"byte_end":67057,"line_start":616,"line_end":616,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67062,"byte_end":67069,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67074,"byte_end":67083,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67849,"byte_end":67854,"line_start":652,"line_end":652,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the reciprocal (multiplicative inverse) of the number.","sig":null,"attributes":[{"value":"/ Returns the reciprocal (multiplicative inverse) of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67349,"byte_end":67415,"line_start":633,"line_end":633,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67420,"byte_end":67423,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67428,"byte_end":67442,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67447,"byte_end":67450,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67455,"byte_end":67462,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67467,"byte_end":67504,"line_start":638,"line_end":638,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67509,"byte_end":67533,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67538,"byte_end":67541,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67546,"byte_end":67586,"line_start":641,"line_end":641,"column_start":5,"column_end":45}},{"value":"/     assert!(x.recip() == y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67591,"byte_end":67623,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/     assert!(y.recip() == x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67628,"byte_end":67660,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67665,"byte_end":67670,"line_start":644,"line_end":644,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67675,"byte_end":67678,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67683,"byte_end":67713,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/ check(2.0f32, 0.5);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67718,"byte_end":67741,"line_start":647,"line_end":647,"column_start":5,"column_end":28}},{"value":"/ check(-0.25f64, -4.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67746,"byte_end":67772,"line_start":648,"line_end":648,"column_start":5,"column_end":31}},{"value":"/ check(-0.0f64, f64::NEG_INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67777,"byte_end":67815,"line_start":649,"line_end":649,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67820,"byte_end":67827,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67832,"byte_end":67841,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68448,"byte_end":68452,"line_start":676,"line_end":676,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67909,"byte_end":67948,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67953,"byte_end":67956,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":67961,"byte_end":68022,"line_start":658,"line_end":658,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68027,"byte_end":68030,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68035,"byte_end":68049,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68054,"byte_end":68057,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68062,"byte_end":68069,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68074,"byte_end":68111,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68116,"byte_end":68119,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, exp: i32, powi: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68124,"byte_end":68177,"line_start":665,"line_end":665,"column_start":5,"column_end":58}},{"value":"/     assert!(x.powi(exp) == powi);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68182,"byte_end":68219,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68224,"byte_end":68229,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68234,"byte_end":68237,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ check(9.0f32, 2, 81.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68242,"byte_end":68269,"line_start":669,"line_end":669,"column_start":5,"column_end":32}},{"value":"/ check(1.0f32, -2, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68274,"byte_end":68301,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ check(10.0f64, 20, 1e20);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68306,"byte_end":68335,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/ check(4.0f64, -2, 0.0625);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68340,"byte_end":68370,"line_start":672,"line_end":672,"column_start":5,"column_end":35}},{"value":"/ check(-1.0f64, std::i32::MIN, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68375,"byte_end":68414,"line_start":673,"line_end":673,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68419,"byte_end":68426,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68431,"byte_end":68440,"line_start":675,"line_end":675,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69369,"byte_end":69379,"line_start":704,"line_end":704,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Converts to degrees, assuming the number is in radians.","sig":null,"attributes":[{"value":"/ Converts to degrees, assuming the number is in radians.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68894,"byte_end":68953,"line_start":687,"line_end":687,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68958,"byte_end":68961,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68966,"byte_end":68980,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68985,"byte_end":68988,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":68993,"byte_end":69000,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69005,"byte_end":69042,"line_start":692,"line_end":692,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69047,"byte_end":69071,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69076,"byte_end":69079,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(rad: T, deg: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69084,"byte_end":69128,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/     assert!(rad.to_degrees() == deg);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69133,"byte_end":69174,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69179,"byte_end":69184,"line_start":697,"line_end":697,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69189,"byte_end":69192,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69197,"byte_end":69220,"line_start":699,"line_end":699,"column_start":5,"column_end":28}},{"value":"/ check(f32::consts::PI, 180.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69225,"byte_end":69259,"line_start":700,"line_end":700,"column_start":5,"column_end":39}},{"value":"/ check(f64::consts::FRAC_PI_4, 45.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69264,"byte_end":69304,"line_start":701,"line_end":701,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69309,"byte_end":69349,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69354,"byte_end":69361,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69875,"byte_end":69885,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Converts to radians, assuming the number is in degrees.","sig":null,"attributes":[{"value":"/ Converts to radians, assuming the number is in degrees.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69400,"byte_end":69459,"line_start":706,"line_end":706,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69464,"byte_end":69467,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69472,"byte_end":69486,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69491,"byte_end":69494,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69499,"byte_end":69506,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69511,"byte_end":69548,"line_start":711,"line_end":711,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69553,"byte_end":69577,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69582,"byte_end":69585,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(deg: T, rad: T) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69590,"byte_end":69634,"line_start":714,"line_end":714,"column_start":5,"column_end":49}},{"value":"/     assert!(deg.to_radians() == rad);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69639,"byte_end":69680,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69685,"byte_end":69690,"line_start":716,"line_end":716,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69695,"byte_end":69698,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69703,"byte_end":69726,"line_start":718,"line_end":718,"column_start":5,"column_end":28}},{"value":"/ check(180.0, f32::consts::PI);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69731,"byte_end":69765,"line_start":719,"line_end":719,"column_start":5,"column_end":39}},{"value":"/ check(45.0, f64::consts::FRAC_PI_4);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69770,"byte_end":69810,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69815,"byte_end":69855,"line_start":721,"line_end":721,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69860,"byte_end":69867,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70644,"byte_end":70658,"line_start":746,"line_end":746,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69906,"byte_end":69984,"line_start":725,"line_end":725,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":69989,"byte_end":70066,"line_start":726,"line_end":726,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70071,"byte_end":70074,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70079,"byte_end":70093,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70098,"byte_end":70101,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70106,"byte_end":70113,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70118,"byte_end":70155,"line_start":731,"line_end":731,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70160,"byte_end":70184,"line_start":732,"line_end":732,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70189,"byte_end":70192,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, m: u64, e: i16, s:i8) {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70197,"byte_end":70253,"line_start":734,"line_end":734,"column_start":5,"column_end":61}},{"value":"/     let (mantissa, exponent, sign) = x.integer_decode();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70258,"byte_end":70318,"line_start":735,"line_end":735,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(mantissa, m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70323,"byte_end":70355,"line_start":736,"line_end":736,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(exponent, e);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70360,"byte_end":70392,"line_start":737,"line_end":737,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(sign, s);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70397,"byte_end":70425,"line_start":738,"line_end":738,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70430,"byte_end":70435,"line_start":739,"line_end":739,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70440,"byte_end":70443,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ check(2.0f32, 1 << 23, -22, 1);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70448,"byte_end":70483,"line_start":741,"line_end":741,"column_start":5,"column_end":40}},{"value":"/ check(-2.0f32, 1 << 23, -22, -1);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70488,"byte_end":70525,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/ check(f32::INFINITY, 1 << 23, 105, 1);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70530,"byte_end":70572,"line_start":743,"line_end":743,"column_start":5,"column_end":47}},{"value":"/ check(f64::NEG_INFINITY, 1 << 52, 972, -1);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70577,"byte_end":70624,"line_start":744,"line_end":744,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":70629,"byte_end":70636,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":424},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75721,"byte_end":75726,"line_start":905,"line_end":905,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75520,"byte_end":75564,"line_start":901,"line_end":901,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75565,"byte_end":75568,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75569,"byte_end":75663,"line_start":903,"line_end":903,"column_start":1,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75664,"byte_end":75710,"line_start":904,"line_end":904,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75972,"byte_end":75975,"line_start":915,"line_end":915,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the `NaN` value.","sig":null,"attributes":[{"value":"/ Returns the `NaN` value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75789,"byte_end":75817,"line_start":906,"line_end":906,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75822,"byte_end":75825,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75830,"byte_end":75837,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75842,"byte_end":75868,"line_start":909,"line_end":909,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75873,"byte_end":75876,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ let nan: f32 = Float::nan();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75881,"byte_end":75913,"line_start":911,"line_end":911,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75918,"byte_end":75921,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75926,"byte_end":75952,"line_start":913,"line_end":913,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75957,"byte_end":75964,"line_start":914,"line_end":914,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76297,"byte_end":76305,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the infinite value.","sig":null,"attributes":[{"value":"/ Returns the infinite value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75991,"byte_end":76022,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76027,"byte_end":76030,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76035,"byte_end":76042,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76047,"byte_end":76073,"line_start":919,"line_end":919,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76078,"byte_end":76095,"line_start":920,"line_end":920,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76100,"byte_end":76103,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let infinity: f32 = Float::infinity();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76108,"byte_end":76150,"line_start":922,"line_end":922,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76155,"byte_end":76158,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ assert!(infinity.is_infinite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76163,"byte_end":76199,"line_start":924,"line_end":924,"column_start":5,"column_end":41}},{"value":"/ assert!(!infinity.is_finite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76204,"byte_end":76239,"line_start":925,"line_end":925,"column_start":5,"column_end":40}},{"value":"/ assert!(infinity > f32::MAX);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76244,"byte_end":76277,"line_start":926,"line_end":926,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76282,"byte_end":76289,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76656,"byte_end":76668,"line_start":941,"line_end":941,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the negative infinite value.","sig":null,"attributes":[{"value":"/ Returns the negative infinite value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76321,"byte_end":76361,"line_start":929,"line_end":929,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76366,"byte_end":76369,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76374,"byte_end":76381,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76386,"byte_end":76412,"line_start":932,"line_end":932,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76417,"byte_end":76434,"line_start":933,"line_end":933,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76439,"byte_end":76442,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let neg_infinity: f32 = Float::neg_infinity();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76447,"byte_end":76497,"line_start":935,"line_end":935,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76502,"byte_end":76505,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ assert!(neg_infinity.is_infinite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76510,"byte_end":76550,"line_start":937,"line_end":937,"column_start":5,"column_end":45}},{"value":"/ assert!(!neg_infinity.is_finite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76555,"byte_end":76594,"line_start":938,"line_end":938,"column_start":5,"column_end":44}},{"value":"/ assert!(neg_infinity < f32::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76599,"byte_end":76636,"line_start":939,"line_end":939,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76641,"byte_end":76648,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77038,"byte_end":77046,"line_start":955,"line_end":955,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76684,"byte_end":76703,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76708,"byte_end":76711,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76716,"byte_end":76723,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ use num_traits::{Zero, Float};","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76728,"byte_end":76762,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76767,"byte_end":76770,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76775,"byte_end":76812,"line_start":947,"line_end":947,"column_start":5,"column_end":42}},{"value":"/ let zero: f32 = Zero::zero();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76817,"byte_end":76850,"line_start":948,"line_end":948,"column_start":5,"column_end":38}},{"value":"/ let neg_zero: f32 = Float::neg_zero();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76855,"byte_end":76897,"line_start":949,"line_end":949,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76902,"byte_end":76905,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zero, neg_zero);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76910,"byte_end":76941,"line_start":951,"line_end":951,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(7.0f32/inf, zero);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76946,"byte_end":76979,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(zero * 10.0, zero);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":76984,"byte_end":77018,"line_start":953,"line_end":953,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77023,"byte_end":77030,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77313,"byte_end":77322,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77063,"byte_end":77130,"line_start":957,"line_end":957,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77135,"byte_end":77138,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77143,"byte_end":77150,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77155,"byte_end":77181,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77186,"byte_end":77203,"line_start":961,"line_end":961,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77208,"byte_end":77211,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_value();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77216,"byte_end":77252,"line_start":963,"line_end":963,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77257,"byte_end":77260,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77265,"byte_end":77293,"line_start":965,"line_end":965,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77298,"byte_end":77305,"line_start":966,"line_end":966,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77621,"byte_end":77639,"line_start":979,"line_end":979,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77339,"byte_end":77420,"line_start":969,"line_end":969,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77425,"byte_end":77428,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77433,"byte_end":77440,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77445,"byte_end":77471,"line_start":972,"line_end":972,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77476,"byte_end":77493,"line_start":973,"line_end":973,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77498,"byte_end":77501,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_positive_value();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77506,"byte_end":77551,"line_start":975,"line_end":975,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77556,"byte_end":77559,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77564,"byte_end":77601,"line_start":977,"line_end":977,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77606,"byte_end":77613,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78016,"byte_end":78023,"line_start":996,"line_end":996,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77656,"byte_end":77700,"line_start":981,"line_end":981,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77705,"byte_end":77708,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77713,"byte_end":77720,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77725,"byte_end":77751,"line_start":984,"line_end":984,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77756,"byte_end":77773,"line_start":985,"line_end":985,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77778,"byte_end":77781,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::epsilon();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77786,"byte_end":77820,"line_start":987,"line_end":987,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77825,"byte_end":77828,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77833,"byte_end":77865,"line_start":989,"line_end":989,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77870,"byte_end":77877,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77882,"byte_end":77885,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77890,"byte_end":77902,"line_start":992,"line_end":992,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77907,"byte_end":77910,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77915,"byte_end":77981,"line_start":994,"line_end":994,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":77986,"byte_end":78008,"line_start":995,"line_end":995,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78364,"byte_end":78373,"line_start":1009,"line_end":1009,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78123,"byte_end":78189,"line_start":1000,"line_end":1000,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78194,"byte_end":78197,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78202,"byte_end":78209,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78214,"byte_end":78240,"line_start":1003,"line_end":1003,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78245,"byte_end":78262,"line_start":1004,"line_end":1004,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78267,"byte_end":78270,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::max_value();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78275,"byte_end":78311,"line_start":1006,"line_end":1006,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78316,"byte_end":78344,"line_start":1007,"line_end":1007,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78349,"byte_end":78356,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78671,"byte_end":78677,"line_start":1023,"line_end":1023,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `true` if this value is `NaN` and false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is `NaN` and false otherwise.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78390,"byte_end":78452,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78457,"byte_end":78460,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78465,"byte_end":78472,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78477,"byte_end":78503,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78508,"byte_end":78525,"line_start":1015,"line_end":1015,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78530,"byte_end":78533,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ let nan = f64::NAN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78538,"byte_end":78561,"line_start":1017,"line_end":1017,"column_start":5,"column_end":28}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78566,"byte_end":78582,"line_start":1018,"line_end":1018,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78587,"byte_end":78590,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78595,"byte_end":78621,"line_start":1020,"line_end":1020,"column_start":5,"column_end":31}},{"value":"/ assert!(!f.is_nan());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78626,"byte_end":78651,"line_start":1021,"line_end":1021,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78656,"byte_end":78663,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79215,"byte_end":79226,"line_start":1043,"line_end":1043,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `true` if this value is positive infinity or negative infinity and\n false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is positive infinity or negative infinity and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78698,"byte_end":78776,"line_start":1025,"line_end":1025,"column_start":5,"column_end":83}},{"value":"/ false otherwise.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78781,"byte_end":78801,"line_start":1026,"line_end":1026,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78806,"byte_end":78809,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78814,"byte_end":78821,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78826,"byte_end":78852,"line_start":1029,"line_end":1029,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78857,"byte_end":78874,"line_start":1030,"line_end":1030,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78879,"byte_end":78882,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78887,"byte_end":78906,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78911,"byte_end":78948,"line_start":1033,"line_end":1033,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":78953,"byte_end":78998,"line_start":1034,"line_end":1034,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79003,"byte_end":79031,"line_start":1035,"line_end":1035,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79036,"byte_end":79039,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_infinite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79044,"byte_end":79074,"line_start":1037,"line_end":1037,"column_start":5,"column_end":35}},{"value":"/ assert!(!nan.is_infinite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79079,"byte_end":79111,"line_start":1038,"line_end":1038,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79116,"byte_end":79119,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ assert!(inf.is_infinite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79124,"byte_end":79155,"line_start":1040,"line_end":1040,"column_start":5,"column_end":36}},{"value":"/ assert!(neg_inf.is_infinite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79160,"byte_end":79195,"line_start":1041,"line_end":1041,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79200,"byte_end":79207,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79718,"byte_end":79727,"line_start":1062,"line_end":1062,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `true` if this number is neither infinite nor `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if this number is neither infinite nor `NaN`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79247,"byte_end":79311,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79316,"byte_end":79319,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79324,"byte_end":79331,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79336,"byte_end":79362,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79367,"byte_end":79384,"line_start":1049,"line_end":1049,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79389,"byte_end":79392,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79397,"byte_end":79416,"line_start":1051,"line_end":1051,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79421,"byte_end":79458,"line_start":1052,"line_end":1052,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79463,"byte_end":79508,"line_start":1053,"line_end":1053,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79513,"byte_end":79541,"line_start":1054,"line_end":1054,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79546,"byte_end":79549,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_finite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79554,"byte_end":79581,"line_start":1056,"line_end":1056,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79586,"byte_end":79589,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ assert!(!nan.is_finite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79594,"byte_end":79624,"line_start":1058,"line_end":1058,"column_start":5,"column_end":35}},{"value":"/ assert!(!inf.is_finite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79629,"byte_end":79659,"line_start":1059,"line_end":1059,"column_start":5,"column_end":35}},{"value":"/ assert!(!neg_inf.is_finite());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79664,"byte_end":79698,"line_start":1060,"line_end":1060,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79703,"byte_end":79710,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80477,"byte_end":80486,"line_start":1086,"line_end":1086,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite,\n [subnormal][subnormal], or `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79748,"byte_end":79807,"line_start":1064,"line_end":1064,"column_start":5,"column_end":64}},{"value":"/ [subnormal][subnormal], or `NaN`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79812,"byte_end":79849,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79854,"byte_end":79857,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79862,"byte_end":79869,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79874,"byte_end":79900,"line_start":1068,"line_end":1068,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79905,"byte_end":79922,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79927,"byte_end":79930,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ let min = f32::MIN_POSITIVE; // 1.17549435e-38f32","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79935,"byte_end":79988,"line_start":1071,"line_end":1071,"column_start":5,"column_end":58}},{"value":"/ let max = f32::MAX;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":79993,"byte_end":80016,"line_start":1072,"line_end":1072,"column_start":5,"column_end":28}},{"value":"/ let lower_than_min = 1.0e-40_f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80021,"byte_end":80058,"line_start":1073,"line_end":1073,"column_start":5,"column_end":42}},{"value":"/ let zero = 0.0f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80063,"byte_end":80085,"line_start":1074,"line_end":1074,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80090,"byte_end":80093,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ assert!(min.is_normal());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80098,"byte_end":80127,"line_start":1076,"line_end":1076,"column_start":5,"column_end":34}},{"value":"/ assert!(max.is_normal());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80132,"byte_end":80161,"line_start":1077,"line_end":1077,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80166,"byte_end":80169,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ assert!(!zero.is_normal());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80174,"byte_end":80205,"line_start":1079,"line_end":1079,"column_start":5,"column_end":36}},{"value":"/ assert!(!f32::NAN.is_normal());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80210,"byte_end":80245,"line_start":1080,"line_end":1080,"column_start":5,"column_end":40}},{"value":"/ assert!(!f32::INFINITY.is_normal());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80250,"byte_end":80290,"line_start":1081,"line_end":1081,"column_start":5,"column_end":45}},{"value":"/ // Values between `0` and `min` are Subnormal.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80295,"byte_end":80345,"line_start":1082,"line_end":1082,"column_start":5,"column_end":55}},{"value":"/ assert!(!lower_than_min.is_normal());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80350,"byte_end":80391,"line_start":1083,"line_end":1083,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80396,"byte_end":80403,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ [subnormal]: http://en.wikipedia.org/wiki/Denormal_number","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80408,"byte_end":80469,"line_start":1085,"line_end":1085,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81000,"byte_end":81008,"line_start":1103,"line_end":1103,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80507,"byte_end":80582,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80587,"byte_end":80656,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80661,"byte_end":80683,"line_start":1090,"line_end":1090,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80688,"byte_end":80691,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80696,"byte_end":80703,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80708,"byte_end":80734,"line_start":1093,"line_end":1093,"column_start":5,"column_end":31}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80739,"byte_end":80768,"line_start":1094,"line_end":1094,"column_start":5,"column_end":34}},{"value":"/ use std::f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80773,"byte_end":80790,"line_start":1095,"line_end":1095,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80795,"byte_end":80798,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let num = 12.4f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80803,"byte_end":80825,"line_start":1097,"line_end":1097,"column_start":5,"column_end":27}},{"value":"/ let inf = f32::INFINITY;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80830,"byte_end":80858,"line_start":1098,"line_end":1098,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80863,"byte_end":80866,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(num.classify(), FpCategory::Normal);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80871,"byte_end":80922,"line_start":1100,"line_end":1100,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(inf.classify(), FpCategory::Infinite);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80927,"byte_end":80980,"line_start":1101,"line_end":1101,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":80985,"byte_end":80992,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81300,"byte_end":81305,"line_start":1116,"line_end":1116,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81035,"byte_end":81098,"line_start":1105,"line_end":1105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81103,"byte_end":81106,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81111,"byte_end":81118,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81123,"byte_end":81149,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81154,"byte_end":81157,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81162,"byte_end":81179,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81184,"byte_end":81200,"line_start":1111,"line_end":1111,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81205,"byte_end":81208,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81213,"byte_end":81244,"line_start":1113,"line_end":1113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81249,"byte_end":81280,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81285,"byte_end":81292,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81593,"byte_end":81597,"line_start":1129,"line_end":1129,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81326,"byte_end":81393,"line_start":1118,"line_end":1118,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81398,"byte_end":81401,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81406,"byte_end":81413,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81418,"byte_end":81444,"line_start":1121,"line_end":1121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81449,"byte_end":81452,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81457,"byte_end":81474,"line_start":1123,"line_end":1123,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81479,"byte_end":81495,"line_start":1124,"line_end":1124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81500,"byte_end":81503,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81508,"byte_end":81538,"line_start":1126,"line_end":1126,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81543,"byte_end":81573,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81578,"byte_end":81585,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81911,"byte_end":81916,"line_start":1143,"line_end":1143,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81618,"byte_end":81693,"line_start":1131,"line_end":1131,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81698,"byte_end":81708,"line_start":1132,"line_end":1132,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81713,"byte_end":81716,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81721,"byte_end":81728,"line_start":1134,"line_end":1134,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81733,"byte_end":81759,"line_start":1135,"line_end":1135,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81764,"byte_end":81767,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81772,"byte_end":81788,"line_start":1137,"line_end":1137,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81793,"byte_end":81810,"line_start":1138,"line_end":1138,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81815,"byte_end":81818,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81823,"byte_end":81854,"line_start":1140,"line_end":1140,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81859,"byte_end":81891,"line_start":1141,"line_end":1141,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81896,"byte_end":81903,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82180,"byte_end":82185,"line_start":1156,"line_end":1156,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81937,"byte_end":81977,"line_start":1145,"line_end":1145,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81982,"byte_end":81985,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":81990,"byte_end":81997,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82002,"byte_end":82028,"line_start":1148,"line_end":1148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82033,"byte_end":82036,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82041,"byte_end":82057,"line_start":1150,"line_end":1150,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82062,"byte_end":82079,"line_start":1151,"line_end":1151,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82084,"byte_end":82087,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82092,"byte_end":82123,"line_start":1153,"line_end":1153,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82128,"byte_end":82160,"line_start":1154,"line_end":1154,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82165,"byte_end":82172,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82581,"byte_end":82586,"line_start":1171,"line_end":1171,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82206,"byte_end":82250,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82255,"byte_end":82258,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82263,"byte_end":82270,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82275,"byte_end":82301,"line_start":1161,"line_end":1161,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82306,"byte_end":82309,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82314,"byte_end":82330,"line_start":1163,"line_end":1163,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82335,"byte_end":82352,"line_start":1164,"line_end":1164,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82357,"byte_end":82408,"line_start":1165,"line_end":1165,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82413,"byte_end":82467,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82472,"byte_end":82475,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82480,"byte_end":82518,"line_start":1168,"line_end":1168,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82523,"byte_end":82561,"line_start":1169,"line_end":1169,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82566,"byte_end":82573,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83116,"byte_end":83119,"line_start":1191,"line_end":1191,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82607,"byte_end":82679,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82684,"byte_end":82713,"line_start":1174,"line_end":1174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82718,"byte_end":82721,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82726,"byte_end":82733,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82738,"byte_end":82764,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82769,"byte_end":82786,"line_start":1178,"line_end":1178,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82791,"byte_end":82794,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82799,"byte_end":82815,"line_start":1180,"line_end":1180,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82820,"byte_end":82837,"line_start":1181,"line_end":1181,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82842,"byte_end":82845,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82850,"byte_end":82897,"line_start":1183,"line_end":1183,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82902,"byte_end":82952,"line_start":1184,"line_end":1184,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82957,"byte_end":82960,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":82965,"byte_end":83003,"line_start":1186,"line_end":1186,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83008,"byte_end":83046,"line_start":1187,"line_end":1187,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83051,"byte_end":83054,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.abs().is_nan());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83059,"byte_end":83096,"line_start":1189,"line_end":1189,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83101,"byte_end":83108,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83686,"byte_end":83692,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83140,"byte_end":83196,"line_start":1193,"line_end":1193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83201,"byte_end":83204,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83209,"byte_end":83277,"line_start":1195,"line_end":1195,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83282,"byte_end":83355,"line_start":1196,"line_end":1196,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83360,"byte_end":83412,"line_start":1197,"line_end":1197,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83417,"byte_end":83420,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83425,"byte_end":83432,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83437,"byte_end":83463,"line_start":1200,"line_end":1200,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83468,"byte_end":83485,"line_start":1201,"line_end":1201,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83490,"byte_end":83493,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83498,"byte_end":83514,"line_start":1203,"line_end":1203,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83519,"byte_end":83522,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83527,"byte_end":83559,"line_start":1205,"line_end":1205,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83564,"byte_end":83613,"line_start":1206,"line_end":1206,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83618,"byte_end":83621,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83626,"byte_end":83666,"line_start":1208,"line_end":1208,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83671,"byte_end":83678,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84165,"byte_end":84181,"line_start":1228,"line_end":1228,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83713,"byte_end":83772,"line_start":1212,"line_end":1212,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83777,"byte_end":83842,"line_start":1213,"line_end":1213,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83847,"byte_end":83850,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83855,"byte_end":83862,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83867,"byte_end":83893,"line_start":1216,"line_end":1216,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83898,"byte_end":83915,"line_start":1217,"line_end":1217,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83920,"byte_end":83923,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83928,"byte_end":83961,"line_start":1219,"line_end":1219,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83966,"byte_end":83969,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83974,"byte_end":83990,"line_start":1221,"line_end":1221,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":83995,"byte_end":84012,"line_start":1222,"line_end":1222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84017,"byte_end":84020,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84025,"byte_end":84059,"line_start":1224,"line_end":1224,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84064,"byte_end":84099,"line_start":1225,"line_end":1225,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84104,"byte_end":84145,"line_start":1226,"line_end":1226,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84150,"byte_end":84157,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84650,"byte_end":84666,"line_start":1246,"line_end":1246,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84202,"byte_end":84261,"line_start":1230,"line_end":1230,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84266,"byte_end":84336,"line_start":1231,"line_end":1231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84341,"byte_end":84344,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84349,"byte_end":84356,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84361,"byte_end":84387,"line_start":1234,"line_end":1234,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84392,"byte_end":84409,"line_start":1235,"line_end":1235,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84414,"byte_end":84417,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84422,"byte_end":84450,"line_start":1237,"line_end":1237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84455,"byte_end":84458,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84463,"byte_end":84479,"line_start":1239,"line_end":1239,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84484,"byte_end":84501,"line_start":1240,"line_end":1240,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84506,"byte_end":84509,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84514,"byte_end":84549,"line_start":1242,"line_end":1242,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84554,"byte_end":84588,"line_start":1243,"line_end":1243,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84593,"byte_end":84630,"line_start":1244,"line_end":1244,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84635,"byte_end":84642,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85278,"byte_end":85285,"line_start":1266,"line_end":1266,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84687,"byte_end":84759,"line_start":1248,"line_end":1248,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84764,"byte_end":84836,"line_start":1249,"line_end":1249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84841,"byte_end":84844,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84849,"byte_end":84923,"line_start":1251,"line_end":1251,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84928,"byte_end":84994,"line_start":1252,"line_end":1252,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":84999,"byte_end":85002,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85007,"byte_end":85014,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85019,"byte_end":85045,"line_start":1255,"line_end":1255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85050,"byte_end":85053,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85058,"byte_end":85075,"line_start":1257,"line_end":1257,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85080,"byte_end":85096,"line_start":1258,"line_end":1258,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85101,"byte_end":85118,"line_start":1259,"line_end":1259,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85123,"byte_end":85126,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85131,"byte_end":85143,"line_start":1261,"line_end":1261,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85148,"byte_end":85209,"line_start":1262,"line_end":1262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85214,"byte_end":85217,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85222,"byte_end":85258,"line_start":1264,"line_end":1264,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85263,"byte_end":85270,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85583,"byte_end":85588,"line_start":1277,"line_end":1277,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85323,"byte_end":85376,"line_start":1267,"line_end":1267,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85381,"byte_end":85384,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85389,"byte_end":85396,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85401,"byte_end":85427,"line_start":1270,"line_end":1270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85432,"byte_end":85435,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85440,"byte_end":85456,"line_start":1272,"line_end":1272,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85461,"byte_end":85514,"line_start":1273,"line_end":1273,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85519,"byte_end":85522,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85527,"byte_end":85563,"line_start":1275,"line_end":1275,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85568,"byte_end":85575,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85925,"byte_end":85929,"line_start":1291,"line_end":1291,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85609,"byte_end":85648,"line_start":1279,"line_end":1279,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85653,"byte_end":85656,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85661,"byte_end":85722,"line_start":1281,"line_end":1281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85727,"byte_end":85730,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85735,"byte_end":85742,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85747,"byte_end":85773,"line_start":1284,"line_end":1284,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85778,"byte_end":85781,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85786,"byte_end":85802,"line_start":1286,"line_end":1286,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85807,"byte_end":85856,"line_start":1287,"line_end":1287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85861,"byte_end":85864,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85869,"byte_end":85905,"line_start":1289,"line_end":1289,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85910,"byte_end":85917,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86208,"byte_end":86212,"line_start":1303,"line_end":1303,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Raise a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raise a number to a floating point power.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":85958,"byte_end":86003,"line_start":1293,"line_end":1293,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86008,"byte_end":86011,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86016,"byte_end":86023,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86028,"byte_end":86054,"line_start":1296,"line_end":1296,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86059,"byte_end":86062,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86067,"byte_end":86083,"line_start":1298,"line_end":1298,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86088,"byte_end":86139,"line_start":1299,"line_end":1299,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86144,"byte_end":86147,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86152,"byte_end":86188,"line_start":1301,"line_end":1301,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86193,"byte_end":86200,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86635,"byte_end":86639,"line_start":1320,"line_end":1320,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86242,"byte_end":86279,"line_start":1305,"line_end":1305,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86284,"byte_end":86287,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86292,"byte_end":86339,"line_start":1307,"line_end":1307,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86344,"byte_end":86347,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86352,"byte_end":86359,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86364,"byte_end":86390,"line_start":1310,"line_end":1310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86395,"byte_end":86398,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86403,"byte_end":86426,"line_start":1312,"line_end":1312,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86431,"byte_end":86455,"line_start":1313,"line_end":1313,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86460,"byte_end":86463,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86468,"byte_end":86523,"line_start":1315,"line_end":1315,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86528,"byte_end":86531,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86536,"byte_end":86572,"line_start":1317,"line_end":1317,"column_start":5,"column_end":41}},{"value":"/ assert!(negative.sqrt().is_nan());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86577,"byte_end":86615,"line_start":1318,"line_end":1318,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86620,"byte_end":86627,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86989,"byte_end":86992,"line_start":1336,"line_end":1336,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86660,"byte_end":86711,"line_start":1322,"line_end":1322,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86716,"byte_end":86719,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86724,"byte_end":86731,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86736,"byte_end":86762,"line_start":1325,"line_end":1325,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86767,"byte_end":86770,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86775,"byte_end":86793,"line_start":1327,"line_end":1327,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86798,"byte_end":86808,"line_start":1328,"line_end":1328,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86813,"byte_end":86835,"line_start":1329,"line_end":1329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86840,"byte_end":86843,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86848,"byte_end":86869,"line_start":1331,"line_end":1331,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86874,"byte_end":86920,"line_start":1332,"line_end":1332,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86925,"byte_end":86928,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86933,"byte_end":86969,"line_start":1334,"line_end":1334,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":86974,"byte_end":86981,"line_start":1335,"line_end":1335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87270,"byte_end":87274,"line_start":1350,"line_end":1350,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87013,"byte_end":87036,"line_start":1338,"line_end":1338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87041,"byte_end":87044,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87049,"byte_end":87056,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87061,"byte_end":87087,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87092,"byte_end":87095,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87100,"byte_end":87116,"line_start":1343,"line_end":1343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87121,"byte_end":87124,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87129,"byte_end":87148,"line_start":1345,"line_end":1345,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87153,"byte_end":87201,"line_start":1346,"line_end":1346,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87206,"byte_end":87209,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87214,"byte_end":87250,"line_start":1348,"line_end":1348,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87255,"byte_end":87262,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87621,"byte_end":87623,"line_start":1366,"line_end":1366,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87295,"byte_end":87343,"line_start":1352,"line_end":1352,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87348,"byte_end":87351,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87356,"byte_end":87363,"line_start":1354,"line_end":1354,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87368,"byte_end":87394,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87399,"byte_end":87402,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87407,"byte_end":87425,"line_start":1357,"line_end":1357,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87430,"byte_end":87440,"line_start":1358,"line_end":1358,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87445,"byte_end":87467,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87472,"byte_end":87475,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87480,"byte_end":87501,"line_start":1361,"line_end":1361,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87506,"byte_end":87552,"line_start":1362,"line_end":1362,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87557,"byte_end":87560,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87565,"byte_end":87601,"line_start":1364,"line_end":1364,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87606,"byte_end":87613,"line_start":1365,"line_end":1365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88133,"byte_end":88136,"line_start":1385,"line_end":1385,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87644,"byte_end":87718,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87723,"byte_end":87726,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87731,"byte_end":87738,"line_start":1370,"line_end":1370,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87743,"byte_end":87769,"line_start":1371,"line_end":1371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87774,"byte_end":87777,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87782,"byte_end":87801,"line_start":1373,"line_end":1373,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87806,"byte_end":87824,"line_start":1374,"line_end":1374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87829,"byte_end":87832,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87837,"byte_end":87862,"line_start":1376,"line_end":1376,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87867,"byte_end":87923,"line_start":1377,"line_end":1377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87928,"byte_end":87931,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87936,"byte_end":87959,"line_start":1379,"line_end":1379,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":87964,"byte_end":88018,"line_start":1380,"line_end":1380,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88023,"byte_end":88026,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88031,"byte_end":88070,"line_start":1382,"line_end":1382,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88075,"byte_end":88113,"line_start":1383,"line_end":1383,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88118,"byte_end":88125,"line_start":1384,"line_end":1384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88458,"byte_end":88462,"line_start":1399,"line_end":1399,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88169,"byte_end":88216,"line_start":1387,"line_end":1387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88221,"byte_end":88224,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88229,"byte_end":88236,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88241,"byte_end":88267,"line_start":1390,"line_end":1390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88272,"byte_end":88275,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88280,"byte_end":88298,"line_start":1392,"line_end":1392,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88303,"byte_end":88306,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88311,"byte_end":88334,"line_start":1394,"line_end":1394,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88339,"byte_end":88389,"line_start":1395,"line_end":1395,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88394,"byte_end":88397,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88402,"byte_end":88438,"line_start":1397,"line_end":1397,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88443,"byte_end":88450,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88777,"byte_end":88782,"line_start":1413,"line_end":1413,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88483,"byte_end":88531,"line_start":1401,"line_end":1401,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88536,"byte_end":88539,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88544,"byte_end":88551,"line_start":1403,"line_end":1403,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88556,"byte_end":88582,"line_start":1404,"line_end":1404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88587,"byte_end":88590,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88595,"byte_end":88614,"line_start":1406,"line_end":1406,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88619,"byte_end":88622,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88627,"byte_end":88652,"line_start":1408,"line_end":1408,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88657,"byte_end":88708,"line_start":1409,"line_end":1409,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88713,"byte_end":88716,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88721,"byte_end":88757,"line_start":1411,"line_end":1411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88762,"byte_end":88769,"line_start":1412,"line_end":1412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89081,"byte_end":89091,"line_start":1427,"line_end":1427,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88803,"byte_end":88835,"line_start":1415,"line_end":1415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88840,"byte_end":88843,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88848,"byte_end":88855,"line_start":1417,"line_end":1417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88860,"byte_end":88885,"line_start":1418,"line_end":1418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88890,"byte_end":88893,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88898,"byte_end":88925,"line_start":1420,"line_end":1420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88930,"byte_end":88933,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":88938,"byte_end":88998,"line_start":1422,"line_end":1422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89003,"byte_end":89006,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89011,"byte_end":89047,"line_start":1424,"line_end":1424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89052,"byte_end":89059,"line_start":1425,"line_end":1425,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89064,"byte_end":89073,"line_start":1426,"line_end":1426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89522,"byte_end":89532,"line_start":1445,"line_end":1445,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89240,"byte_end":89272,"line_start":1433,"line_end":1433,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89277,"byte_end":89280,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89285,"byte_end":89292,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89297,"byte_end":89322,"line_start":1436,"line_end":1436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89327,"byte_end":89330,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89335,"byte_end":89361,"line_start":1438,"line_end":1438,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89366,"byte_end":89369,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89374,"byte_end":89439,"line_start":1440,"line_end":1440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89444,"byte_end":89447,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89452,"byte_end":89488,"line_start":1442,"line_end":1442,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89493,"byte_end":89500,"line_start":1443,"line_end":1443,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89505,"byte_end":89514,"line_start":1444,"line_end":1444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89886,"byte_end":89889,"line_start":1461,"line_end":1461,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89681,"byte_end":89724,"line_start":1451,"line_end":1451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89729,"byte_end":89732,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89737,"byte_end":89744,"line_start":1453,"line_end":1453,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89749,"byte_end":89775,"line_start":1454,"line_end":1454,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89780,"byte_end":89783,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89788,"byte_end":89804,"line_start":1456,"line_end":1456,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89809,"byte_end":89825,"line_start":1457,"line_end":1457,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89830,"byte_end":89833,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89838,"byte_end":89866,"line_start":1459,"line_end":1459,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89871,"byte_end":89878,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90128,"byte_end":90131,"line_start":1473,"line_end":1473,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89923,"byte_end":89966,"line_start":1463,"line_end":1463,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89971,"byte_end":89974,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89979,"byte_end":89986,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":89991,"byte_end":90017,"line_start":1466,"line_end":1466,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90022,"byte_end":90025,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90030,"byte_end":90046,"line_start":1468,"line_end":1468,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90051,"byte_end":90067,"line_start":1469,"line_end":1469,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90072,"byte_end":90075,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90080,"byte_end":90108,"line_start":1471,"line_end":1471,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90113,"byte_end":90120,"line_start":1472,"line_end":1472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90629,"byte_end":90636,"line_start":1492,"line_end":1492,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::float::Float::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90165,"byte_end":90208,"line_start":1475,"line_end":1475,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90213,"byte_end":90216,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90221,"byte_end":90252,"line_start":1477,"line_end":1477,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90257,"byte_end":90283,"line_start":1478,"line_end":1478,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90288,"byte_end":90291,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90296,"byte_end":90303,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90308,"byte_end":90334,"line_start":1481,"line_end":1481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90339,"byte_end":90342,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90347,"byte_end":90363,"line_start":1483,"line_end":1483,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90368,"byte_end":90385,"line_start":1484,"line_end":1484,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90390,"byte_end":90393,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90398,"byte_end":90454,"line_start":1486,"line_end":1486,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90459,"byte_end":90515,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90520,"byte_end":90523,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90528,"byte_end":90566,"line_start":1489,"line_end":1489,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90571,"byte_end":90609,"line_start":1490,"line_end":1490,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90614,"byte_end":90621,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90944,"byte_end":90948,"line_start":1506,"line_end":1506,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90670,"byte_end":90706,"line_start":1494,"line_end":1494,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90711,"byte_end":90714,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90719,"byte_end":90726,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90731,"byte_end":90757,"line_start":1497,"line_end":1497,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90762,"byte_end":90765,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90770,"byte_end":90786,"line_start":1499,"line_end":1499,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90791,"byte_end":90794,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90799,"byte_end":90822,"line_start":1501,"line_end":1501,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90827,"byte_end":90875,"line_start":1502,"line_end":1502,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90880,"byte_end":90883,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90888,"byte_end":90924,"line_start":1504,"line_end":1504,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90929,"byte_end":90936,"line_start":1505,"line_end":1505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91366,"byte_end":91371,"line_start":1522,"line_end":1522,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":90969,"byte_end":91043,"line_start":1508,"line_end":1508,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91048,"byte_end":91079,"line_start":1509,"line_end":1509,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91084,"byte_end":91087,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91092,"byte_end":91099,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91104,"byte_end":91130,"line_start":1512,"line_end":1512,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91135,"byte_end":91138,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91143,"byte_end":91159,"line_start":1514,"line_end":1514,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91164,"byte_end":91180,"line_start":1515,"line_end":1515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91185,"byte_end":91188,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91193,"byte_end":91215,"line_start":1517,"line_end":1517,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91220,"byte_end":91297,"line_start":1518,"line_end":1518,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91302,"byte_end":91305,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91310,"byte_end":91346,"line_start":1520,"line_end":1520,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91351,"byte_end":91358,"line_start":1521,"line_end":1521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91699,"byte_end":91702,"line_start":1536,"line_end":1536,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91405,"byte_end":91452,"line_start":1524,"line_end":1524,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91457,"byte_end":91460,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91465,"byte_end":91472,"line_start":1526,"line_end":1526,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91477,"byte_end":91503,"line_start":1527,"line_end":1527,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91508,"byte_end":91525,"line_start":1528,"line_end":1528,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91530,"byte_end":91533,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91538,"byte_end":91570,"line_start":1530,"line_end":1530,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91575,"byte_end":91578,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91583,"byte_end":91630,"line_start":1532,"line_end":1532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91635,"byte_end":91638,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91643,"byte_end":91679,"line_start":1534,"line_end":1534,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91684,"byte_end":91691,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92019,"byte_end":92022,"line_start":1550,"line_end":1550,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91723,"byte_end":91772,"line_start":1538,"line_end":1538,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91777,"byte_end":91780,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91785,"byte_end":91792,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91797,"byte_end":91823,"line_start":1541,"line_end":1541,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91828,"byte_end":91845,"line_start":1542,"line_end":1542,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91850,"byte_end":91853,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91858,"byte_end":91890,"line_start":1544,"line_end":1544,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91895,"byte_end":91898,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91903,"byte_end":91950,"line_start":1546,"line_end":1546,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91955,"byte_end":91958,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":91963,"byte_end":91999,"line_start":1548,"line_end":1548,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92004,"byte_end":92011,"line_start":1549,"line_end":1549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92332,"byte_end":92335,"line_start":1563,"line_end":1563,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92043,"byte_end":92093,"line_start":1552,"line_end":1552,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92098,"byte_end":92101,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92106,"byte_end":92113,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92118,"byte_end":92144,"line_start":1555,"line_end":1555,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92149,"byte_end":92166,"line_start":1556,"line_end":1556,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92171,"byte_end":92174,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92179,"byte_end":92211,"line_start":1558,"line_end":1558,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92216,"byte_end":92263,"line_start":1559,"line_end":1559,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92268,"byte_end":92271,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92276,"byte_end":92312,"line_start":1561,"line_end":1561,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92317,"byte_end":92324,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92815,"byte_end":92819,"line_start":1580,"line_end":1580,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92356,"byte_end":92423,"line_start":1565,"line_end":1565,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92428,"byte_end":92497,"line_start":1566,"line_end":1566,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92502,"byte_end":92514,"line_start":1567,"line_end":1567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92519,"byte_end":92522,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92527,"byte_end":92534,"line_start":1569,"line_end":1569,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92539,"byte_end":92565,"line_start":1570,"line_end":1570,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92570,"byte_end":92587,"line_start":1571,"line_end":1571,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92592,"byte_end":92595,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92600,"byte_end":92634,"line_start":1573,"line_end":1573,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92639,"byte_end":92642,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92647,"byte_end":92669,"line_start":1575,"line_end":1575,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92674,"byte_end":92746,"line_start":1576,"line_end":1576,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92751,"byte_end":92754,"line_start":1577,"line_end":1577,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92759,"byte_end":92795,"line_start":1578,"line_end":1578,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92800,"byte_end":92807,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93295,"byte_end":93299,"line_start":1597,"line_end":1597,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92840,"byte_end":92909,"line_start":1582,"line_end":1582,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92914,"byte_end":92977,"line_start":1583,"line_end":1583,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92982,"byte_end":92994,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":92999,"byte_end":93002,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93007,"byte_end":93014,"line_start":1586,"line_end":1586,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93019,"byte_end":93045,"line_start":1587,"line_end":1587,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93050,"byte_end":93067,"line_start":1588,"line_end":1588,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93072,"byte_end":93075,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93080,"byte_end":93114,"line_start":1590,"line_end":1590,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93119,"byte_end":93122,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93127,"byte_end":93149,"line_start":1592,"line_end":1592,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93154,"byte_end":93226,"line_start":1593,"line_end":1593,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93231,"byte_end":93234,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93239,"byte_end":93275,"line_start":1595,"line_end":1595,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93280,"byte_end":93287,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93663,"byte_end":93667,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93320,"byte_end":93394,"line_start":1599,"line_end":1599,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93399,"byte_end":93423,"line_start":1600,"line_end":1600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93428,"byte_end":93431,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93436,"byte_end":93443,"line_start":1602,"line_end":1602,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93448,"byte_end":93474,"line_start":1603,"line_end":1603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93479,"byte_end":93482,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93487,"byte_end":93503,"line_start":1605,"line_end":1605,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93508,"byte_end":93511,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93516,"byte_end":93535,"line_start":1607,"line_end":1607,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93540,"byte_end":93594,"line_start":1608,"line_end":1608,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93599,"byte_end":93602,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93607,"byte_end":93643,"line_start":1610,"line_end":1610,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93648,"byte_end":93655,"line_start":1611,"line_end":1611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94548,"byte_end":94553,"line_start":1641,"line_end":1641,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93688,"byte_end":93764,"line_start":1614,"line_end":1614,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93769,"byte_end":93772,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93777,"byte_end":93804,"line_start":1616,"line_end":1616,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93809,"byte_end":93857,"line_start":1617,"line_end":1617,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93862,"byte_end":93912,"line_start":1618,"line_end":1618,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93917,"byte_end":93968,"line_start":1619,"line_end":1619,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93973,"byte_end":93976,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93981,"byte_end":93988,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":93993,"byte_end":94019,"line_start":1622,"line_end":1622,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94024,"byte_end":94041,"line_start":1623,"line_end":1623,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94046,"byte_end":94049,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94054,"byte_end":94083,"line_start":1625,"line_end":1625,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94088,"byte_end":94132,"line_start":1626,"line_end":1626,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94137,"byte_end":94168,"line_start":1627,"line_end":1627,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94173,"byte_end":94190,"line_start":1628,"line_end":1628,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94195,"byte_end":94213,"line_start":1629,"line_end":1629,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94218,"byte_end":94221,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94226,"byte_end":94250,"line_start":1631,"line_end":1631,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94255,"byte_end":94273,"line_start":1632,"line_end":1632,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94278,"byte_end":94295,"line_start":1633,"line_end":1633,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94300,"byte_end":94303,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94308,"byte_end":94368,"line_start":1635,"line_end":1635,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94373,"byte_end":94434,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94439,"byte_end":94442,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94447,"byte_end":94485,"line_start":1638,"line_end":1638,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94490,"byte_end":94528,"line_start":1639,"line_end":1639,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94533,"byte_end":94540,"line_start":1640,"line_end":1640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95067,"byte_end":95074,"line_start":1659,"line_end":1659,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94587,"byte_end":94662,"line_start":1643,"line_end":1643,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94667,"byte_end":94690,"line_start":1644,"line_end":1644,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94695,"byte_end":94698,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94703,"byte_end":94710,"line_start":1646,"line_end":1646,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94715,"byte_end":94741,"line_start":1647,"line_end":1647,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94746,"byte_end":94763,"line_start":1648,"line_end":1648,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94768,"byte_end":94771,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94776,"byte_end":94808,"line_start":1650,"line_end":1650,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94813,"byte_end":94837,"line_start":1651,"line_end":1651,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94842,"byte_end":94845,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94850,"byte_end":94899,"line_start":1653,"line_end":1653,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94904,"byte_end":94953,"line_start":1654,"line_end":1654,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94958,"byte_end":94961,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":94966,"byte_end":95004,"line_start":1656,"line_end":1656,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95009,"byte_end":95047,"line_start":1657,"line_end":1657,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95052,"byte_end":95059,"line_start":1658,"line_end":1658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95442,"byte_end":95448,"line_start":1674,"line_end":1674,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95103,"byte_end":95167,"line_start":1661,"line_end":1661,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95172,"byte_end":95200,"line_start":1662,"line_end":1662,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95205,"byte_end":95208,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95213,"byte_end":95220,"line_start":1664,"line_end":1664,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95225,"byte_end":95251,"line_start":1665,"line_end":1665,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95256,"byte_end":95259,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95264,"byte_end":95280,"line_start":1667,"line_end":1667,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95285,"byte_end":95288,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95293,"byte_end":95313,"line_start":1669,"line_end":1669,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95318,"byte_end":95373,"line_start":1670,"line_end":1670,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95378,"byte_end":95381,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95386,"byte_end":95422,"line_start":1672,"line_end":1672,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95427,"byte_end":95434,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95875,"byte_end":95880,"line_start":1690,"line_end":1690,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95469,"byte_end":95534,"line_start":1676,"line_end":1676,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95539,"byte_end":95584,"line_start":1677,"line_end":1677,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95589,"byte_end":95592,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95597,"byte_end":95604,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95609,"byte_end":95635,"line_start":1680,"line_end":1680,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95640,"byte_end":95657,"line_start":1681,"line_end":1681,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95662,"byte_end":95665,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95670,"byte_end":95703,"line_start":1683,"line_end":1683,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95708,"byte_end":95711,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95716,"byte_end":95752,"line_start":1685,"line_end":1685,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95757,"byte_end":95806,"line_start":1686,"line_end":1686,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95811,"byte_end":95814,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95819,"byte_end":95855,"line_start":1688,"line_end":1688,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95860,"byte_end":95867,"line_start":1689,"line_end":1689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96300,"byte_end":96304,"line_start":1708,"line_end":1708,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95901,"byte_end":95930,"line_start":1692,"line_end":1692,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95935,"byte_end":95938,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95943,"byte_end":95950,"line_start":1694,"line_end":1694,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95955,"byte_end":95981,"line_start":1695,"line_end":1695,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":95986,"byte_end":96003,"line_start":1696,"line_end":1696,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96008,"byte_end":96011,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96016,"byte_end":96043,"line_start":1698,"line_end":1698,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96048,"byte_end":96064,"line_start":1699,"line_end":1699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96069,"byte_end":96072,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96077,"byte_end":96098,"line_start":1701,"line_end":1701,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96103,"byte_end":96150,"line_start":1702,"line_end":1702,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96155,"byte_end":96187,"line_start":1703,"line_end":1703,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96192,"byte_end":96231,"line_start":1704,"line_end":1704,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96236,"byte_end":96239,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96244,"byte_end":96280,"line_start":1706,"line_end":1706,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96285,"byte_end":96292,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96740,"byte_end":96744,"line_start":1726,"line_end":1726,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96325,"byte_end":96356,"line_start":1710,"line_end":1710,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96361,"byte_end":96364,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96369,"byte_end":96376,"line_start":1712,"line_end":1712,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96381,"byte_end":96407,"line_start":1713,"line_end":1713,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96412,"byte_end":96429,"line_start":1714,"line_end":1714,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96434,"byte_end":96437,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96442,"byte_end":96469,"line_start":1716,"line_end":1716,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96474,"byte_end":96490,"line_start":1717,"line_end":1717,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96495,"byte_end":96516,"line_start":1718,"line_end":1718,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96521,"byte_end":96565,"line_start":1719,"line_end":1719,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96570,"byte_end":96602,"line_start":1720,"line_end":1720,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96607,"byte_end":96646,"line_start":1721,"line_end":1721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96651,"byte_end":96654,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96659,"byte_end":96677,"line_start":1723,"line_end":1723,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96682,"byte_end":96720,"line_start":1724,"line_end":1724,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96725,"byte_end":96732,"line_start":1725,"line_end":1725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97200,"byte_end":97204,"line_start":1744,"line_end":1744,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96765,"byte_end":96797,"line_start":1728,"line_end":1728,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96802,"byte_end":96805,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96810,"byte_end":96817,"line_start":1730,"line_end":1730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96822,"byte_end":96848,"line_start":1731,"line_end":1731,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96853,"byte_end":96870,"line_start":1732,"line_end":1732,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96875,"byte_end":96878,"line_start":1733,"line_end":1733,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96883,"byte_end":96910,"line_start":1734,"line_end":1734,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96915,"byte_end":96931,"line_start":1735,"line_end":1735,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96936,"byte_end":96939,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96944,"byte_end":96965,"line_start":1737,"line_end":1737,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":96970,"byte_end":97030,"line_start":1738,"line_end":1738,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97035,"byte_end":97085,"line_start":1739,"line_end":1739,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97090,"byte_end":97129,"line_start":1740,"line_end":1740,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97134,"byte_end":97137,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97142,"byte_end":97180,"line_start":1742,"line_end":1742,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97185,"byte_end":97192,"line_start":1743,"line_end":1743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97499,"byte_end":97504,"line_start":1758,"line_end":1758,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97225,"byte_end":97262,"line_start":1746,"line_end":1746,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97267,"byte_end":97270,"line_start":1747,"line_end":1747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97275,"byte_end":97282,"line_start":1748,"line_end":1748,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97287,"byte_end":97313,"line_start":1749,"line_end":1749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97318,"byte_end":97321,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97326,"byte_end":97342,"line_start":1751,"line_end":1751,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97347,"byte_end":97376,"line_start":1752,"line_end":1752,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97381,"byte_end":97384,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97389,"byte_end":97428,"line_start":1754,"line_end":1754,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97433,"byte_end":97436,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97441,"byte_end":97479,"line_start":1756,"line_end":1756,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97484,"byte_end":97491,"line_start":1757,"line_end":1757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97801,"byte_end":97806,"line_start":1772,"line_end":1772,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97525,"byte_end":97564,"line_start":1760,"line_end":1760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97569,"byte_end":97572,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97577,"byte_end":97584,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97589,"byte_end":97615,"line_start":1763,"line_end":1763,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97620,"byte_end":97623,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97628,"byte_end":97644,"line_start":1765,"line_end":1765,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97649,"byte_end":97678,"line_start":1766,"line_end":1766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97683,"byte_end":97686,"line_start":1767,"line_end":1767,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97691,"byte_end":97730,"line_start":1768,"line_end":1768,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97735,"byte_end":97738,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97743,"byte_end":97781,"line_start":1770,"line_end":1770,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97786,"byte_end":97793,"line_start":1771,"line_end":1771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98137,"byte_end":98142,"line_start":1787,"line_end":1787,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97827,"byte_end":97867,"line_start":1774,"line_end":1774,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97872,"byte_end":97875,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97880,"byte_end":97887,"line_start":1776,"line_end":1776,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97892,"byte_end":97918,"line_start":1777,"line_end":1777,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97923,"byte_end":97940,"line_start":1778,"line_end":1778,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97945,"byte_end":97948,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97953,"byte_end":97980,"line_start":1780,"line_end":1780,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":97985,"byte_end":98014,"line_start":1781,"line_end":1781,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98019,"byte_end":98022,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98027,"byte_end":98066,"line_start":1783,"line_end":1783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98071,"byte_end":98074,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98079,"byte_end":98117,"line_start":1785,"line_end":1785,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98122,"byte_end":98129,"line_start":1786,"line_end":1786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98834,"byte_end":98848,"line_start":1808,"line_end":1808,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98163,"byte_end":98241,"line_start":1789,"line_end":1789,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98246,"byte_end":98323,"line_start":1790,"line_end":1790,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98328,"byte_end":98331,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98336,"byte_end":98343,"line_start":1792,"line_end":1792,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98348,"byte_end":98374,"line_start":1793,"line_end":1793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98379,"byte_end":98382,"line_start":1794,"line_end":1794,"column_start":5,"column_end":8}},{"value":"/ let num = 2.0f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98387,"byte_end":98408,"line_start":1795,"line_end":1795,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98413,"byte_end":98416,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ // (8388608, -22, 1)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98421,"byte_end":98445,"line_start":1797,"line_end":1797,"column_start":5,"column_end":29}},{"value":"/ let (mantissa, exponent, sign) = Float::integer_decode(num);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98450,"byte_end":98514,"line_start":1798,"line_end":1798,"column_start":5,"column_end":69}},{"value":"/ let sign_f = sign as f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98519,"byte_end":98548,"line_start":1799,"line_end":1799,"column_start":5,"column_end":34}},{"value":"/ let mantissa_f = mantissa as f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98553,"byte_end":98590,"line_start":1800,"line_end":1800,"column_start":5,"column_end":42}},{"value":"/ let exponent_f = num.powf(exponent as f32);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98595,"byte_end":98642,"line_start":1801,"line_end":1801,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98647,"byte_end":98650,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ // 1 * 8388608 * 2^(-22) == 2","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98655,"byte_end":98688,"line_start":1803,"line_end":1803,"column_start":5,"column_end":38}},{"value":"/ let abs_difference = (sign_f * mantissa_f * exponent_f - num).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98693,"byte_end":98765,"line_start":1804,"line_end":1804,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98770,"byte_end":98773,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98778,"byte_end":98814,"line_start":1806,"line_end":1806,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":98819,"byte_end":98826,"line_start":1807,"line_end":1807,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111345,"byte_end":111346,"line_start":2283,"line_end":2283,"column_start":5,"column_end":6},"name":"E","qualname":"::float::FloatConst::E","value":"pub fn E() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return Euler’s number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111386,"byte_end":111395,"line_start":2285,"line_end":2285,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"::float::FloatConst::FRAC_1_PI","value":"pub fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `1.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111442,"byte_end":111455,"line_start":2287,"line_end":2287,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"::float::FloatConst::FRAC_1_SQRT_2","value":"pub fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `1.0 / sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111495,"byte_end":111504,"line_start":2289,"line_end":2289,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"::float::FloatConst::FRAC_2_PI","value":"pub fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `2.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111550,"byte_end":111564,"line_start":2291,"line_end":2291,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"::float::FloatConst::FRAC_2_SQRT_PI","value":"pub fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `2.0 / sqrt(π)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111604,"byte_end":111613,"line_start":2293,"line_end":2293,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"::float::FloatConst::FRAC_PI_2","value":"pub fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `π / 2.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111653,"byte_end":111662,"line_start":2295,"line_end":2295,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"::float::FloatConst::FRAC_PI_3","value":"pub fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `π / 3.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111702,"byte_end":111711,"line_start":2297,"line_end":2297,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"::float::FloatConst::FRAC_PI_4","value":"pub fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `π / 4.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111751,"byte_end":111760,"line_start":2299,"line_end":2299,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"::float::FloatConst::FRAC_PI_6","value":"pub fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `π / 6.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111800,"byte_end":111809,"line_start":2301,"line_end":2301,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"::float::FloatConst::FRAC_PI_8","value":"pub fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `π / 8.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111849,"byte_end":111854,"line_start":2303,"line_end":2303,"column_start":5,"column_end":10},"name":"LN_10","qualname":"::float::FloatConst::LN_10","value":"pub fn LN_10() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `ln(10.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111893,"byte_end":111897,"line_start":2305,"line_end":2305,"column_start":5,"column_end":9},"name":"LN_2","qualname":"::float::FloatConst::LN_2","value":"pub fn LN_2() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `ln(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111937,"byte_end":111944,"line_start":2307,"line_end":2307,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"::float::FloatConst::LOG10_E","value":"pub fn LOG10_E() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `log10(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":111983,"byte_end":111989,"line_start":2309,"line_end":2309,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"::float::FloatConst::LOG2_E","value":"pub fn LOG2_E() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `log2(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":112046,"byte_end":112048,"line_start":2311,"line_end":2311,"column_start":5,"column_end":7},"name":"PI","qualname":"::float::FloatConst::PI","value":"pub fn PI() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return Archimedes’ constant `π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":112089,"byte_end":112095,"line_start":2313,"line_end":2313,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"::float::FloatConst::SQRT_2","value":"pub fn SQRT_2() -> Self","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"Return `sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":486},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":502},{"krate":0,"index":507},{"krate":0,"index":511},{"krate":0,"index":2567},{"krate":0,"index":2570},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":497},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114625,"byte_end":114629,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines an additive identity element for `Self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114450,"byte_end":114502,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114503,"byte_end":114506,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114507,"byte_end":114517,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114518,"byte_end":114521,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114522,"byte_end":114536,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ a + 0 = a       ∀ a ∈ Self","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114537,"byte_end":114571,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ 0 + a = a       ∀ a ∈ Self","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114572,"byte_end":114606,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114607,"byte_end":114614,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114999,"byte_end":115003,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Returns the additive identity element of `Self`, `0`.\n # Purity","sig":null,"attributes":[{"value":"/ Returns the additive identity element of `Self`, `0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114670,"byte_end":114727,"line_start":13,"line_end":13,"column_start":5,"column_end":62}},{"value":"/ # Purity","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114732,"byte_end":114744,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114749,"byte_end":114752,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114757,"byte_end":114831,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114836,"byte_end":114902,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114907,"byte_end":114925,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":115092,"byte_end":115100,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"set_zero","qualname":"::identities::Zero::set_zero","value":"pub fn set_zero(&mut Self)","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Sets `self` to the additive identity element of `Self`, `0`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the additive identity element of `Self`, `0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":115020,"byte_end":115084,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":115226,"byte_end":115233,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the additive identity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":115155,"byte_end":115218,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":507},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116320,"byte_end":116323,"line_start":90,"line_end":90,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines a multiplicative identity element for `Self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116140,"byte_end":116197,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116198,"byte_end":116201,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116202,"byte_end":116212,"line_start":84,"line_end":84,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116213,"byte_end":116216,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116217,"byte_end":116231,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/ a * 1 = a       ∀ a ∈ Self","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116232,"byte_end":116266,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ 1 * a = a       ∀ a ∈ Self","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116267,"byte_end":116301,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116302,"byte_end":116309,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116707,"byte_end":116710,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Returns the multiplicative identity element of `Self`, `1`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116364,"byte_end":116427,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116432,"byte_end":116435,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116440,"byte_end":116452,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116457,"byte_end":116460,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116465,"byte_end":116539,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116544,"byte_end":116610,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116615,"byte_end":116633,"line_start":97,"line_end":97,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116805,"byte_end":116812,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"set_one","qualname":"::identities::One::set_one","value":"pub fn set_one(&mut Self)","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Sets `self` to the multiplicative identity element of `Self`, `1`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116727,"byte_end":116797,"line_start":101,"line_end":101,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":117157,"byte_end":117163,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"pub fn is_one(&Self) -> bool where Self: PartialEq","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the multiplicative identity.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the multiplicative identity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116865,"byte_end":116934,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116939,"byte_end":116942,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ For performance reasons, it's best to implement this manually.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116947,"byte_end":117013,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ After a semver bump, this method will be required, and the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":117018,"byte_end":117080,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/ `where Self: PartialEq` bound will be removed.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":117085,"byte_end":117135,"line_start":110,"line_end":110,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":117140,"byte_end":117149,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":118186,"byte_end":118190,"line_start":171,"line_end":171,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, `0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":118121,"byte_end":118160,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":118161,"byte_end":118178,"line_start":170,"line_end":170,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":518},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":118300,"byte_end":118303,"line_start":177,"line_end":177,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity, `1`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":118229,"byte_end":118274,"line_start":175,"line_end":175,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":118275,"byte_end":118292,"line_start":176,"line_end":176,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":520},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":571},{"krate":0,"index":2609},{"krate":0,"index":2626},{"krate":0,"index":2643},{"krate":0,"index":2660},{"krate":0,"index":2677},{"krate":0,"index":2694},{"krate":0,"index":2711},{"krate":0,"index":2728},{"krate":0,"index":2745},{"krate":0,"index":2762},{"krate":0,"index":2779},{"krate":0,"index":2796}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":554},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120875,"byte_end":120882,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"decl_id":null,"docs":" Generic trait for primitive integers.","sig":null,"attributes":[{"value":"/ Generic trait for primitive integers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119219,"byte_end":119260,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119261,"byte_end":119264,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `PrimInt` trait is an abstraction over the builtin primitive integer types (e.g., `u8`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119265,"byte_end":119360,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ `u32`, `isize`, `i128`, ...). It inherits the basic numeric traits and extends them with","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119361,"byte_end":119453,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ bitwise operators and non-wrapping arithmetic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119454,"byte_end":119504,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119505,"byte_end":119508,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The trait explicitly inherits `Copy`, `Eq`, `Ord`, and `Sized`. The intention is that all","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119509,"byte_end":119602,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ types implementing this trait behave like primitive types that are passed by value by default","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119603,"byte_end":119700,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ and behave like builtin integers. Furthermore, the types are expected to expose the integer","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119701,"byte_end":119796,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ value in binary representation and support bitwise operators. The standard bitwise operations","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119797,"byte_end":119894,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ (e.g., bitwise-and, bitwise-or, right-shift, left-shift) are inherited and the trait extends","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119895,"byte_end":119991,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ these with introspective queries (e.g., `PrimInt::count_ones()`, `PrimInt::leading_zeros()`),","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":119992,"byte_end":120089,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ bitwise combinators (e.g., `PrimInt::rotate_left()`), and endianness converters (e.g.,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120090,"byte_end":120180,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ `PrimInt::to_be()`).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120181,"byte_end":120205,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120206,"byte_end":120209,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All `PrimInt` types are expected to be fixed-width binary integers. The width can be queried","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120210,"byte_end":120306,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ via `T::zero().count_zeros()`. The trait currently lacks a way to query the width at","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120307,"byte_end":120395,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compile-time.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120396,"byte_end":120413,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120414,"byte_end":120417,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ While a default implementation for all builtin primitive integers is provided, the trait is in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120418,"byte_end":120516,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ no way restricted to these. Other integer types that fulfil the requirements are free to","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120517,"byte_end":120609,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ implement the trait was well.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120610,"byte_end":120643,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120644,"byte_end":120647,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait and many of the method names originate in the unstable `core::num::Int` trait from","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120648,"byte_end":120745,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ the rust standard library. The original trait was never stabilized and thus removed from the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120746,"byte_end":120842,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ standard library.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120843,"byte_end":120864,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121557,"byte_end":121567,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121302,"byte_end":121372,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121377,"byte_end":121380,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121385,"byte_end":121399,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121404,"byte_end":121407,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121412,"byte_end":121419,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121424,"byte_end":121452,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121457,"byte_end":121460,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121465,"byte_end":121490,"line_start":62,"line_end":62,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121495,"byte_end":121498,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_ones(), 3);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121503,"byte_end":121537,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121542,"byte_end":121549,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121844,"byte_end":121855,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121587,"byte_end":121658,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121663,"byte_end":121666,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121671,"byte_end":121685,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121690,"byte_end":121693,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121698,"byte_end":121705,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121710,"byte_end":121738,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121743,"byte_end":121746,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121751,"byte_end":121776,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121781,"byte_end":121784,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_zeros(), 5);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121789,"byte_end":121824,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121829,"byte_end":121836,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122151,"byte_end":122164,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121875,"byte_end":121943,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121948,"byte_end":121962,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121967,"byte_end":121970,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121975,"byte_end":121989,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121994,"byte_end":121997,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122002,"byte_end":122009,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122014,"byte_end":122042,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122047,"byte_end":122050,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122055,"byte_end":122080,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122085,"byte_end":122088,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.leading_zeros(), 10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122093,"byte_end":122131,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122136,"byte_end":122143,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122461,"byte_end":122475,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122184,"byte_end":122253,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122258,"byte_end":122272,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122277,"byte_end":122280,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122285,"byte_end":122299,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122304,"byte_end":122307,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122312,"byte_end":122319,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122324,"byte_end":122352,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122357,"byte_end":122360,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122365,"byte_end":122390,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122395,"byte_end":122398,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.trailing_zeros(), 3);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122403,"byte_end":122441,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122446,"byte_end":122453,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122863,"byte_end":122874,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"pub fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount, `n`, wrapping\n the truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount, `n`, wrapping","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122495,"byte_end":122563,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ the truncated bits to the end of the resulting integer.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122568,"byte_end":122627,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122632,"byte_end":122635,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122640,"byte_end":122654,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122659,"byte_end":122662,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122667,"byte_end":122674,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122679,"byte_end":122707,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122712,"byte_end":122715,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122720,"byte_end":122754,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF012u64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122759,"byte_end":122793,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122798,"byte_end":122801,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_left(12), m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122806,"byte_end":122843,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122848,"byte_end":122855,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123279,"byte_end":123291,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"pub fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount, `n`, wrapping\n the truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount, `n`, wrapping","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122903,"byte_end":122972,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/ the truncated bits to the beginning of the resulting integer.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":122977,"byte_end":123042,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123047,"byte_end":123050,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123055,"byte_end":123069,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123074,"byte_end":123077,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123082,"byte_end":123089,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123094,"byte_end":123122,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123127,"byte_end":123130,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123135,"byte_end":123169,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ let m = 0xDEF0123456789ABCu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123174,"byte_end":123208,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123213,"byte_end":123216,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_right(12), m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123221,"byte_end":123259,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123264,"byte_end":123271,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123727,"byte_end":123737,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"pub fn signed_shl(Self, u32) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount, `n`, filling","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123320,"byte_end":123387,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123392,"byte_end":123432,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123437,"byte_end":123440,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shl`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123445,"byte_end":123492,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123497,"byte_end":123500,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123505,"byte_end":123519,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123524,"byte_end":123527,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123532,"byte_end":123539,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123544,"byte_end":123572,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123577,"byte_end":123580,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123585,"byte_end":123619,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000u64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123624,"byte_end":123658,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123663,"byte_end":123666,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shl(12), m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123671,"byte_end":123707,"line_start":152,"line_end":152,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123712,"byte_end":123719,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124206,"byte_end":124216,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"pub fn signed_shr(Self, u32) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount, `n`, copying\n the \"sign bit\" in the most significant bits even for unsigned types.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount, `n`, copying","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123766,"byte_end":123834,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/ the \"sign bit\" in the most significant bits even for unsigned types.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123839,"byte_end":123911,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123916,"byte_end":123919,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shr`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123924,"byte_end":123971,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123976,"byte_end":123979,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":123984,"byte_end":123998,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124003,"byte_end":124006,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124011,"byte_end":124018,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124023,"byte_end":124051,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124056,"byte_end":124059,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210u64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124064,"byte_end":124098,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let m = 0xFFFFEDCBA9876543u64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124103,"byte_end":124137,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124142,"byte_end":124145,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shr(12), m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124150,"byte_end":124186,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124191,"byte_end":124198,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124656,"byte_end":124668,"line_start":188,"line_end":188,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"pub fn unsigned_shl(Self, u32) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount, `n`, filling","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124245,"byte_end":124312,"line_start":173,"line_end":173,"column_start":5,"column_end":72}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124317,"byte_end":124357,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124362,"byte_end":124365,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shl`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124370,"byte_end":124419,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124424,"byte_end":124427,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124432,"byte_end":124446,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124451,"byte_end":124454,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124459,"byte_end":124466,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124471,"byte_end":124499,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124504,"byte_end":124507,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFi64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124512,"byte_end":124546,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000i64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124551,"byte_end":124585,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124590,"byte_end":124593,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shl(12), m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124598,"byte_end":124636,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124641,"byte_end":124648,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125101,"byte_end":125113,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"pub fn unsigned_shr(Self, u32) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount, `n`, filling\n zeros in the most significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount, `n`, filling","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124697,"byte_end":124765,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/ zeros in the most significant bits.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124770,"byte_end":124809,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124814,"byte_end":124817,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shr`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124822,"byte_end":124871,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124876,"byte_end":124879,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124884,"byte_end":124898,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124903,"byte_end":124906,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124911,"byte_end":124918,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124923,"byte_end":124951,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124956,"byte_end":124959,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let n = -8i8; // 0b11111000","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":124964,"byte_end":124995,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ let m = 62i8; // 0b00111110","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125000,"byte_end":125031,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125036,"byte_end":125039,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shr(2), m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125044,"byte_end":125081,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125086,"byte_end":125093,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125418,"byte_end":125428,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"pub fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125142,"byte_end":125185,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125190,"byte_end":125193,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125198,"byte_end":125212,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125217,"byte_end":125220,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125225,"byte_end":125232,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125237,"byte_end":125265,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125270,"byte_end":125273,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125278,"byte_end":125312,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ let m = 0xEFCDAB8967452301u64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125317,"byte_end":125351,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125356,"byte_end":125359,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.swap_bytes(), m);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125364,"byte_end":125398,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125403,"byte_end":125410,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125924,"byte_end":125931,"line_start":238,"line_end":238,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Convert an integer from big endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from big endian to the target's endianness.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125449,"byte_end":125515,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125520,"byte_end":125523,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125528,"byte_end":125602,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125607,"byte_end":125610,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125615,"byte_end":125629,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125634,"byte_end":125637,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125642,"byte_end":125649,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125654,"byte_end":125682,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125687,"byte_end":125690,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125695,"byte_end":125729,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125734,"byte_end":125737,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125742,"byte_end":125778,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(u64::from_be(n), n)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125783,"byte_end":125821,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125826,"byte_end":125838,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_be(n), n.swap_bytes())","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125843,"byte_end":125894,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125899,"byte_end":125904,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125909,"byte_end":125916,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126436,"byte_end":126443,"line_start":257,"line_end":257,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Convert an integer from little endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from little endian to the target's endianness.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":125955,"byte_end":126024,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126029,"byte_end":126032,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126037,"byte_end":126111,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126116,"byte_end":126119,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126124,"byte_end":126138,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126143,"byte_end":126146,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126151,"byte_end":126158,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126163,"byte_end":126191,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126196,"byte_end":126199,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126204,"byte_end":126238,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126243,"byte_end":126246,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126251,"byte_end":126290,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(u64::from_le(n), n)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126295,"byte_end":126333,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126338,"byte_end":126350,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_le(n), n.swap_bytes())","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126355,"byte_end":126406,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126411,"byte_end":126416,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126421,"byte_end":126428,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126926,"byte_end":126931,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Convert `self` to big endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to big endian from the target's endianness.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126467,"byte_end":126529,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126534,"byte_end":126537,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126542,"byte_end":126616,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126621,"byte_end":126624,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126629,"byte_end":126643,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126648,"byte_end":126651,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126656,"byte_end":126663,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126668,"byte_end":126696,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126701,"byte_end":126704,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126709,"byte_end":126743,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126748,"byte_end":126751,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126756,"byte_end":126792,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(n.to_be(), n)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126797,"byte_end":126829,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126834,"byte_end":126846,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_be(), n.swap_bytes())","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126851,"byte_end":126896,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126901,"byte_end":126906,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126911,"byte_end":126918,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127417,"byte_end":127422,"line_start":295,"line_end":295,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Convert `self` to little endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to little endian from the target's endianness.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":126952,"byte_end":127017,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127022,"byte_end":127025,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127030,"byte_end":127104,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127109,"byte_end":127112,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127117,"byte_end":127131,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127136,"byte_end":127139,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127144,"byte_end":127151,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127156,"byte_end":127184,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127189,"byte_end":127192,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127197,"byte_end":127231,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127236,"byte_end":127239,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127244,"byte_end":127283,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(n.to_le(), n)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127288,"byte_end":127320,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127325,"byte_end":127337,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_le(), n.swap_bytes())","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127342,"byte_end":127387,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127392,"byte_end":127397,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127402,"byte_end":127409,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127660,"byte_end":127663,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127443,"byte_end":127515,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127520,"byte_end":127523,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127528,"byte_end":127542,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127547,"byte_end":127550,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127555,"byte_end":127562,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127567,"byte_end":127595,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127600,"byte_end":127603,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2i32.pow(4), 16);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127608,"byte_end":127640,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":127645,"byte_end":127652,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":572},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":615},{"krate":0,"index":633},{"krate":0,"index":655},{"krate":0,"index":712},{"krate":0,"index":734}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":573},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":599},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":601},{"krate":0,"index":2861},{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2879},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":603},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2907},{"krate":0,"index":605},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2931},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":2933},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2949},{"krate":0,"index":2951},{"krate":0,"index":2953},{"krate":0,"index":2955},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":2957},{"krate":0,"index":2959},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2965},{"krate":0,"index":2967},{"krate":0,"index":2969},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2975},{"krate":0,"index":2977},{"krate":0,"index":2979},{"krate":0,"index":613},{"krate":0,"index":2981},{"krate":0,"index":2983},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2995},{"krate":0,"index":2997},{"krate":0,"index":2999},{"krate":0,"index":3001},{"krate":0,"index":3003}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130464,"byte_end":130474,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":597}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that returns `None` instead of wrapping around on","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130368,"byte_end":130439,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130440,"byte_end":130453,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130616,"byte_end":130627,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"pub fn checked_add(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Adds two numbers, checking for overflow. If overflow happens, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ Adds two numbers, checking for overflow. If overflow happens, `None` is","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130515,"byte_end":130590,"line_start":6,"line_end":6,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130595,"byte_end":130608,"line_start":7,"line_end":7,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":599},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":131605,"byte_end":131615,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":600}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that returns `None` instead of wrapping around on underflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":131509,"byte_end":131594,"line_start":38,"line_end":38,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":131764,"byte_end":131775,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"pub fn checked_sub(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":" Subtracts two numbers, checking for underflow. If underflow happens,\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Subtracts two numbers, checking for underflow. If underflow happens,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":131656,"byte_end":131728,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":131733,"byte_end":131756,"line_start":41,"line_end":41,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":601},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132508,"byte_end":132518,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that returns `None` instead of wrapping around on underflow or","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132393,"byte_end":132483,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132484,"byte_end":132497,"line_start":62,"line_end":62,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132692,"byte_end":132703,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"pub fn checked_mul(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Multiplies two numbers, checking for underflow or overflow. If underflow\n or overflow happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Multiplies two numbers, checking for underflow or overflow. If underflow","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132559,"byte_end":132635,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ or overflow happens, `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132640,"byte_end":132684,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":603},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133476,"byte_end":133486,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":604}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs division that returns `None` instead of panicking on division by zero and instead of","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133321,"byte_end":133418,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ wrapping around on underflow and overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133419,"byte_end":133465,"line_start":86,"line_end":86,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133666,"byte_end":133677,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"pub fn checked_div(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":" Divides two numbers, checking for underflow, overflow and division by\n zero. If any of that happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Divides two numbers, checking for underflow, overflow and division by","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133527,"byte_end":133600,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ zero. If any of that happens, `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133605,"byte_end":133658,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":605},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134463,"byte_end":134473,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs an integral remainder that returns `None` instead of panicking on division by zero and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134295,"byte_end":134394,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/ instead of wrapping around on underflow and overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134395,"byte_end":134452,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":135267,"byte_end":135278,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"pub fn checked_rem(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Finds the remainder of dividing two numbers, checking for underflow, overflow and division\n by zero. If any of that happens, `None` is returned.","sig":null,"attributes":[{"value":"/ Finds the remainder of dividing two numbers, checking for underflow, overflow and division","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134514,"byte_end":134608,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ by zero. If any of that happens, `None` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134613,"byte_end":134669,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134674,"byte_end":134677,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134682,"byte_end":134696,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134701,"byte_end":134704,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134709,"byte_end":134716,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedRem;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134721,"byte_end":134752,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134757,"byte_end":134779,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134784,"byte_end":134787,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &7), Some(3));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134792,"byte_end":134850,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &-7), Some(3));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134855,"byte_end":134914,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &7), Some(-3));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134919,"byte_end":134979,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &-7), Some(-3));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134984,"byte_end":135045,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":135050,"byte_end":135053,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &0), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":135058,"byte_end":135113,"line_start":126,"line_end":126,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":135118,"byte_end":135121,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &1), Some(0));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":135126,"byte_end":135185,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &-1), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":135190,"byte_end":135247,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":135252,"byte_end":135259,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":608},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136242,"byte_end":136252,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":609}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[{"value":"/ Performs negation that returns `None` if the result can't be represented.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136154,"byte_end":136231,"line_start":161,"line_end":161,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136902,"byte_end":136913,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"pub fn checked_neg(&Self) -> Option<Self>","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" Negates a number, returning `None` for results that can't be represented, like signed `MIN`\n values that can't be positive, or non-zero unsigned values that can't be negative.","sig":null,"attributes":[{"value":"/ Negates a number, returning `None` for results that can't be represented, like signed `MIN`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136266,"byte_end":136361,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ values that can't be positive, or non-zero unsigned values that can't be negative.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136366,"byte_end":136452,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136457,"byte_end":136460,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136465,"byte_end":136479,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136484,"byte_end":136487,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136492,"byte_end":136499,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedNeg;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136504,"byte_end":136535,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136540,"byte_end":136562,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136567,"byte_end":136570,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_i32), Some(-1));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136575,"byte_end":136633,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&-1_i32), Some(1));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136638,"byte_end":136696,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&MIN), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136701,"byte_end":136753,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136758,"byte_end":136761,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&0_u32), Some(0));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136766,"byte_end":136823,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_u32), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136828,"byte_end":136882,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136887,"byte_end":136894,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":610},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137691,"byte_end":137701,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":611}],"decl_id":null,"docs":" Performs a left shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that returns `None` on shifts larger than","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137593,"byte_end":137660,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ the type width.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137661,"byte_end":137680,"line_start":199,"line_end":199,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":138260,"byte_end":138271,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"pub fn checked_shl(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":610},"children":[],"decl_id":null,"docs":" Checked shift left. Computes `self << rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift left. Computes `self << rhs`, returning `None`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137741,"byte_end":137805,"line_start":201,"line_end":201,"column_start":5,"column_end":69}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137810,"byte_end":137879,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137884,"byte_end":137887,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137892,"byte_end":137899,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShl;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137904,"byte_end":137935,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137940,"byte_end":137943,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137948,"byte_end":137972,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137977,"byte_end":137980,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 0),  Some(0x0001));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137985,"byte_end":138047,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 1),  Some(0x0002));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":138052,"byte_end":138114,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 15), Some(0x8000));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":138119,"byte_end":138181,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 16), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":138186,"byte_end":138240,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":138245,"byte_end":138252,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":613},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139333,"byte_end":139343,"line_start":246,"line_end":246,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":614}],"decl_id":null,"docs":" Performs a right shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that returns `None` on shifts larger than","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139234,"byte_end":139302,"line_start":244,"line_end":244,"column_start":1,"column_end":69}},{"value":"/ the type width.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139303,"byte_end":139322,"line_start":245,"line_end":245,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139903,"byte_end":139914,"line_start":260,"line_end":260,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"pub fn checked_shr(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Checked shift right. Computes `self >> rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift right. Computes `self >> rhs`, returning `None`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139383,"byte_end":139448,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139453,"byte_end":139522,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139527,"byte_end":139530,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139535,"byte_end":139542,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShr;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139547,"byte_end":139578,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139583,"byte_end":139586,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139591,"byte_end":139615,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139620,"byte_end":139623,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 0),  Some(0x8000));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139628,"byte_end":139690,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 1),  Some(0x4000));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139695,"byte_end":139757,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 15), Some(0x0001));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139762,"byte_end":139824,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 16), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139829,"byte_end":139883,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139888,"byte_end":139895,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":615},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":629}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":616},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140703,"byte_end":140706,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[{"value":"/ Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140604,"byte_end":140692,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":617},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140766,"byte_end":140772,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140713,"byte_end":140756,"line_start":3,"line_end":3,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":141051,"byte_end":141054,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"pub fn inv(Self) -> Self::Output","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of `self`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140779,"byte_end":140828,"line_start":6,"line_end":6,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140833,"byte_end":140836,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140841,"byte_end":140855,"line_start":8,"line_end":8,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140860,"byte_end":140863,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140868,"byte_end":140875,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ use std::f64::INFINITY;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140880,"byte_end":140907,"line_start":11,"line_end":11,"column_start":5,"column_end":32}},{"value":"/ use num_traits::Inv;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140912,"byte_end":140936,"line_start":12,"line_end":12,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140941,"byte_end":140944,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(7.0.inv() * 7.0, 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140949,"byte_end":140986,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((-0.0).inv(), -INFINITY);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":140991,"byte_end":141031,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/inv.rs","byte_start":141036,"byte_end":141043,"line_start":16,"line_end":16,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":633},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":3038},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":3041},{"krate":0,"index":3043},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":634},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142179,"byte_end":142185,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638}],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141536,"byte_end":141608,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141609,"byte_end":141681,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141682,"byte_end":141685,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141686,"byte_end":141760,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141761,"byte_end":141827,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141828,"byte_end":141831,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that `A` and `B` are `Self` by default, but this is not mandatory.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141832,"byte_end":141907,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141908,"byte_end":141911,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141912,"byte_end":141925,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141926,"byte_end":141929,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141930,"byte_end":141937,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141938,"byte_end":141955,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141956,"byte_end":141959,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let m = 10.0_f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141960,"byte_end":141981,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ let x = 4.0_f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":141982,"byte_end":142002,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ let b = 60.0_f32;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142003,"byte_end":142024,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142025,"byte_end":142028,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // 100.0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142029,"byte_end":142041,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142042,"byte_end":142103,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142104,"byte_end":142107,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(abs_difference <= 100.0 * f32::EPSILON);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142108,"byte_end":142160,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142161,"byte_end":142168,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":637},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142283,"byte_end":142289,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142212,"byte_end":142273,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142350,"byte_end":142357,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"pub fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142296,"byte_end":142342,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":639},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142455,"byte_end":142467,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":642}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[{"value":"/ The fused multiply-add assignment operation.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142396,"byte_end":142444,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142548,"byte_end":142562,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"pub fn mul_add_assign(&mut Self, A, B)","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mul_add.rs","byte_start":142494,"byte_end":142540,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":655},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"overflowing","qualname":"::ops::overflowing","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3087},{"krate":0,"index":708},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3111},{"krate":0,"index":710},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3135}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":706},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":145937,"byte_end":145951,"line_start":19,"line_end":19,"column_start":11,"column_end":25},"name":"OverflowingAdd","qualname":"::ops::overflowing::OverflowingAdd","value":"OverflowingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":707}],"decl_id":null,"docs":" Performs addition with a flag for overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition with a flag for overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":145879,"byte_end":145926,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":146185,"byte_end":146200,"line_start":22,"line_end":22,"column_start":8,"column_end":23},"name":"overflowing_add","qualname":"::ops::overflowing::OverflowingAdd::overflowing_add","value":"pub fn overflowing_add(&Self, &Self) -> (Self, bool)","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\n If an overflow would have occurred then the wrapped value is returned.\n","sig":null,"attributes":[{"value":"/ Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":145992,"byte_end":146098,"line_start":20,"line_end":20,"column_start":5,"column_end":111}},{"value":"/ If an overflow would have occurred then the wrapped value is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":146103,"byte_end":146177,"line_start":21,"line_end":21,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":708},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":147024,"byte_end":147038,"line_start":42,"line_end":42,"column_start":11,"column_end":25},"name":"OverflowingSub","qualname":"::ops::overflowing::OverflowingSub","value":"OverflowingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":709}],"decl_id":null,"docs":" Performs substraction with a flag for overflow.\n","sig":null,"attributes":[{"value":"/ Performs substraction with a flag for overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":146962,"byte_end":147013,"line_start":41,"line_end":41,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":147279,"byte_end":147294,"line_start":45,"line_end":45,"column_start":8,"column_end":23},"name":"overflowing_sub","qualname":"::ops::overflowing::OverflowingSub::overflowing_sub","value":"pub fn overflowing_sub(&Self, &Self) -> (Self, bool)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\n If an overflow would have occurred then the wrapped value is returned.\n","sig":null,"attributes":[{"value":"/ Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":147079,"byte_end":147192,"line_start":43,"line_end":43,"column_start":5,"column_end":118}},{"value":"/ If an overflow would have occurred then the wrapped value is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":147197,"byte_end":147271,"line_start":44,"line_end":44,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":710},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":148120,"byte_end":148134,"line_start":65,"line_end":65,"column_start":11,"column_end":25},"name":"OverflowingMul","qualname":"::ops::overflowing::OverflowingMul","value":"OverflowingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":711}],"decl_id":null,"docs":" Performs multiplication with a flag for overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication with a flag for overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":148056,"byte_end":148109,"line_start":64,"line_end":64,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":148372,"byte_end":148387,"line_start":68,"line_end":68,"column_start":8,"column_end":23},"name":"overflowing_mul","qualname":"::ops::overflowing::OverflowingMul::overflowing_mul","value":"pub fn overflowing_mul(&Self, &Self) -> (Self, bool)","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\n If an overflow would have occurred then the wrapped value is returned.\n","sig":null,"attributes":[{"value":"/ Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":148175,"byte_end":148285,"line_start":66,"line_end":66,"column_start":5,"column_end":115}},{"value":"/ If an overflow would have occurred then the wrapped value is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":148290,"byte_end":148364,"line_start":67,"line_end":67,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":712},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":3137},{"krate":0,"index":3140},{"krate":0,"index":3143},{"krate":0,"index":3146},{"krate":0,"index":3149},{"krate":0,"index":3152},{"krate":0,"index":3155},{"krate":0,"index":3158},{"krate":0,"index":3161},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3189},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3195},{"krate":0,"index":730},{"krate":0,"index":3197},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":732},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":3239},{"krate":0,"index":3241},{"krate":0,"index":3243}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":723},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":150029,"byte_end":150039,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":" Saturating math operations. Deprecated, use `SaturatingAdd`, `SaturatingSub` and\n `SaturatingMul` instead.\n","sig":null,"attributes":[{"value":"/ Saturating math operations. Deprecated, use `SaturatingAdd`, `SaturatingSub` and","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":149905,"byte_end":149989,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ `SaturatingMul` instead.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":149990,"byte_end":150018,"line_start":4,"line_end":4,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":150165,"byte_end":150179,"line_start":8,"line_end":8,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Saturating addition operator.\n Returns a+b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition operator.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":150046,"byte_end":150079,"line_start":6,"line_end":6,"column_start":5,"column_end":38}},{"value":"/ Returns a+b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":150084,"byte_end":150157,"line_start":7,"line_end":7,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":150331,"byte_end":150345,"line_start":12,"line_end":12,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Saturating subtraction operator.\n Returns a-b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction operator.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":150209,"byte_end":150245,"line_start":10,"line_end":10,"column_start":5,"column_end":41}},{"value":"/ Returns a-b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":150250,"byte_end":150323,"line_start":11,"line_end":11,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":728},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":151306,"byte_end":151319,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"SaturatingAdd","qualname":"::ops::saturating::SaturatingAdd","value":"SaturatingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":729}],"decl_id":null,"docs":" Performs addition that saturates at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Performs addition that saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":151213,"byte_end":151295,"line_start":46,"line_end":46,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":151486,"byte_end":151500,"line_start":50,"line_end":50,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::SaturatingAdd::saturating_add","value":"pub fn saturating_add(&Self, &Self) -> Self","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Saturating addition. Computes `self + other`, saturating at the relevant high or low boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Saturating addition. Computes `self + other`, saturating at the relevant high or low boundary of","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":151360,"byte_end":151460,"line_start":48,"line_end":48,"column_start":5,"column_end":105}},{"value":"/ the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":151465,"byte_end":151478,"line_start":49,"line_end":49,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":730},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":152314,"byte_end":152327,"line_start":70,"line_end":70,"column_start":11,"column_end":24},"name":"SaturatingSub","qualname":"::ops::saturating::SaturatingSub","value":"SaturatingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":731}],"decl_id":null,"docs":" Performs subtraction that saturates at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":152218,"byte_end":152303,"line_start":69,"line_end":69,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":152497,"byte_end":152511,"line_start":73,"line_end":73,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::SaturatingSub::saturating_sub","value":"pub fn saturating_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Saturating subtraction. Computes `self - other`, saturating at the relevant high or low boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction. Computes `self - other`, saturating at the relevant high or low boundary of","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":152368,"byte_end":152471,"line_start":71,"line_end":71,"column_start":5,"column_end":108}},{"value":"/ the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":152476,"byte_end":152489,"line_start":72,"line_end":72,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":732},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":153328,"byte_end":153341,"line_start":93,"line_end":93,"column_start":11,"column_end":24},"name":"SaturatingMul","qualname":"::ops::saturating::SaturatingMul","value":"SaturatingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":733}],"decl_id":null,"docs":" Performs multiplication that saturates at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":153229,"byte_end":153317,"line_start":92,"line_end":92,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":153514,"byte_end":153528,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"saturating_mul","qualname":"::ops::saturating::SaturatingMul::saturating_mul","value":"pub fn saturating_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Saturating multiplication. Computes `self * other`, saturating at the relevant high or low boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Saturating multiplication. Computes `self * other`, saturating at the relevant high or low boundary of","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":153382,"byte_end":153488,"line_start":94,"line_end":94,"column_start":5,"column_end":111}},{"value":"/ the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":153493,"byte_end":153506,"line_start":95,"line_end":95,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":734},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":760},{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":762},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3325},{"krate":0,"index":3327},{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":770},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3373},{"krate":0,"index":3375},{"krate":0,"index":3377},{"krate":0,"index":3379},{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3385},{"krate":0,"index":3387},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":758},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":155736,"byte_end":155747,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":759}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that wraps around on overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":155673,"byte_end":155725,"line_start":23,"line_end":23,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":155906,"byte_end":155918,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"pub fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":155788,"byte_end":155880,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":155885,"byte_end":155898,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":760},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":156630,"byte_end":156641,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":761}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that wraps around on overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":156564,"byte_end":156619,"line_start":46,"line_end":46,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":156803,"byte_end":156815,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"pub fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":156682,"byte_end":156774,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ of the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":156779,"byte_end":156795,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":762},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":157530,"byte_end":157541,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":763}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that wraps around on overflow.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":157461,"byte_end":157519,"line_start":69,"line_end":69,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":157706,"byte_end":157718,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"pub fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":157582,"byte_end":157677,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ of the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":157682,"byte_end":157698,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":765},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158670,"byte_end":158681,"line_start":104,"line_end":104,"column_start":11,"column_end":22},"name":"WrappingNeg","qualname":"::ops::wrapping::WrappingNeg","value":"WrappingNeg: Sized","parent":null,"children":[{"krate":0,"index":766}],"decl_id":null,"docs":" Performs a negation that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a negation that does not panic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158615,"byte_end":158659,"line_start":103,"line_end":103,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159467,"byte_end":159479,"line_start":122,"line_end":122,"column_start":8,"column_end":20},"name":"wrapping_neg","qualname":"::ops::wrapping::WrappingNeg::wrapping_neg","value":"pub fn wrapping_neg(&Self) -> Self","parent":{"krate":0,"index":765},"children":[],"decl_id":null,"docs":" Wrapping (modular) negation. Computes `-self`,\n wrapping around at the boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping (modular) negation. Computes `-self`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158695,"byte_end":158745,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ wrapping around at the boundary of the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158750,"byte_end":158798,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158803,"byte_end":158806,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Since unsigned types do not have negative equivalents","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158811,"byte_end":158868,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/ all applications of this function will wrap (except for `-0`).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158873,"byte_end":158939,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ For values smaller than the corresponding signed type's maximum","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158944,"byte_end":159011,"line_start":110,"line_end":110,"column_start":5,"column_end":72}},{"value":"/ the result is the same as casting the corresponding signed value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159016,"byte_end":159085,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ Any larger values are equivalent to `MAX + 1 - (val - MAX - 1)` where","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159090,"byte_end":159163,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ `MAX` is the corresponding signed type's maximum.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159168,"byte_end":159221,"line_start":113,"line_end":113,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159226,"byte_end":159229,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159234,"byte_end":159241,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingNeg;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159246,"byte_end":159278,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159283,"byte_end":159286,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(100i8.wrapping_neg(), -100);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159291,"byte_end":159334,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-100i8).wrapping_neg(), 100);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159339,"byte_end":159384,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/ assert_eq!((-128i8).wrapping_neg(), -128); // wrapped!","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159389,"byte_end":159447,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":159452,"byte_end":159459,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":768},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160509,"byte_end":160520,"line_start":152,"line_end":152,"column_start":11,"column_end":22},"name":"WrappingShl","qualname":"::ops::wrapping::WrappingShl","value":"WrappingShl: Sized + Shl<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":769}],"decl_id":null,"docs":" Performs a left shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that does not panic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160452,"byte_end":160498,"line_start":151,"line_end":151,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161127,"byte_end":161139,"line_start":167,"line_end":167,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::ops::wrapping::WrappingShl::wrapping_shl","value":"pub fn wrapping_shl(&Self, u32) -> Self","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-left; yields `self << mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-left; yields `self << mask(rhs)`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160562,"byte_end":160624,"line_start":153,"line_end":153,"column_start":5,"column_end":67}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160629,"byte_end":160693,"line_start":154,"line_end":154,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160698,"byte_end":160753,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160758,"byte_end":160761,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160766,"byte_end":160773,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShl;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160778,"byte_end":160810,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160815,"byte_end":160818,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160823,"byte_end":160847,"line_start":160,"line_end":160,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160852,"byte_end":160855,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 0),  0x0001);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160860,"byte_end":160918,"line_start":162,"line_end":162,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 1),  0x0002);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160923,"byte_end":160981,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 15), 0x8000);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160986,"byte_end":161044,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 16), 0x0001);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161049,"byte_end":161107,"line_start":165,"line_end":165,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161112,"byte_end":161119,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":770},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161915,"byte_end":161926,"line_start":187,"line_end":187,"column_start":11,"column_end":22},"name":"WrappingShr","qualname":"::ops::wrapping::WrappingShr","value":"WrappingShr: Sized + Shr<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":771}],"decl_id":null,"docs":" Performs a right shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that does not panic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161857,"byte_end":161904,"line_start":186,"line_end":186,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162534,"byte_end":162546,"line_start":202,"line_end":202,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::ops::wrapping::WrappingShr::wrapping_shr","value":"pub fn wrapping_shr(&Self, u32) -> Self","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-right; yields `self >> mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-right; yields `self >> mask(rhs)`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161968,"byte_end":162031,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162036,"byte_end":162100,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162105,"byte_end":162160,"line_start":190,"line_end":190,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162165,"byte_end":162168,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162173,"byte_end":162180,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShr;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162185,"byte_end":162217,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162222,"byte_end":162225,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162230,"byte_end":162254,"line_start":195,"line_end":195,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162259,"byte_end":162262,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 0),  0x8000);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162267,"byte_end":162325,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 1),  0x4000);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162330,"byte_end":162388,"line_start":198,"line_end":198,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 15), 0x0001);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162393,"byte_end":162451,"line_start":199,"line_end":199,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 16), 0x8000);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162456,"byte_end":162514,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":162519,"byte_end":162526,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":790},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":808},{"krate":0,"index":3389},{"krate":0,"index":3392},{"krate":0,"index":3396},{"krate":0,"index":3400},{"krate":0,"index":3405},{"krate":0,"index":3408},{"krate":0,"index":3412},{"krate":0,"index":3416},{"krate":0,"index":3421},{"krate":0,"index":3424},{"krate":0,"index":3428},{"krate":0,"index":3432},{"krate":0,"index":3437},{"krate":0,"index":3440},{"krate":0,"index":3444},{"krate":0,"index":3448},{"krate":0,"index":3453},{"krate":0,"index":3456},{"krate":0,"index":3460},{"krate":0,"index":3464},{"krate":0,"index":3469},{"krate":0,"index":3472},{"krate":0,"index":3476},{"krate":0,"index":3480},{"krate":0,"index":3485},{"krate":0,"index":3488},{"krate":0,"index":3492},{"krate":0,"index":3496},{"krate":0,"index":3501},{"krate":0,"index":3504},{"krate":0,"index":3508},{"krate":0,"index":3512},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3524},{"krate":0,"index":3528},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":3540},{"krate":0,"index":3544},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3556},{"krate":0,"index":3560},{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":3572},{"krate":0,"index":3576},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3588},{"krate":0,"index":3592},{"krate":0,"index":3597},{"krate":0,"index":3600},{"krate":0,"index":3604},{"krate":0,"index":3608},{"krate":0,"index":3613},{"krate":0,"index":3616},{"krate":0,"index":3620},{"krate":0,"index":3624},{"krate":0,"index":3629},{"krate":0,"index":3632},{"krate":0,"index":3636},{"krate":0,"index":3640},{"krate":0,"index":3645},{"krate":0,"index":3648},{"krate":0,"index":3652},{"krate":0,"index":3656},{"krate":0,"index":3661},{"krate":0,"index":3664},{"krate":0,"index":3668},{"krate":0,"index":3672},{"krate":0,"index":3677},{"krate":0,"index":3680},{"krate":0,"index":3684},{"krate":0,"index":3688},{"krate":0,"index":3693},{"krate":0,"index":3696},{"krate":0,"index":3700},{"krate":0,"index":3704},{"krate":0,"index":3709},{"krate":0,"index":3712},{"krate":0,"index":3716},{"krate":0,"index":3720},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3732},{"krate":0,"index":3736},{"krate":0,"index":3741},{"krate":0,"index":3744},{"krate":0,"index":3748},{"krate":0,"index":3752},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3764},{"krate":0,"index":3768},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3780},{"krate":0,"index":3784},{"krate":0,"index":3789},{"krate":0,"index":3792},{"krate":0,"index":3796},{"krate":0,"index":3800},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3812},{"krate":0,"index":3816},{"krate":0,"index":3821},{"krate":0,"index":3824},{"krate":0,"index":3828},{"krate":0,"index":3832},{"krate":0,"index":3837},{"krate":0,"index":3840},{"krate":0,"index":3844},{"krate":0,"index":3848},{"krate":0,"index":3853},{"krate":0,"index":3856},{"krate":0,"index":3860},{"krate":0,"index":3864},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3876},{"krate":0,"index":3880},{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3892},{"krate":0,"index":3896},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3908},{"krate":0,"index":3912},{"krate":0,"index":3917},{"krate":0,"index":3920},{"krate":0,"index":3924},{"krate":0,"index":3928},{"krate":0,"index":3933},{"krate":0,"index":3936},{"krate":0,"index":3940},{"krate":0,"index":3944},{"krate":0,"index":3949},{"krate":0,"index":3952},{"krate":0,"index":3956},{"krate":0,"index":3960},{"krate":0,"index":3965},{"krate":0,"index":3968},{"krate":0,"index":3972},{"krate":0,"index":3976},{"krate":0,"index":3981},{"krate":0,"index":3984},{"krate":0,"index":3988},{"krate":0,"index":3992},{"krate":0,"index":3997},{"krate":0,"index":4000},{"krate":0,"index":4004},{"krate":0,"index":4008},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4020},{"krate":0,"index":4024},{"krate":0,"index":4029},{"krate":0,"index":4032},{"krate":0,"index":4036},{"krate":0,"index":4040},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":4052},{"krate":0,"index":4056},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4068},{"krate":0,"index":4072},{"krate":0,"index":4077},{"krate":0,"index":4080},{"krate":0,"index":4084},{"krate":0,"index":4088},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4100},{"krate":0,"index":4104},{"krate":0,"index":4109},{"krate":0,"index":4112},{"krate":0,"index":4116},{"krate":0,"index":4120},{"krate":0,"index":4125},{"krate":0,"index":4128},{"krate":0,"index":4132},{"krate":0,"index":4136},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4148},{"krate":0,"index":4152},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4164},{"krate":0,"index":4168},{"krate":0,"index":4173},{"krate":0,"index":4176},{"krate":0,"index":4180},{"krate":0,"index":4184},{"krate":0,"index":4189},{"krate":0,"index":4192},{"krate":0,"index":4196},{"krate":0,"index":4200},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4212},{"krate":0,"index":4216},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4228},{"krate":0,"index":4232},{"krate":0,"index":4237},{"krate":0,"index":4240},{"krate":0,"index":4244},{"krate":0,"index":4248},{"krate":0,"index":4253},{"krate":0,"index":4256},{"krate":0,"index":4260},{"krate":0,"index":4264},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4276},{"krate":0,"index":4280},{"krate":0,"index":4285},{"krate":0,"index":4288},{"krate":0,"index":4292},{"krate":0,"index":4296},{"krate":0,"index":4301},{"krate":0,"index":4304},{"krate":0,"index":4308},{"krate":0,"index":4312},{"krate":0,"index":4317},{"krate":0,"index":4320},{"krate":0,"index":4324},{"krate":0,"index":4328},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4340},{"krate":0,"index":4344},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4356},{"krate":0,"index":4360},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4372},{"krate":0,"index":4376},{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":4388},{"krate":0,"index":4392},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4404},{"krate":0,"index":4408},{"krate":0,"index":4413},{"krate":0,"index":4416},{"krate":0,"index":4420},{"krate":0,"index":4424},{"krate":0,"index":4429},{"krate":0,"index":4432},{"krate":0,"index":4436},{"krate":0,"index":4440},{"krate":0,"index":4445},{"krate":0,"index":4448},{"krate":0,"index":4452},{"krate":0,"index":4456},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4468},{"krate":0,"index":4472},{"krate":0,"index":4477},{"krate":0,"index":4480},{"krate":0,"index":4484},{"krate":0,"index":4488},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4500},{"krate":0,"index":4504},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4516},{"krate":0,"index":4520},{"krate":0,"index":4525},{"krate":0,"index":4528},{"krate":0,"index":4532},{"krate":0,"index":4536},{"krate":0,"index":809},{"krate":0,"index":816},{"krate":0,"index":818}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":804},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166766,"byte_end":166769,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[{"value":"/ Binary operator for raising a value to a power.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166704,"byte_end":166755,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":806},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166834,"byte_end":166840,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166781,"byte_end":166824,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":167029,"byte_end":167032,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"pub fn pow(Self, RHS) -> Self::Output","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":" Returns `self` to the power `rhs`.","sig":null,"attributes":[{"value":"/ Returns `self` to the power `rhs`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166847,"byte_end":166885,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166890,"byte_end":166893,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166898,"byte_end":166912,"line_start":12,"line_end":12,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166917,"byte_end":166920,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166925,"byte_end":166932,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Pow;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166937,"byte_end":166961,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Pow::pow(10u32, 2u32), 100);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":166966,"byte_end":167009,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":167014,"byte_end":167021,"line_start":17,"line_end":17,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":816},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171859,"byte_end":171862,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"pub fn pow<T: Clone + One + Mul<T, Output = T>>(T, usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, using exponentiation by squaring.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171475,"byte_end":171548,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171549,"byte_end":171552,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`pow(0, 0)`) returns `1`. Mathematically this is undefined.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171553,"byte_end":171634,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171635,"byte_end":171638,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171639,"byte_end":171652,"line_start":179,"line_end":179,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171653,"byte_end":171656,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171657,"byte_end":171668,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ use num_traits::pow;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171669,"byte_end":171693,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171694,"byte_end":171697,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pow(2i8, 4), 16);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171698,"byte_end":171730,"line_start":184,"line_end":184,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(pow(6u8, 3), 216);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171731,"byte_end":171764,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(pow(0u8, 0), 1); // Be aware if this case affects you","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171765,"byte_end":171833,"line_start":186,"line_end":186,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171834,"byte_end":171841,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":171842,"byte_end":171851,"line_start":188,"line_end":188,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":818},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172868,"byte_end":172879,"line_start":230,"line_end":230,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"pub fn checked_pow<T: Clone + One + CheckedMul>(T, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, returning `None` if an overflow occurred.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172316,"byte_end":172397,"line_start":213,"line_end":213,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172398,"byte_end":172401,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`checked_pow(0, 0)`) returns `Some(1)`. Mathematically this is undefined.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172402,"byte_end":172497,"line_start":215,"line_end":215,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172498,"byte_end":172501,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Otherwise same as the `pow` function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172502,"byte_end":172543,"line_start":217,"line_end":217,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172544,"byte_end":172547,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172548,"byte_end":172561,"line_start":219,"line_end":219,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172562,"byte_end":172565,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172566,"byte_end":172577,"line_start":221,"line_end":221,"column_start":1,"column_end":12}},{"value":"/ use num_traits::checked_pow;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172578,"byte_end":172610,"line_start":222,"line_end":222,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172611,"byte_end":172614,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(checked_pow(2i8, 4), Some(16));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172615,"byte_end":172661,"line_start":224,"line_end":224,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(checked_pow(7i8, 8), None);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172662,"byte_end":172704,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(checked_pow(7u32, 8), Some(5_764_801));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172705,"byte_end":172759,"line_start":226,"line_end":226,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(checked_pow(0u32, 0), Some(1)); // Be aware if this case affect you","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172760,"byte_end":172842,"line_start":227,"line_end":227,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172843,"byte_end":172850,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs","byte_start":172851,"byte_end":172860,"line_start":229,"line_end":229,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":821},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"real","qualname":"::real","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":883}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":173579,"byte_end":173626,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":835},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174223,"byte_end":174227,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"name":"Real","qualname":"::real::Real","value":"Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[{"value":"/ A trait for real number types that do not necessarily have","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":173823,"byte_end":173885,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ floating-point-specific characteristics such as NaN and infinity.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":173886,"byte_end":173955,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":173956,"byte_end":173959,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [this Wikipedia article](https://en.wikipedia.org/wiki/Real_data_type)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":173960,"byte_end":174038,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ for a list of data types that could meaningfully implement this trait.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174039,"byte_end":174113,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174114,"byte_end":174117,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174118,"byte_end":174212,"line_start":16,"line_end":16,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174544,"byte_end":174553,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"min_value","qualname":"::real::Real::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174290,"byte_end":174357,"line_start":18,"line_end":18,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174362,"byte_end":174365,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174370,"byte_end":174377,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174382,"byte_end":174413,"line_start":21,"line_end":21,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174418,"byte_end":174435,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174440,"byte_end":174443,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_value();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174448,"byte_end":174483,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174488,"byte_end":174491,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174496,"byte_end":174524,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174529,"byte_end":174536,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174856,"byte_end":174874,"line_start":40,"line_end":40,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::real::Real::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174570,"byte_end":174651,"line_start":30,"line_end":30,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174656,"byte_end":174659,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174664,"byte_end":174671,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174676,"byte_end":174707,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174712,"byte_end":174729,"line_start":34,"line_end":34,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174734,"byte_end":174737,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_positive_value();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174742,"byte_end":174786,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174791,"byte_end":174794,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174799,"byte_end":174836,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174841,"byte_end":174848,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175255,"byte_end":175262,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::real::Real::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174891,"byte_end":174935,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174940,"byte_end":174943,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174948,"byte_end":174955,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174960,"byte_end":174991,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174996,"byte_end":175013,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175018,"byte_end":175021,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::epsilon();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175026,"byte_end":175059,"line_start":48,"line_end":48,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175064,"byte_end":175067,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175072,"byte_end":175104,"line_start":50,"line_end":50,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175109,"byte_end":175116,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175121,"byte_end":175124,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175129,"byte_end":175141,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175146,"byte_end":175149,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175154,"byte_end":175220,"line_start":55,"line_end":55,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175225,"byte_end":175247,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175524,"byte_end":175533,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"max_value","qualname":"::real::Real::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175279,"byte_end":175345,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175350,"byte_end":175353,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175358,"byte_end":175365,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175370,"byte_end":175401,"line_start":62,"line_end":62,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175406,"byte_end":175423,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175428,"byte_end":175431,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::max_value();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175436,"byte_end":175471,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175476,"byte_end":175504,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175509,"byte_end":175516,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175820,"byte_end":175825,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"floor","qualname":"::real::Real::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175550,"byte_end":175613,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175618,"byte_end":175621,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175626,"byte_end":175633,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175638,"byte_end":175669,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175674,"byte_end":175677,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175682,"byte_end":175699,"line_start":75,"line_end":75,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175704,"byte_end":175720,"line_start":76,"line_end":76,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175725,"byte_end":175728,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175733,"byte_end":175764,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175769,"byte_end":175800,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175805,"byte_end":175812,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176118,"byte_end":176122,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"ceil","qualname":"::real::Real::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175846,"byte_end":175913,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175918,"byte_end":175921,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175926,"byte_end":175933,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175938,"byte_end":175969,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175974,"byte_end":175977,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":175982,"byte_end":175999,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176004,"byte_end":176020,"line_start":89,"line_end":89,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176025,"byte_end":176028,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176033,"byte_end":176063,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176068,"byte_end":176098,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176103,"byte_end":176110,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176441,"byte_end":176446,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"round","qualname":"::real::Real::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176143,"byte_end":176218,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176223,"byte_end":176233,"line_start":97,"line_end":97,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176238,"byte_end":176241,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176246,"byte_end":176253,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176258,"byte_end":176289,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176294,"byte_end":176297,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176302,"byte_end":176318,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176323,"byte_end":176340,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176345,"byte_end":176348,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176353,"byte_end":176384,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176389,"byte_end":176421,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176426,"byte_end":176433,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176715,"byte_end":176720,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"trunc","qualname":"::real::Real::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176467,"byte_end":176507,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176512,"byte_end":176515,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176520,"byte_end":176527,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176532,"byte_end":176563,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176568,"byte_end":176571,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176576,"byte_end":176592,"line_start":115,"line_end":115,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176597,"byte_end":176614,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176619,"byte_end":176622,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176627,"byte_end":176658,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176663,"byte_end":176695,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176700,"byte_end":176707,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177121,"byte_end":177126,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"fract","qualname":"::real::Real::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176741,"byte_end":176785,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176790,"byte_end":176793,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176798,"byte_end":176805,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176810,"byte_end":176841,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176846,"byte_end":176849,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176854,"byte_end":176870,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176875,"byte_end":176892,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176897,"byte_end":176948,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":176953,"byte_end":177007,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177012,"byte_end":177015,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177020,"byte_end":177058,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177063,"byte_end":177101,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177106,"byte_end":177113,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177681,"byte_end":177684,"line_start":156,"line_end":156,"column_start":8,"column_end":11},"name":"abs","qualname":"::real::Real::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177147,"byte_end":177219,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177224,"byte_end":177253,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177258,"byte_end":177261,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177266,"byte_end":177273,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177278,"byte_end":177309,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177314,"byte_end":177331,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177336,"byte_end":177339,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177344,"byte_end":177360,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177365,"byte_end":177382,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177387,"byte_end":177390,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177395,"byte_end":177442,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177447,"byte_end":177497,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177502,"byte_end":177505,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177510,"byte_end":177548,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177553,"byte_end":177591,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177596,"byte_end":177599,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert!(::num_traits::Float::is_nan(f64::NAN.abs()));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177604,"byte_end":177661,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177666,"byte_end":177673,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178256,"byte_end":178262,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"signum","qualname":"::real::Real::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177705,"byte_end":177761,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177766,"byte_end":177769,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177774,"byte_end":177842,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177847,"byte_end":177920,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177925,"byte_end":177977,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177982,"byte_end":177985,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":177990,"byte_end":177997,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178002,"byte_end":178033,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178038,"byte_end":178055,"line_start":166,"line_end":166,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178060,"byte_end":178063,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178068,"byte_end":178084,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178089,"byte_end":178092,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178097,"byte_end":178129,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178134,"byte_end":178183,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178188,"byte_end":178191,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178196,"byte_end":178236,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178241,"byte_end":178248,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178743,"byte_end":178759,"line_start":193,"line_end":193,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::real::Real::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178283,"byte_end":178342,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178347,"byte_end":178415,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178420,"byte_end":178423,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178428,"byte_end":178435,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178440,"byte_end":178471,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178476,"byte_end":178493,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178498,"byte_end":178501,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178506,"byte_end":178539,"line_start":184,"line_end":184,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178544,"byte_end":178547,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178552,"byte_end":178568,"line_start":186,"line_end":186,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178573,"byte_end":178590,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178595,"byte_end":178598,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178603,"byte_end":178637,"line_start":189,"line_end":189,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178642,"byte_end":178677,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178682,"byte_end":178723,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178728,"byte_end":178735,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179236,"byte_end":179252,"line_start":211,"line_end":211,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::real::Real::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178780,"byte_end":178839,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178844,"byte_end":178917,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178922,"byte_end":178925,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178930,"byte_end":178937,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178942,"byte_end":178973,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":178978,"byte_end":178995,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179000,"byte_end":179003,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179008,"byte_end":179036,"line_start":202,"line_end":202,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179041,"byte_end":179044,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179049,"byte_end":179065,"line_start":204,"line_end":204,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179070,"byte_end":179087,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179092,"byte_end":179095,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179100,"byte_end":179135,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179140,"byte_end":179174,"line_start":208,"line_end":208,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179179,"byte_end":179216,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179221,"byte_end":179228,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179869,"byte_end":179876,"line_start":231,"line_end":231,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::real::Real::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179273,"byte_end":179345,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179350,"byte_end":179422,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179427,"byte_end":179430,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179435,"byte_end":179509,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179514,"byte_end":179580,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179585,"byte_end":179588,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179593,"byte_end":179600,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179605,"byte_end":179636,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179641,"byte_end":179644,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179649,"byte_end":179666,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179671,"byte_end":179687,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179692,"byte_end":179709,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179714,"byte_end":179717,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179722,"byte_end":179734,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179739,"byte_end":179800,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179805,"byte_end":179808,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179813,"byte_end":179849,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179854,"byte_end":179861,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180180,"byte_end":180185,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"recip","qualname":"::real::Real::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179915,"byte_end":179968,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179973,"byte_end":179976,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179981,"byte_end":179988,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":179993,"byte_end":180024,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180029,"byte_end":180032,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180037,"byte_end":180053,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180058,"byte_end":180111,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180116,"byte_end":180119,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180124,"byte_end":180160,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180165,"byte_end":180172,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180527,"byte_end":180531,"line_start":257,"line_end":257,"column_start":8,"column_end":12},"name":"powi","qualname":"::real::Real::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180206,"byte_end":180245,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180250,"byte_end":180253,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180258,"byte_end":180319,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180324,"byte_end":180327,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180332,"byte_end":180339,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180344,"byte_end":180375,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180380,"byte_end":180383,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180388,"byte_end":180404,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180409,"byte_end":180458,"line_start":253,"line_end":253,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180463,"byte_end":180466,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180471,"byte_end":180507,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180512,"byte_end":180519,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180812,"byte_end":180816,"line_start":269,"line_end":269,"column_start":8,"column_end":12},"name":"powf","qualname":"::real::Real::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Raise a number to a real number power.","sig":null,"attributes":[{"value":"/ Raise a number to a real number power.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180560,"byte_end":180602,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180607,"byte_end":180610,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180615,"byte_end":180622,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180627,"byte_end":180658,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180663,"byte_end":180666,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180671,"byte_end":180687,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180692,"byte_end":180743,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180748,"byte_end":180751,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180756,"byte_end":180792,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180797,"byte_end":180804,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181408,"byte_end":181412,"line_start":290,"line_end":290,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::real::Real::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180846,"byte_end":180883,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180888,"byte_end":180891,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative floating-point number.  ","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180896,"byte_end":180960,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180965,"byte_end":180968,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180973,"byte_end":180985,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180990,"byte_end":180993,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the implementing type doesn't support NaN, this method should panic if `self < 0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":180998,"byte_end":181087,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181092,"byte_end":181095,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181100,"byte_end":181107,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181112,"byte_end":181143,"line_start":280,"line_end":280,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181148,"byte_end":181151,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181156,"byte_end":181179,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181184,"byte_end":181208,"line_start":283,"line_end":283,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181213,"byte_end":181216,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181221,"byte_end":181276,"line_start":285,"line_end":285,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181281,"byte_end":181284,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181289,"byte_end":181325,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/ assert!(::num_traits::Float::is_nan(negative.sqrt()));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181330,"byte_end":181388,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181393,"byte_end":181400,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181767,"byte_end":181770,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"exp","qualname":"::real::Real::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181433,"byte_end":181484,"line_start":292,"line_end":292,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181489,"byte_end":181492,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181497,"byte_end":181504,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181509,"byte_end":181540,"line_start":295,"line_end":295,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181545,"byte_end":181548,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181553,"byte_end":181571,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181576,"byte_end":181586,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181591,"byte_end":181613,"line_start":299,"line_end":299,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181618,"byte_end":181621,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181626,"byte_end":181647,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181652,"byte_end":181698,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181703,"byte_end":181706,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181711,"byte_end":181747,"line_start":304,"line_end":304,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181752,"byte_end":181759,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182053,"byte_end":182057,"line_start":320,"line_end":320,"column_start":8,"column_end":12},"name":"exp2","qualname":"::real::Real::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181791,"byte_end":181814,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181819,"byte_end":181822,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181827,"byte_end":181834,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181839,"byte_end":181870,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181875,"byte_end":181878,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181883,"byte_end":181899,"line_start":313,"line_end":313,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181904,"byte_end":181907,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181912,"byte_end":181931,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181936,"byte_end":181984,"line_start":316,"line_end":316,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181989,"byte_end":181992,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":181997,"byte_end":182033,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182038,"byte_end":182045,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182546,"byte_end":182548,"line_start":340,"line_end":340,"column_start":8,"column_end":10},"name":"ln","qualname":"::real::Real::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182078,"byte_end":182126,"line_start":322,"line_end":322,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182131,"byte_end":182134,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182139,"byte_end":182151,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182156,"byte_end":182159,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182164,"byte_end":182263,"line_start":326,"line_end":326,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182268,"byte_end":182271,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182276,"byte_end":182283,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182288,"byte_end":182319,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182324,"byte_end":182327,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182332,"byte_end":182350,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182355,"byte_end":182365,"line_start":332,"line_end":332,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182370,"byte_end":182392,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182397,"byte_end":182400,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182405,"byte_end":182426,"line_start":335,"line_end":335,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182431,"byte_end":182477,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182482,"byte_end":182485,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182490,"byte_end":182526,"line_start":338,"line_end":338,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182531,"byte_end":182538,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183200,"byte_end":183203,"line_start":363,"line_end":363,"column_start":8,"column_end":11},"name":"log","qualname":"::real::Real::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182569,"byte_end":182643,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182648,"byte_end":182651,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182656,"byte_end":182668,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182673,"byte_end":182676,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182681,"byte_end":182780,"line_start":346,"line_end":346,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182785,"byte_end":182788,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182793,"byte_end":182800,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182805,"byte_end":182836,"line_start":349,"line_end":349,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182841,"byte_end":182844,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182849,"byte_end":182868,"line_start":351,"line_end":351,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182873,"byte_end":182891,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182896,"byte_end":182899,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182904,"byte_end":182929,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182934,"byte_end":182990,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":182995,"byte_end":182998,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183003,"byte_end":183026,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183031,"byte_end":183085,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183090,"byte_end":183093,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183098,"byte_end":183137,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183142,"byte_end":183180,"line_start":361,"line_end":361,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183185,"byte_end":183192,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183667,"byte_end":183671,"line_start":381,"line_end":381,"column_start":8,"column_end":12},"name":"log2","qualname":"::real::Real::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183236,"byte_end":183283,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183288,"byte_end":183291,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183296,"byte_end":183308,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183313,"byte_end":183316,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183321,"byte_end":183420,"line_start":369,"line_end":369,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183425,"byte_end":183428,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183433,"byte_end":183440,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183445,"byte_end":183476,"line_start":372,"line_end":372,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183481,"byte_end":183484,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183489,"byte_end":183507,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183512,"byte_end":183515,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183520,"byte_end":183543,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183548,"byte_end":183598,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183603,"byte_end":183606,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183611,"byte_end":183647,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183652,"byte_end":183659,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184136,"byte_end":184141,"line_start":400,"line_end":400,"column_start":8,"column_end":13},"name":"log10","qualname":"::real::Real::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183692,"byte_end":183740,"line_start":383,"line_end":383,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183745,"byte_end":183748,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183753,"byte_end":183765,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183770,"byte_end":183773,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183778,"byte_end":183877,"line_start":387,"line_end":387,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183882,"byte_end":183885,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183890,"byte_end":183893,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183898,"byte_end":183905,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183910,"byte_end":183941,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183946,"byte_end":183949,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183954,"byte_end":183973,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183978,"byte_end":183981,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":183986,"byte_end":184011,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184016,"byte_end":184067,"line_start":396,"line_end":396,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184072,"byte_end":184075,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184080,"byte_end":184116,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184121,"byte_end":184128,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184426,"byte_end":184436,"line_start":413,"line_end":413,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::real::Real::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184162,"byte_end":184194,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184199,"byte_end":184202,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184207,"byte_end":184214,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184219,"byte_end":184244,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184249,"byte_end":184252,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184257,"byte_end":184284,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184289,"byte_end":184292,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184297,"byte_end":184357,"line_start":409,"line_end":409,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184362,"byte_end":184365,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184370,"byte_end":184406,"line_start":411,"line_end":411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184411,"byte_end":184418,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184725,"byte_end":184735,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::real::Real::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184457,"byte_end":184489,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184494,"byte_end":184497,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184502,"byte_end":184509,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184514,"byte_end":184539,"line_start":418,"line_end":418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184544,"byte_end":184547,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184552,"byte_end":184578,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184583,"byte_end":184586,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184591,"byte_end":184656,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184661,"byte_end":184664,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184669,"byte_end":184705,"line_start":424,"line_end":424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184710,"byte_end":184717,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184966,"byte_end":184969,"line_start":438,"line_end":438,"column_start":8,"column_end":11},"name":"max","qualname":"::real::Real::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184756,"byte_end":184799,"line_start":428,"line_end":428,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184804,"byte_end":184807,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184812,"byte_end":184819,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184824,"byte_end":184855,"line_start":431,"line_end":431,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184860,"byte_end":184863,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184868,"byte_end":184884,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184889,"byte_end":184905,"line_start":434,"line_end":434,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184910,"byte_end":184913,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184918,"byte_end":184946,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":184951,"byte_end":184958,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185213,"byte_end":185216,"line_start":450,"line_end":450,"column_start":8,"column_end":11},"name":"min","qualname":"::real::Real::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185003,"byte_end":185046,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185051,"byte_end":185054,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185059,"byte_end":185066,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185071,"byte_end":185102,"line_start":443,"line_end":443,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185107,"byte_end":185110,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185115,"byte_end":185131,"line_start":445,"line_end":445,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185136,"byte_end":185152,"line_start":446,"line_end":446,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185157,"byte_end":185160,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185165,"byte_end":185193,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185198,"byte_end":185205,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185719,"byte_end":185726,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::real::Real::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185250,"byte_end":185293,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185298,"byte_end":185301,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185306,"byte_end":185337,"line_start":454,"line_end":454,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185342,"byte_end":185368,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185373,"byte_end":185376,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185381,"byte_end":185388,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185393,"byte_end":185424,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185429,"byte_end":185432,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185437,"byte_end":185453,"line_start":460,"line_end":460,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185458,"byte_end":185475,"line_start":461,"line_end":461,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185480,"byte_end":185483,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185488,"byte_end":185544,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185549,"byte_end":185605,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185610,"byte_end":185613,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185618,"byte_end":185656,"line_start":466,"line_end":466,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185661,"byte_end":185699,"line_start":467,"line_end":467,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185704,"byte_end":185711,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186039,"byte_end":186043,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::real::Real::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185760,"byte_end":185796,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185801,"byte_end":185804,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185809,"byte_end":185816,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185821,"byte_end":185852,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185857,"byte_end":185860,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185865,"byte_end":185881,"line_start":476,"line_end":476,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185886,"byte_end":185889,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185894,"byte_end":185917,"line_start":478,"line_end":478,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185922,"byte_end":185970,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185975,"byte_end":185978,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":185983,"byte_end":186019,"line_start":481,"line_end":481,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186024,"byte_end":186031,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186466,"byte_end":186471,"line_start":499,"line_end":499,"column_start":8,"column_end":13},"name":"hypot","qualname":"::real::Real::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186064,"byte_end":186138,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186143,"byte_end":186174,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186179,"byte_end":186182,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186187,"byte_end":186194,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186199,"byte_end":186230,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186235,"byte_end":186238,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186243,"byte_end":186259,"line_start":491,"line_end":491,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186264,"byte_end":186280,"line_start":492,"line_end":492,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186285,"byte_end":186288,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186293,"byte_end":186315,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186320,"byte_end":186397,"line_start":495,"line_end":495,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186402,"byte_end":186405,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186410,"byte_end":186446,"line_start":497,"line_end":497,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186451,"byte_end":186458,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186804,"byte_end":186807,"line_start":513,"line_end":513,"column_start":8,"column_end":11},"name":"sin","qualname":"::real::Real::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186505,"byte_end":186552,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186557,"byte_end":186560,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186565,"byte_end":186572,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186577,"byte_end":186608,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186613,"byte_end":186630,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186635,"byte_end":186638,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186643,"byte_end":186675,"line_start":507,"line_end":507,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186680,"byte_end":186683,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186688,"byte_end":186735,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186740,"byte_end":186743,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186748,"byte_end":186784,"line_start":511,"line_end":511,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186789,"byte_end":186796,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187129,"byte_end":187132,"line_start":527,"line_end":527,"column_start":8,"column_end":11},"name":"cos","qualname":"::real::Real::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186828,"byte_end":186877,"line_start":515,"line_end":515,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186882,"byte_end":186885,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186890,"byte_end":186897,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186902,"byte_end":186933,"line_start":518,"line_end":518,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186938,"byte_end":186955,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186960,"byte_end":186963,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":186968,"byte_end":187000,"line_start":521,"line_end":521,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187005,"byte_end":187008,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187013,"byte_end":187060,"line_start":523,"line_end":523,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187065,"byte_end":187068,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187073,"byte_end":187109,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187114,"byte_end":187121,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187447,"byte_end":187450,"line_start":540,"line_end":540,"column_start":8,"column_end":11},"name":"tan","qualname":"::real::Real::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187153,"byte_end":187203,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187208,"byte_end":187211,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187216,"byte_end":187223,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187228,"byte_end":187259,"line_start":532,"line_end":532,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187264,"byte_end":187281,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187286,"byte_end":187289,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187294,"byte_end":187326,"line_start":535,"line_end":535,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187331,"byte_end":187378,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187383,"byte_end":187386,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187391,"byte_end":187427,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187432,"byte_end":187439,"line_start":539,"line_end":539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188107,"byte_end":188111,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"asin","qualname":"::real::Real::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187471,"byte_end":187538,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187543,"byte_end":187612,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187617,"byte_end":187629,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187634,"byte_end":187637,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187642,"byte_end":187654,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187659,"byte_end":187662,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187667,"byte_end":187749,"line_start":548,"line_end":548,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187754,"byte_end":187801,"line_start":549,"line_end":549,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187806,"byte_end":187809,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187814,"byte_end":187821,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187826,"byte_end":187857,"line_start":552,"line_end":552,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187862,"byte_end":187879,"line_start":553,"line_end":553,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187884,"byte_end":187887,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187892,"byte_end":187926,"line_start":555,"line_end":555,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187931,"byte_end":187934,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187939,"byte_end":187961,"line_start":557,"line_end":557,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":187966,"byte_end":188038,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188043,"byte_end":188046,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188051,"byte_end":188087,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188092,"byte_end":188099,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188764,"byte_end":188768,"line_start":584,"line_end":584,"column_start":8,"column_end":12},"name":"acos","qualname":"::real::Real::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188132,"byte_end":188201,"line_start":564,"line_end":564,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188206,"byte_end":188269,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188274,"byte_end":188286,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188291,"byte_end":188294,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188299,"byte_end":188311,"line_start":568,"line_end":568,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188316,"byte_end":188319,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188324,"byte_end":188406,"line_start":570,"line_end":570,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188411,"byte_end":188458,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188463,"byte_end":188466,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188471,"byte_end":188478,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188483,"byte_end":188514,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188519,"byte_end":188536,"line_start":575,"line_end":575,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188541,"byte_end":188544,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188549,"byte_end":188583,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188588,"byte_end":188591,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188596,"byte_end":188618,"line_start":579,"line_end":579,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188623,"byte_end":188695,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188700,"byte_end":188703,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188708,"byte_end":188744,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188749,"byte_end":188756,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189137,"byte_end":189141,"line_start":599,"line_end":599,"column_start":8,"column_end":12},"name":"atan","qualname":"::real::Real::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188789,"byte_end":188863,"line_start":586,"line_end":586,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188868,"byte_end":188892,"line_start":587,"line_end":587,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188897,"byte_end":188900,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188905,"byte_end":188912,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188917,"byte_end":188948,"line_start":590,"line_end":590,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188953,"byte_end":188956,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188961,"byte_end":188977,"line_start":592,"line_end":592,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188982,"byte_end":188985,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":188990,"byte_end":189009,"line_start":594,"line_end":594,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189014,"byte_end":189068,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189073,"byte_end":189076,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189081,"byte_end":189117,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189122,"byte_end":189129,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190027,"byte_end":190032,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"atan2","qualname":"::real::Real::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189162,"byte_end":189238,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189243,"byte_end":189246,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189251,"byte_end":189278,"line_start":603,"line_end":603,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189283,"byte_end":189331,"line_start":604,"line_end":604,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189336,"byte_end":189386,"line_start":605,"line_end":605,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189391,"byte_end":189442,"line_start":606,"line_end":606,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189447,"byte_end":189450,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189455,"byte_end":189462,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189467,"byte_end":189498,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189503,"byte_end":189520,"line_start":610,"line_end":610,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189525,"byte_end":189528,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189533,"byte_end":189562,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189567,"byte_end":189611,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189616,"byte_end":189647,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189652,"byte_end":189669,"line_start":615,"line_end":615,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189674,"byte_end":189692,"line_start":616,"line_end":616,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189697,"byte_end":189700,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189705,"byte_end":189729,"line_start":618,"line_end":618,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189734,"byte_end":189752,"line_start":619,"line_end":619,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189757,"byte_end":189774,"line_start":620,"line_end":620,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189779,"byte_end":189782,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189787,"byte_end":189847,"line_start":622,"line_end":622,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189852,"byte_end":189913,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189918,"byte_end":189921,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189926,"byte_end":189964,"line_start":625,"line_end":625,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":189969,"byte_end":190007,"line_start":626,"line_end":626,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190012,"byte_end":190019,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190551,"byte_end":190558,"line_start":646,"line_end":646,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::real::Real::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190066,"byte_end":190141,"line_start":630,"line_end":630,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190146,"byte_end":190169,"line_start":631,"line_end":631,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190174,"byte_end":190177,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190182,"byte_end":190189,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190194,"byte_end":190225,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190230,"byte_end":190247,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190252,"byte_end":190255,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190260,"byte_end":190292,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190297,"byte_end":190321,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190326,"byte_end":190329,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190334,"byte_end":190383,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190388,"byte_end":190437,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190442,"byte_end":190445,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190450,"byte_end":190488,"line_start":643,"line_end":643,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190493,"byte_end":190531,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190536,"byte_end":190543,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190931,"byte_end":190937,"line_start":661,"line_end":661,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::real::Real::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190587,"byte_end":190651,"line_start":648,"line_end":648,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190656,"byte_end":190684,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190689,"byte_end":190692,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190697,"byte_end":190704,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190709,"byte_end":190740,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190745,"byte_end":190748,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190753,"byte_end":190769,"line_start":654,"line_end":654,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190774,"byte_end":190777,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190782,"byte_end":190802,"line_start":656,"line_end":656,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190807,"byte_end":190862,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190867,"byte_end":190870,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190875,"byte_end":190911,"line_start":659,"line_end":659,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190916,"byte_end":190923,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191515,"byte_end":191520,"line_start":682,"line_end":682,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::real::Real::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":190958,"byte_end":191023,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191028,"byte_end":191073,"line_start":664,"line_end":664,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191078,"byte_end":191081,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191086,"byte_end":191098,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191103,"byte_end":191106,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191111,"byte_end":191193,"line_start":668,"line_end":668,"column_start":5,"column_end":87}},{"value":"/ if `self-1 <= 0`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191198,"byte_end":191219,"line_start":669,"line_end":669,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191224,"byte_end":191227,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191232,"byte_end":191239,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191244,"byte_end":191275,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191280,"byte_end":191297,"line_start":673,"line_end":673,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191302,"byte_end":191305,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191310,"byte_end":191343,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191348,"byte_end":191351,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191356,"byte_end":191392,"line_start":677,"line_end":677,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191397,"byte_end":191446,"line_start":678,"line_end":678,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191451,"byte_end":191454,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191459,"byte_end":191495,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191500,"byte_end":191507,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191945,"byte_end":191949,"line_start":700,"line_end":700,"column_start":8,"column_end":12},"name":"sinh","qualname":"::real::Real::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191541,"byte_end":191570,"line_start":684,"line_end":684,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191575,"byte_end":191578,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191583,"byte_end":191590,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191595,"byte_end":191626,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191631,"byte_end":191648,"line_start":688,"line_end":688,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191653,"byte_end":191656,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191661,"byte_end":191688,"line_start":690,"line_end":690,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191693,"byte_end":191709,"line_start":691,"line_end":691,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191714,"byte_end":191717,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191722,"byte_end":191743,"line_start":693,"line_end":693,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191748,"byte_end":191795,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191800,"byte_end":191832,"line_start":695,"line_end":695,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191837,"byte_end":191876,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191881,"byte_end":191884,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191889,"byte_end":191925,"line_start":698,"line_end":698,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191930,"byte_end":191937,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192390,"byte_end":192394,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"cosh","qualname":"::real::Real::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":191970,"byte_end":192001,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192006,"byte_end":192009,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192014,"byte_end":192021,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192026,"byte_end":192057,"line_start":705,"line_end":705,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192062,"byte_end":192079,"line_start":706,"line_end":706,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192084,"byte_end":192087,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192092,"byte_end":192119,"line_start":708,"line_end":708,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192124,"byte_end":192140,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192145,"byte_end":192166,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192171,"byte_end":192215,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192220,"byte_end":192252,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192257,"byte_end":192296,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192301,"byte_end":192304,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192309,"byte_end":192327,"line_start":715,"line_end":715,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192332,"byte_end":192370,"line_start":716,"line_end":716,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192375,"byte_end":192382,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192855,"byte_end":192859,"line_start":736,"line_end":736,"column_start":8,"column_end":12},"name":"tanh","qualname":"::real::Real::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192415,"byte_end":192447,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192452,"byte_end":192455,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192460,"byte_end":192467,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192472,"byte_end":192503,"line_start":723,"line_end":723,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192508,"byte_end":192525,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192530,"byte_end":192533,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192538,"byte_end":192565,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192570,"byte_end":192586,"line_start":727,"line_end":727,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192591,"byte_end":192594,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192599,"byte_end":192620,"line_start":729,"line_end":729,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192625,"byte_end":192685,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192690,"byte_end":192740,"line_start":731,"line_end":731,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192745,"byte_end":192784,"line_start":732,"line_end":732,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192789,"byte_end":192792,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192797,"byte_end":192835,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192840,"byte_end":192847,"line_start":735,"line_end":735,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193159,"byte_end":193164,"line_start":750,"line_end":750,"column_start":8,"column_end":13},"name":"asinh","qualname":"::real::Real::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192880,"byte_end":192917,"line_start":738,"line_end":738,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192922,"byte_end":192925,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192930,"byte_end":192937,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192942,"byte_end":192973,"line_start":741,"line_end":741,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192978,"byte_end":192981,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":192986,"byte_end":193002,"line_start":743,"line_end":743,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193007,"byte_end":193036,"line_start":744,"line_end":744,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193041,"byte_end":193044,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193049,"byte_end":193088,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193093,"byte_end":193096,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193101,"byte_end":193139,"line_start":748,"line_end":748,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193144,"byte_end":193151,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193466,"byte_end":193471,"line_start":764,"line_end":764,"column_start":8,"column_end":13},"name":"acosh","qualname":"::real::Real::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193185,"byte_end":193224,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193229,"byte_end":193232,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193237,"byte_end":193244,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193249,"byte_end":193280,"line_start":755,"line_end":755,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193285,"byte_end":193288,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193293,"byte_end":193309,"line_start":757,"line_end":757,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193314,"byte_end":193343,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193348,"byte_end":193351,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193356,"byte_end":193395,"line_start":760,"line_end":760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193400,"byte_end":193403,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193408,"byte_end":193446,"line_start":762,"line_end":762,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193451,"byte_end":193458,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193807,"byte_end":193812,"line_start":779,"line_end":779,"column_start":8,"column_end":13},"name":"atanh","qualname":"::real::Real::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193492,"byte_end":193532,"line_start":766,"line_end":766,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193537,"byte_end":193540,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193545,"byte_end":193552,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193557,"byte_end":193588,"line_start":769,"line_end":769,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193593,"byte_end":193610,"line_start":770,"line_end":770,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193615,"byte_end":193618,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193623,"byte_end":193650,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193655,"byte_end":193684,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193689,"byte_end":193692,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193697,"byte_end":193736,"line_start":775,"line_end":775,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193741,"byte_end":193744,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193749,"byte_end":193787,"line_start":777,"line_end":777,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193792,"byte_end":193799,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":885},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":904},{"krate":0,"index":4796},{"krate":0,"index":4802},{"krate":0,"index":4808},{"krate":0,"index":4814},{"krate":0,"index":4820},{"krate":0,"index":4826},{"krate":0,"index":905},{"krate":0,"index":912},{"krate":0,"index":4832},{"krate":0,"index":4838},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":921}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":898},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195896,"byte_end":195902,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[{"value":"/ Useful functions for signed numbers (i.e. numbers that can be negative).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195809,"byte_end":195885,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196155,"byte_end":196158,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"pub fn abs(&Self) -> Self","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195943,"byte_end":195975,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195980,"byte_end":195983,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195988,"byte_end":196059,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196064,"byte_end":196067,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196072,"byte_end":196147,"line_start":13,"line_end":13,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196383,"byte_end":196390,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"pub fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196180,"byte_end":196223,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196228,"byte_end":196231,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Returns `zero` if the number is less than or equal to `other`, otherwise the difference","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196236,"byte_end":196327,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ between `self` and `other` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196332,"byte_end":196375,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196848,"byte_end":196854,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"pub fn signum(&Self) -> Self","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196426,"byte_end":196461,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196466,"byte_end":196469,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196474,"byte_end":196498,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196503,"byte_end":196506,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196511,"byte_end":196570,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196575,"byte_end":196639,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196644,"byte_end":196678,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196683,"byte_end":196686,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For signed integers:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196691,"byte_end":196715,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196720,"byte_end":196723,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196728,"byte_end":196759,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196764,"byte_end":196799,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196804,"byte_end":196840,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196971,"byte_end":196982,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" Returns true if the number is positive and false if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is positive and false if the number is zero or negative.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":196876,"byte_end":196963,"line_start":37,"line_end":37,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":197099,"byte_end":197110,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" Returns true if the number is negative and false if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is negative and false if the number is zero or positive.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":197004,"byte_end":197091,"line_start":40,"line_end":40,"column_start":5,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200304,"byte_end":200307,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"pub fn abs<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200091,"byte_end":200123,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200124,"byte_end":200127,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200128,"byte_end":200198,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200199,"byte_end":200202,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200203,"byte_end":200278,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200279,"byte_end":200296,"line_start":164,"line_end":164,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200544,"byte_end":200551,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"pub fn abs_sub<T: Signed>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200355,"byte_end":200398,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200399,"byte_end":200402,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Returns zero if `x` is less than or equal to `y`, otherwise the difference","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200403,"byte_end":200481,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ between `x` and `y` is returned.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200482,"byte_end":200518,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200519,"byte_end":200536,"line_start":173,"line_end":173,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":917},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200995,"byte_end":201001,"line_start":192,"line_end":192,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::signum","value":"pub fn signum<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200603,"byte_end":200638,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200639,"byte_end":200642,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200643,"byte_end":200667,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200668,"byte_end":200671,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200672,"byte_end":200731,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200732,"byte_end":200796,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200797,"byte_end":200831,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200832,"byte_end":200835,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For signed integers:","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200836,"byte_end":200860,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200861,"byte_end":200864,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200865,"byte_end":200896,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200897,"byte_end":200932,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200933,"byte_end":200969,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":200970,"byte_end":200987,"line_start":191,"line_end":191,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":919},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":201110,"byte_end":201118,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[{"value":"/ A trait for values which cannot be negative","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":201052,"byte_end":201099,"line_start":196,"line_end":196,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":923},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2165,"byte_end":2168,"line_start":67,"line_end":67,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[{"value":"/ The base trait for numeric types, covering `0` and `1` values,","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2022,"byte_end":2088,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/ comparisons, basic numeric operations, and string conversion.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2089,"byte_end":2154,"line_start":66,"line_end":66,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":924},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2213,"byte_end":2228,"line_start":68,"line_end":68,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3357,"byte_end":3371,"line_start":95,"line_end":95,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":923},"children":[],"decl_id":null,"docs":" Convert from a string and radix (typically `2..=36`).","sig":null,"attributes":[{"value":"/ Convert from a string and radix (typically `2..=36`).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2235,"byte_end":2292,"line_start":70,"line_end":70,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2297,"byte_end":2300,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2305,"byte_end":2319,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2324,"byte_end":2327,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2332,"byte_end":2343,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ use num_traits::Num;","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2348,"byte_end":2372,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2377,"byte_end":2380,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"27\", 10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2385,"byte_end":2441,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(result, Ok(27));","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2446,"byte_end":2477,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2482,"byte_end":2485,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"foo\", 10);","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2490,"byte_end":2547,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2552,"byte_end":2581,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2586,"byte_end":2593,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2598,"byte_end":2601,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Supported radices","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2606,"byte_end":2629,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2634,"byte_end":2637,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ The exact range of supported radices is at the discretion of each type implementation. For","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2642,"byte_end":2736,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ primitive integers, this is implemented by the inherent `from_str_radix` methods in the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2741,"byte_end":2832,"line_start":87,"line_end":87,"column_start":5,"column_end":96}},{"value":"/ standard library, which **panic** if the radix is not in the range from 2 to 36. The","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2837,"byte_end":2925,"line_start":88,"line_end":88,"column_start":5,"column_end":93}},{"value":"/ implementation in this crate for primitive floats is similar.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2930,"byte_end":2995,"line_start":89,"line_end":89,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3000,"byte_end":3003,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For third-party types, it is suggested that implementations should follow suit and at least","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3008,"byte_end":3103,"line_start":91,"line_end":91,"column_start":5,"column_end":100}},{"value":"/ accept `2..=36` without panicking, but an `Err` may be returned for any unsupported radix.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3108,"byte_end":3202,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ It's possible that a type might not even support the common radix 10, nor any, if string","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3207,"byte_end":3299,"line_start":93,"line_end":93,"column_start":5,"column_end":97}},{"value":"/ parsing doesn't make sense for that type.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3304,"byte_end":3349,"line_start":94,"line_end":94,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":926},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3593,"byte_end":3599,"line_start":101,"line_end":101,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[{"value":"/ The trait for types implementing basic numeric operations","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3438,"byte_end":3499,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3500,"byte_end":3503,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3504,"byte_end":3582,"line_start":100,"line_end":100,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":933},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4233,"byte_end":4239,"line_start":123,"line_end":123,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement numeric operations taking","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4026,"byte_end":4102,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ the second operand by reference.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4103,"byte_end":4139,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4140,"byte_end":4143,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4144,"byte_end":4222,"line_start":122,"line_end":122,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":938},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4558,"byte_end":4564,"line_start":130,"line_end":130,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[{"value":"/ The trait for references which implement numeric operations, taking the","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4337,"byte_end":4412,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ second operand either by value or by reference.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4413,"byte_end":4464,"line_start":127,"line_end":127,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4465,"byte_end":4468,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4469,"byte_end":4547,"line_start":129,"line_end":129,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":945},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4897,"byte_end":4909,"line_start":136,"line_end":136,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[{"value":"/ The trait for types implementing numeric assignment operators (like `+=`).","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4725,"byte_end":4803,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4804,"byte_end":4807,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4808,"byte_end":4886,"line_start":135,"line_end":135,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":950},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5319,"byte_end":5328,"line_start":149,"line_end":149,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement assignment operators.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5153,"byte_end":5225,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5226,"byte_end":5229,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5230,"byte_end":5308,"line_start":148,"line_end":148,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":953},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5624,"byte_end":5636,"line_start":156,"line_end":156,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `NumAssign` types which also implement assignment operations","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5408,"byte_end":5486,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ taking the second operand by reference.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5487,"byte_end":5530,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5531,"byte_end":5534,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5535,"byte_end":5613,"line_start":155,"line_end":155,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4887},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":6758,"byte_end":6763,"line_start":192,"line_end":192,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":4886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4889},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":6769,"byte_end":6776,"line_start":193,"line_end":193,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":4886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":6737,"byte_end":6751,"line_start":191,"line_end":191,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"pub enum FloatErrorKind { Empty, Invalid, }","parent":null,"children":[{"krate":0,"index":4887},{"krate":0,"index":4889}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4893},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":6934,"byte_end":6949,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":4894}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4894},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":6960,"byte_end":6964,"line_start":199,"line_end":199,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":4893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":966},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15236,"byte_end":15241,"line_start":387,"line_end":387,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"/ A value bounded by a minimum and a maximum","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":14969,"byte_end":15015,"line_start":379,"line_end":379,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15016,"byte_end":15019,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15020,"byte_end":15073,"line_start":381,"line_end":381,"column_start":1,"column_end":54}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15074,"byte_end":15130,"line_start":382,"line_end":382,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15131,"byte_end":15165,"line_start":383,"line_end":383,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15166,"byte_end":15169,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min <= max)`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15170,"byte_end":15218,"line_start":385,"line_end":385,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15219,"byte_end":15228,"line_start":386,"line_end":386,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15806,"byte_end":15815,"line_start":406,"line_end":406,"column_start":8,"column_end":17},"name":"clamp_min","qualname":"::clamp_min","value":"pub fn clamp_min<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum value","sig":null,"attributes":[{"value":"/ A value bounded by a minimum value","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15471,"byte_end":15509,"line_start":398,"line_end":398,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15510,"byte_end":15513,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15514,"byte_end":15567,"line_start":400,"line_end":400,"column_start":1,"column_end":54}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15568,"byte_end":15602,"line_start":401,"line_end":401,"column_start":1,"column_end":35}},{"value":"/  `clamp_min(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::min(std::f32::NAN, 1.0)`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15603,"byte_end":15702,"line_start":402,"line_end":402,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15703,"byte_end":15706,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min == min)`. (This occurs if `min` is `NAN`.)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15707,"byte_end":15788,"line_start":404,"line_end":404,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15789,"byte_end":15798,"line_start":405,"line_end":405,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":970},"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16317,"byte_end":16326,"line_start":423,"line_end":423,"column_start":8,"column_end":17},"name":"clamp_max","qualname":"::clamp_max","value":"pub fn clamp_max<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a maximum value","sig":null,"attributes":[{"value":"/ A value bounded by a maximum value","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":15979,"byte_end":16017,"line_start":415,"line_end":415,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16018,"byte_end":16021,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16022,"byte_end":16078,"line_start":417,"line_end":417,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16079,"byte_end":16113,"line_start":418,"line_end":418,"column_start":1,"column_end":35}},{"value":"/  `clamp_max(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::max(std::f32::NAN, 1.0)`.","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16114,"byte_end":16213,"line_start":419,"line_end":419,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16214,"byte_end":16217,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(max == max)`. (This occurs if `max` is `NAN`.)","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16218,"byte_end":16299,"line_start":421,"line_end":421,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":16300,"byte_end":16309,"line_start":422,"line_end":422,"column_start":1,"column_end":10}}]}],"impls":[{"id":12,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":22587,"byte_end":22595,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":45854,"byte_end":45862,"line_start":619,"line_end":619,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":46630,"byte_end":46638,"line_start":652,"line_end":652,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49185,"byte_end":49193,"line_start":738,"line_end":738,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":115888,"byte_end":115896,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":117873,"byte_end":117881,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163360,"byte_end":163368,"line_start":222,"line_end":222,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163560,"byte_end":163568,"line_start":230,"line_end":230,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163760,"byte_end":163768,"line_start":238,"line_end":238,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163960,"byte_end":163968,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":164146,"byte_end":164154,"line_start":254,"line_end":254,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":164352,"byte_end":164360,"line_start":262,"line_end":262,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193855,"byte_end":193856,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4750},{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":197992,"byte_end":198000,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":201380,"byte_end":201388,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3836,"byte_end":3837,"line_start":110,"line_end":110,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4294,"byte_end":4295,"line_start":124,"line_end":124,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4658,"byte_end":4659,"line_start":131,"line_end":131,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5050,"byte_end":5051,"line_start":141,"line_end":141,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5374,"byte_end":5375,"line_start":150,"line_end":150,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5709,"byte_end":5710,"line_start":157,"line_end":157,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":6309,"byte_end":6317,"line_start":176,"line_end":176,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":7007,"byte_end":7022,"line_start":202,"line_end":202,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1897,"byte_end":1903,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":180}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1913,"byte_end":1917,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":241}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1927,"byte_end":1932,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":357}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1942,"byte_end":1952,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":486}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":520}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1975,"byte_end":1978,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":572}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","byte_start":130216,"byte_end":130223,"line_start":1,"line_end":1,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":573}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","byte_start":130233,"byte_end":130236,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":615}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","byte_start":130246,"byte_end":130253,"line_start":3,"line_end":3,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":633}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","byte_start":130263,"byte_end":130274,"line_start":4,"line_end":4,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":655}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","byte_start":130284,"byte_end":130294,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":712}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/mod.rs","byte_start":130304,"byte_end":130312,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":734}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":1988,"byte_end":1991,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":790}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2001,"byte_end":2005,"line_start":62,"line_end":62,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":821}},{"kind":"Mod","span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2015,"byte_end":2019,"line_start":63,"line_end":63,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":885}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs","byte_start":22587,"byte_end":22595,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":38800,"byte_end":38805,"line_start":411,"line_end":411,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":320}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":45854,"byte_end":45862,"line_start":619,"line_end":619,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":46630,"byte_end":46638,"line_start":652,"line_end":652,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":320}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47473,"byte_end":47478,"line_start":691,"line_end":691,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":47481,"byte_end":47492,"line_start":691,"line_end":691,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":294},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":49185,"byte_end":49193,"line_start":738,"line_end":738,"column_start":30,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":50200,"byte_end":50204,"line_start":770,"line_end":770,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":353}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52044,"byte_end":52047,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52050,"byte_end":52057,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":345},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52060,"byte_end":52063,"line_start":16,"line_end":16,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52081,"byte_end":52091,"line_start":16,"line_end":16,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":52094,"byte_end":52098,"line_start":16,"line_end":16,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75728,"byte_end":75731,"line_start":905,"line_end":905,"column_start":18,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75734,"byte_end":75738,"line_start":905,"line_end":905,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75741,"byte_end":75748,"line_start":905,"line_end":905,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":345},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75751,"byte_end":75761,"line_start":905,"line_end":905,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs","byte_start":75764,"byte_end":75767,"line_start":905,"line_end":905,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":424}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114631,"byte_end":114636,"line_start":12,"line_end":12,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":497}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":114639,"byte_end":114642,"line_start":12,"line_end":12,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":497}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":115888,"byte_end":115896,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":497}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116325,"byte_end":116330,"line_start":90,"line_end":90,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":507}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":116333,"byte_end":116336,"line_start":90,"line_end":90,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":507}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs","byte_start":117873,"byte_end":117881,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":507}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120888,"byte_end":120893,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120900,"byte_end":120904,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120911,"byte_end":120914,"line_start":37,"line_end":37,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120921,"byte_end":120928,"line_start":38,"line_end":38,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":345},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120935,"byte_end":120942,"line_start":39,"line_end":39,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":230},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120949,"byte_end":120959,"line_start":40,"line_end":40,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120966,"byte_end":120969,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2691},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120976,"byte_end":120978,"line_start":42,"line_end":42,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2660},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":120985,"byte_end":120988,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3123},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121010,"byte_end":121016,"line_start":44,"line_end":44,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3127},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121038,"byte_end":121043,"line_start":45,"line_end":45,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3132},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121065,"byte_end":121071,"line_start":46,"line_end":46,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3137},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121093,"byte_end":121096,"line_start":47,"line_end":47,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3142},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121125,"byte_end":121128,"line_start":48,"line_end":48,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3148},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121157,"byte_end":121167,"line_start":49,"line_end":49,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":596},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121189,"byte_end":121199,"line_start":50,"line_end":50,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":599},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121221,"byte_end":121231,"line_start":51,"line_end":51,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":601},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121253,"byte_end":121263,"line_start":52,"line_end":52,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":603},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs","byte_start":121285,"byte_end":121295,"line_start":53,"line_end":53,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":723},"to":{"krate":0,"index":554}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130476,"byte_end":130481,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":596}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":130484,"byte_end":130487,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":596}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":131617,"byte_end":131622,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":131625,"byte_end":131628,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132520,"byte_end":132525,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":601}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":132528,"byte_end":132531,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":601}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133488,"byte_end":133493,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":603}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":133496,"byte_end":133499,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3086},"to":{"krate":0,"index":603}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134475,"byte_end":134480,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":134483,"byte_end":134486,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3092},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":136254,"byte_end":136259,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":608}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137703,"byte_end":137708,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":610}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":137711,"byte_end":137714,"line_start":200,"line_end":200,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3142},"to":{"krate":0,"index":610}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139345,"byte_end":139350,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":613}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs","byte_start":139353,"byte_end":139356,"line_start":246,"line_end":246,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3148},"to":{"krate":0,"index":613}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":145953,"byte_end":145958,"line_start":19,"line_end":19,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":706}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":145961,"byte_end":145964,"line_start":19,"line_end":19,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":706}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":147040,"byte_end":147045,"line_start":42,"line_end":42,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":708}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":147048,"byte_end":147051,"line_start":42,"line_end":42,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":708}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":148136,"byte_end":148141,"line_start":65,"line_end":65,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":710}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs","byte_start":148144,"byte_end":148147,"line_start":65,"line_end":65,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":710}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":151321,"byte_end":151326,"line_start":47,"line_end":47,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":151329,"byte_end":151332,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":152329,"byte_end":152334,"line_start":70,"line_end":70,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":152337,"byte_end":152340,"line_start":70,"line_end":70,"column_start":34,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":153343,"byte_end":153348,"line_start":93,"line_end":93,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs","byte_start":153351,"byte_end":153354,"line_start":93,"line_end":93,"column_start":34,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":155749,"byte_end":155754,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":758}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":155757,"byte_end":155760,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":758}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":156643,"byte_end":156648,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":760}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":156651,"byte_end":156654,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":760}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":157543,"byte_end":157548,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":762}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":157551,"byte_end":157554,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":762}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":158683,"byte_end":158688,"line_start":104,"line_end":104,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":765}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160522,"byte_end":160527,"line_start":152,"line_end":152,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":768}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":160530,"byte_end":160533,"line_start":152,"line_end":152,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3142},"to":{"krate":0,"index":768}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161928,"byte_end":161933,"line_start":187,"line_end":187,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":770}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":161936,"byte_end":161939,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3148},"to":{"krate":0,"index":770}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163360,"byte_end":163368,"line_start":222,"line_end":222,"column_start":38,"column_end":46},"kind":{"Impl":{"id":594}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":758}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163560,"byte_end":163568,"line_start":230,"line_end":230,"column_start":38,"column_end":46},"kind":{"Impl":{"id":595}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":760}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163760,"byte_end":163768,"line_start":238,"line_end":238,"column_start":38,"column_end":46},"kind":{"Impl":{"id":596}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":762}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":163960,"byte_end":163968,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"kind":{"Impl":{"id":597}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":765}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":164146,"byte_end":164154,"line_start":254,"line_end":254,"column_start":38,"column_end":46},"kind":{"Impl":{"id":598}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":768}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs","byte_start":164352,"byte_end":164360,"line_start":262,"line_end":262,"column_start":38,"column_end":46},"kind":{"Impl":{"id":599}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":770}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174229,"byte_end":174232,"line_start":17,"line_end":17,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174235,"byte_end":174239,"line_start":17,"line_end":17,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174242,"byte_end":174249,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":345},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174252,"byte_end":174262,"line_start":17,"line_end":17,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":174265,"byte_end":174268,"line_start":17,"line_end":17,"column_start":53,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/real.rs","byte_start":193855,"byte_end":193856,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":884},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195904,"byte_end":195909,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":898}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195912,"byte_end":195915,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":898}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":195918,"byte_end":195921,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":898}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":197992,"byte_end":198000,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"Impl":{"id":777}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":898}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":201120,"byte_end":201123,"line_start":197,"line_end":197,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":919}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs","byte_start":201380,"byte_end":201388,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"kind":{"Impl":{"id":786}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":919}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2170,"byte_end":2179,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2655},"to":{"krate":0,"index":923}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2182,"byte_end":2186,"line_start":67,"line_end":67,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":497},"to":{"krate":0,"index":923}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2189,"byte_end":2192,"line_start":67,"line_end":67,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":507},"to":{"krate":0,"index":923}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":2195,"byte_end":2201,"line_start":67,"line_end":67,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":926},"to":{"krate":0,"index":923}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3632,"byte_end":3635,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":926}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3664,"byte_end":3667,"line_start":103,"line_end":103,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":926}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3696,"byte_end":3699,"line_start":104,"line_end":104,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":926}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3728,"byte_end":3731,"line_start":105,"line_end":105,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3086},"to":{"krate":0,"index":926}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3760,"byte_end":3763,"line_start":106,"line_end":106,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3092},"to":{"krate":0,"index":926}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":3836,"byte_end":3837,"line_start":110,"line_end":110,"column_start":46,"column_end":47},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":930},"to":{"krate":0,"index":926}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4241,"byte_end":4244,"line_start":123,"line_end":123,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":933}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4255,"byte_end":4261,"line_start":123,"line_end":123,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":926},"to":{"krate":0,"index":933}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4294,"byte_end":4295,"line_start":124,"line_end":124,"column_start":20,"column_end":21},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":933}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4572,"byte_end":4578,"line_start":130,"line_end":130,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":926},"to":{"krate":0,"index":938}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4601,"byte_end":4607,"line_start":130,"line_end":130,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":926},"to":{"krate":0,"index":938}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4658,"byte_end":4659,"line_start":131,"line_end":131,"column_start":32,"column_end":33},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":942},"to":{"krate":0,"index":938}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4927,"byte_end":4936,"line_start":137,"line_end":137,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":3102},"to":{"krate":0,"index":945}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4944,"byte_end":4953,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3106},"to":{"krate":0,"index":945}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4961,"byte_end":4970,"line_start":137,"line_end":137,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":3110},"to":{"krate":0,"index":945}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4978,"byte_end":4987,"line_start":137,"line_end":137,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":3114},"to":{"krate":0,"index":945}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":4995,"byte_end":5004,"line_start":137,"line_end":137,"column_start":73,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":3118},"to":{"krate":0,"index":945}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5050,"byte_end":5051,"line_start":141,"line_end":141,"column_start":36,"column_end":37},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":948},"to":{"krate":0,"index":945}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5330,"byte_end":5333,"line_start":149,"line_end":149,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":950}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5336,"byte_end":5348,"line_start":149,"line_end":149,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":945},"to":{"krate":0,"index":950}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5374,"byte_end":5375,"line_start":150,"line_end":150,"column_start":23,"column_end":24},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":952},"to":{"krate":0,"index":950}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5638,"byte_end":5647,"line_start":156,"line_end":156,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":950},"to":{"krate":0,"index":953}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5658,"byte_end":5670,"line_start":156,"line_end":156,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":945},"to":{"krate":0,"index":953}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":5709,"byte_end":5710,"line_start":157,"line_end":157,"column_start":26,"column_end":27},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":956},"to":{"krate":0,"index":953}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":6309,"byte_end":6317,"line_start":176,"line_end":176,"column_start":22,"column_end":30},"kind":{"Impl":{"id":805}},"from":{"krate":1,"index":18452},"to":{"krate":0,"index":923}},{"span":{"file_name":"/Users/thomascnorton/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs","byte_start":7007,"byte_end":7022,"line_start":202,"line_end":202,"column_start":23,"column_end":38},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":4893},"to":{"krate":1,"index":9380}}]}